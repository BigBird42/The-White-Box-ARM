ARM GAS  /tmp/ccVJA96T.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.RCC_SetFlashLatencyFromMSIRange,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	RCC_SetFlashLatencyFromMSIRange:
  25              	.LFB322:
  26              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @file    stm32l4xx_hal_rcc.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..]
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       After reset the device is running from Multiple Speed Internal oscillator
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (4 MHz) with Flash 0 wait state. Flash prefetch buffer, D-Cache
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHBs) and Low speed (APBs) busses:
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           all peripherals mapped on these busses are running at MSI speed.
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) All GPIOs are in analog mode, except the JTAG pins which
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..]
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
ARM GAS  /tmp/ccVJA96T.s 			page 2


  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           derived from the System clock (SAIx, RTC, ADC, USB OTG FS/SDMMC1/RNG)
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @endverbatim
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ******************************************************************************
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @attention
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *      without specific prior written permission.
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ******************************************************************************
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #include "stm32l4xx_hal.h"
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @addtogroup STM32L4xx_HAL_Driver
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC RCC
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  * @{
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  */
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define HSE_TIMEOUT_VALUE          HSE_STARTUP_TIMEOUT
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define HSI_TIMEOUT_VALUE          ((uint32_t)2U)    /* 2 ms (minimum Tick + 1) */
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define MSI_TIMEOUT_VALUE          ((uint32_t)2U)    /* 2 ms (minimum Tick + 1) */  
ARM GAS  /tmp/ccVJA96T.s 			page 3


  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define LSI_TIMEOUT_VALUE          ((uint32_t)2U)    /* 2 ms (minimum Tick + 1) */
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define HSI48_TIMEOUT_VALUE        ((uint32_t)2U)    /* 2 ms (minimum Tick + 1) */
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define PLL_TIMEOUT_VALUE          ((uint32_t)2U)    /* 2 ms (minimum Tick + 1) */
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define CLOCKSWITCH_TIMEOUT_VALUE  ((uint32_t)5000U) /* 5 s    */
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define __MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define RCC_PLL_OSCSOURCE_CONFIG(__HAL_RCC_PLLSOURCE__) \
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             (MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, (uint32_t)(__HAL_RCC_PLLSOURCE__)))
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Private_Functions RCC Private Functions
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange);
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** static uint32_t          RCC_GetSysClockFreqFromPLLSource(void);
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Exported functions --------------------------------------------------------*/
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @verbatim
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..]
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal and external oscillators
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (HSE, HSI, LSE, MSI, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        and APB2).
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) HSI (high-speed internal): 16 MHz factory-trimmed RC used directly or through
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              the PLL as System clock source.
ARM GAS  /tmp/ccVJA96T.s 			page 4


 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) MSI (Mutiple Speed Internal): Its frequency is software trimmable from 100KHZ to 48MHZ
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              It can be used to generate the clock for the USB OTG FS (48 MHz).
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              The number of flash wait states is automatically adjusted when MSI range is updated wi
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              HAL_RCC_OscConfig() and the MSI is used as System clock source. 
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) LSI (low-speed internal): 32 KHz low consumption RC used as IWDG and/or RTC
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              clock source.
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) HSE (high-speed external): 4 to 48 MHz crystal oscillator used directly or
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also optionally as RTC clock sourc
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) LSE (low-speed external): 32.768 KHz oscillator used optionally as RTC clock source.
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) PLL (clocked by HSI, HSE or MSI) providing up to three independent output clocks:
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 80MHz).
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDMMC1 (<= 48 MHz).
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The third output is used to generate an accurate clock to achieve
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 high-quality audio performance on SAI interface.
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) PLLSAI1 (clocked by HSI, HSE or MSI) providing up to three independent output clocks:
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The first output is used to generate SAR ADC1 clock.
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDMMC1 (<= 48 MHz).
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The Third output is used to generate an accurate clock to achieve
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 high-quality audio performance on SAI interface.
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) PLLSAI2 (clocked by HSI , HSE or MSI) providing up to two independent output clocks:
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The first output is used to generate SAR ADC2 clock.
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The second  output is used to generate an accurate clock to achieve
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 high-quality audio performance on SAI interface.
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) CSS (Clock security system): once enabled, if a HSE clock failure occurs
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             (HSE used directly or through PLL as System clock source), the System clock
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              is automatically switched to HSI and an interrupt is generated if enabled.
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              The interrupt is linked to the Cortex-M4 NMI (Non-Maskable Interrupt)
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              exception vector.
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) MCO (microcontroller clock output): used to output MSI, LSI, HSI, LSE, HSE or
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              main PLL clock (through a configurable prescaler) on PA8 pin.
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) Several clock sources can be used to drive the System clock (SYSCLK): MSI, HSI,
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              HSE and main PLL.
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (+@) SAI: the SAI clock can be derived either from a specific PLL (PLLSAI1) or (PLLSAI2)
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 from an external clock mapped on the SAI_CKIN pin.
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 You have to use HAL_RCCEx_PeriphCLKConfig() function to configure this clock.
ARM GAS  /tmp/ccVJA96T.s 			page 5


 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (+@) RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 divided by 2 to 31.
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 You have to use __HAL_RCC_RTC_ENABLE() and HAL_RCCEx_PeriphCLKConfig() function
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 to configure this clock.
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (+@) USB OTG FS, SDMMC1 and RNG: USB OTG FS requires a frequency equal to 48 MHz
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 to work correctly, while the SDMMC1 and RNG peripherals require a frequency 
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 equal or lower than to 48 MHz. This clock is derived of the main PLL or PLLSAI1
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 through PLLQ divider. You have to enable the peripheral clock and use 
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 HAL_RCCEx_PeriphCLKConfig() function to configure this clock.
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (+@) IWDG clock which is always the LSI clock.
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) The maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 is 80 MHz. 
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              The clock source frequency should be adapted depending on the device voltage range
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              as listed in the Reference Manual "Clock source frequency versus voltage scaling" chap
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @endverbatim
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            Table 1. HCLK clock frequency for STM32L4Rx/STM32L4Sx devices
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            +--------------------------------------------------------+
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            | Latency         |     HCLK clock frequency (MHz)       |
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |--------------------------------------|
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |  voltage range 1  | voltage range 2  |
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |       1.2 V       |     1.0 V        |
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |0WS(1 CPU cycles)|   0 < HCLK <= 20  |  0 < HCLK <= 8   |
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |1WS(2 CPU cycles)|  20 < HCLK <= 40  |  8 < HCLK <= 16  |
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |2WS(3 CPU cycles)|  40 < HCLK <= 60  | 16 < HCLK <= 26  |
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |3WS(4 CPU cycles)|  60 < HCLK <= 80  | 16 < HCLK <= 26  |
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |4WS(5 CPU cycles)|  80 < HCLK <= 100 | 16 < HCLK <= 26  |
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |5WS(6 CPU cycles)| 100 < HCLK <= 120 | 16 < HCLK <= 26  |
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            +--------------------------------------------------------+
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            Table 2. HCLK clock frequency for other STM32L4 devices
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            +-------------------------------------------------------+
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            | Latency         |    HCLK clock frequency (MHz)       |
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |-------------------------------------|
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 | voltage range 1  | voltage range 2  |
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |      1.2 V       |     1.0 V        |
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |0WS(1 CPU cycles)|  0 < HCLK <= 16  |  0 < HCLK <= 6   |
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |1WS(2 CPU cycles)| 16 < HCLK <= 32  |  6 < HCLK <= 12  |
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |2WS(3 CPU cycles)| 32 < HCLK <= 48  | 12 < HCLK <= 18  |
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |3WS(4 CPU cycles)| 48 < HCLK <= 64  | 18 < HCLK <= 26  |
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |4WS(5 CPU cycles)| 64 < HCLK <= 80  | 18 < HCLK <= 26  |
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            +-------------------------------------------------------+
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
ARM GAS  /tmp/ccVJA96T.s 			page 6


 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Reset the RCC clock configuration to the default reset state.
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - MSI ON and used as system clock source
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - HSE, HSI, PLL, PLLSAI1 and PLLISAI2 OFF
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - CSS, MCO1 OFF
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - All interrupts disabled
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - Peripheral clocks
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_DeInit(void)
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Set MSION bit */
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_MSION);
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Insure MSIRDY bit is set before writing default MSIRANGE value */
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == RESET) { __NOP(); }
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Set MSIRANGE default value */
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   MODIFY_REG(RCC->CR, RCC_CR_MSIRANGE, RCC_MSIRANGE_6);
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset CFGR register (MSI is selected as system clock source) */
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset HSION, HSIKERON, HSIASFS, HSEON, HSECSSON, PLLON, PLLSAIxON bits */
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSION | RCC_CR_HSIKERON| RCC_CR_HSIASFS | RCC_CR_PLLON |
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSION | RCC_CR_HSIKERON| RCC_CR_HSIASFS | RCC_CR_PLLON |
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset PLLCFGR register */
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->PLLCFGR);
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN_4 );
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset PLLSAI1CFGR register */
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->PLLSAI1CFGR);
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLSAI1CFGR,  RCC_PLLSAI1CFGR_PLLSAI1N_4 );
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset PLLSAI2CFGR register */
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->PLLSAI2CFGR);
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLSAI2CFGR,  RCC_PLLSAI2CFGR_PLLSAI2N_4 );
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
ARM GAS  /tmp/ccVJA96T.s 			page 7


 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Disable all interrupts */
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->CIER);
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SystemCoreClock = MSI_VALUE;
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Initialize the RCC Oscillators according to the specified parameters in the
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct  pointer to an RCC_OscInitTypeDef structure that
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval HAL status
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart = 0;
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*----------------------------- MSI Configuration --------------------------*/
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_MSI(RCC_OscInitStruct->MSIState));
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* When the MSI is used as system clock it will not be disabled */
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_MSI) )
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(RCC->CR, RCC_CR_MSIRDY) != RESET) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        /* Otherwise, just the calibration and MSI range change are allowed */
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            must be correctly programmed according to the frequency of the CPU clock
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (HCLK) and the supply voltage of the device. */
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(RCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* First increase number of wait states update if necessary */
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
ARM GAS  /tmp/ccVJA96T.s 			page 8


 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_ERROR;
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Selects the Multiple Speed oscillator (MSI) clock range .*/
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         else
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Else, keep current flash latency while decreasing applies */
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Selects the Multiple Speed oscillator (MSI) clock range .*/
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Decrease number of wait states update if necessary */
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_ERROR;
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }          
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Update the SystemCoreClock global variable */
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >>
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Configure the source of time base considering new system clocks settings*/
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         HAL_InitTick (TICK_INT_PRIORITY);
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check the MSI State */
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (MSI). */
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_ENABLE();
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get timeout */
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till MSI is ready */
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == RESET)
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          /* Selects the Multiple Speed oscillator (MSI) clock range .*/
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccVJA96T.s 			page 9


 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (MSI). */
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_DISABLE();
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get timeout */
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till MSI is ready */
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) != RESET)
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || 
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RC
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(RCC->CR, RCC_CR_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check the HSE State */
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSE is ready */
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSERDY) == RESET)
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccVJA96T.s 			page 10


 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSERDY) != RESET)
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RC
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not be disabled */
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check the HSI State */
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
ARM GAS  /tmp/ccVJA96T.s 			page 11


 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) != RESET)
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the LSI State */
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == RESET)
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSI is disabled */
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != RESET)
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
ARM GAS  /tmp/ccVJA96T.s 			page 12


 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(RCC->APB1ENR1, RCC_APB1ENR1_PWREN))
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pwrclkchanged = SET;
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       SET_BIT(PWR->CR1, PWR_CR1_DBP);
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the LSE State */
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == RESET)
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
ARM GAS  /tmp/ccVJA96T.s 			page 13


 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSE is disabled */
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != RESET)
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------ HSI48 Configuration -----------------------*/
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the LSI State */
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (HSI48). */
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_HSI48_ENABLE();
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till HSI48 is ready */
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == RESET)
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (HSI48). */
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_HSI48_DISABLE();
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till HSI48 is disabled */
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) != RESET)
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
ARM GAS  /tmp/ccVJA96T.s 			page 14


 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Check the parameters */
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Disable the main PLL. */
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != RESET)
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLN,
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLP,
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLQ,
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLR);
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Enable the main PLL. */
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Enable PLL System Clock output. */
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccVJA96T.s 			page 15


 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == RESET)
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Disable the main PLL. */
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Disable all PLL outputs to save power if no PLLs on */
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == RESET)
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            && 
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) == RESET)
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           )
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {  
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, RCC_PLLSOURCE_NONE);
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_SAI3CLK);
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_SAI2CLK);
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != RESET)
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       return HAL_ERROR;
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return HAL_OK;
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Initialize the CPU, AHB and APB busses clocks according to the specified
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct  pointer to an RCC_OscInitTypeDef structure that
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
ARM GAS  /tmp/ccVJA96T.s 			page 16


 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  FLatency  FLASH Latency
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_0   FLASH 0 Latency cycle
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_1   FLASH 1 Latency cycle
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_2   FLASH 2 Latency cycles
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_3   FLASH 3 Latency cycles
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_4   FLASH 4 Latency cycles
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @if STM32L4S9xx
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_5   FLASH 5 Latency cycles
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_6   FLASH 6 Latency cycles
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_7   FLASH 7 Latency cycles
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_8   FLASH 8 Latency cycles
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_9   FLASH 9 Latency cycles
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_10  FLASH 10 Latency cycles
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_11  FLASH 11 Latency cycles
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_12  FLASH 12 Latency cycles
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_13  FLASH 13 Latency cycles
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_14  FLASH 14 Latency cycles
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_15  FLASH 15 Latency cycles
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @endif
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The MSI is used by default as system clock source after
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STANDBY mode. After restart from Reset,
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         the MSI frequency is set to its default value 4 MHz.
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The HSI can be selected as system clock source after
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         from STOP modes or in case of failure of the HSE used directly or indirectly 
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         as system clock (if the Clock Security System CSS is enabled).
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         occur when the clock source is ready.
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   You can use HAL_RCC_GetClockConfig() function to know which clock is
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         currently used as system clock source.
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart = 0;
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t pllfreq = 0;
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t hpre = RCC_SYSCLK_DIV1;
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
ARM GAS  /tmp/ccVJA96T.s 			page 17


 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       return HAL_ERROR;
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check the PLL ready flag */
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == RESET)
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Undershoot management when selection PLL as SYSCLK source and frequency above 80Mhz */
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Compute target PLL output frequency */
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pllfreq = RCC_GetSysClockFreqFromPLLSource();
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Intermediate step with HCLK prescaler 2 necessary before to go over 80Mhz */
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((pllfreq > 80000000U) && 
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (((((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK) && (RCC_Cl
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           ||
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           ((READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) == RCC_SYSCLK_DIV1))))
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         hpre = RCC_SYSCLK_DIV2;
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* HSE is selected as System Clock Source */
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Check the HSE ready flag */
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_HSERDY) == RESET)
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
ARM GAS  /tmp/ccVJA96T.s 			page 18


 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI is selected as System Clock Source */
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Check the MSI ready flag */
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == RESET)
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* HSI is selected as System Clock Source */
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Check the HSI ready flag */
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Overshoot management when going down from PLL as SYSCLK source and frequency above 80Mhz *
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pllfreq = HAL_RCC_GetSysClockFreq();
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Intermediate step with HCLK prescaler 2 necessary before to go under 80Mhz */
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(pllfreq > 80000000U)
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         hpre = RCC_SYSCLK_DIV2;
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Get Start Tick*/
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_HSE)
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
ARM GAS  /tmp/ccVJA96T.s 			page 19


1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_MSI)
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_HSI)
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Is intermediate HCLK prescaler 2 applied internally, complete with HCLK prescaler 1 */
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(hpre == RCC_SYSCLK_DIV2)
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV1);
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       return HAL_ERROR;
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
ARM GAS  /tmp/ccVJA96T.s 			page 20


1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_C
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return HAL_OK;
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions 
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  *
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** @verbatim
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..]
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to:
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     (+) Ouput clock to MCO pin.
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     (+) Retrieve current clock frequencies.
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     (+) Enable the Clock Security System.
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** @endverbatim
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Select the clock source to output on MCO pin(PA8).
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   PA8 should be configured in alternate function mode.
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_MCOx  specifies the output direction for the clock source.
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          For STM32L4xx family this parameter can have only one value:
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1  Clock source to output on MCO1 pin(PA8).
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_MCOSource  specifies the clock source to output.
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK  MCO output disabled, no clock on MCO
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK  system  clock selected as MCO source
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_MSI  MSI clock selected as MCO source
ARM GAS  /tmp/ccVJA96T.s 			page 21


1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI  HSI clock selected as MCO source
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE  HSE clock selected as MCO sourcee
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK  main PLL clock selected as MCO source
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI  LSI clock selected as MCO source
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE  LSE clock selected as MCO source
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @if STM32L443xx
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48  HSI48 clock selected as MCO source for devices with 
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @endif
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_MCODiv  specifies the MCO prescaler.
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1  no division applied to MCO clock
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2  division by 2 applied to MCO clock
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4  division by 4 applied to MCO clock
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8  division by 8 applied to MCO clock
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_MCOConfig( uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* MCO Clock Enable */
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   __MCO1_CLK_ENABLE();
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Configue the MCO1 pin in alternate function mode */
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Pin = MCO1_PIN;
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Mask MCOSEL[] and MCOPRE[] bits then set MCO1 clock source and prescaler */
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCOSEL | RCC_CFGR_MCOPRE), (RCC_MCOSource | RCC_MCODiv ));
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the SYSCLK frequency.
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         constant and the selected clock source:
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is MSI, function returns values based on MSI
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *             Value as defined by the MSI range.
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**),
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *           HSI_VALUE(*) or MSI Value multiplied/divided by the PLL factors.
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32l4xx_hal_conf.h file (default value
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *               in voltage and temperature.
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32l4xx_hal_conf.h file (default value
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
ARM GAS  /tmp/ccVJA96T.s 			page 22


1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *                have wrong result.
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         value for HSE crystal.
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval SYSCLK frequency
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t msirange = 0U, pllvco = 0U, pllsource = 0U, pllr = 2U, pllm = 2U;
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_MSI) ||
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* MSI or PLL with MSI source used as system clock source */
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Get SYSCLK source */
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == RESET)
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     { /* MSISRANGE from RCC_CSR applies */
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       msirange = (RCC->CSR & RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     { /* MSIRANGE from RCC_CR applies */
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       msirange = (RCC->CR & RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /*MSI frequency range in HZ*/
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     msirange = MSIRangeTable[msirange];
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_MSI)
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI used as system clock source */
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       sysclockfreq = msirange;
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else if(__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* HSI used as system clock source */
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = HSI_VALUE;
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else if(__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* HSE used as system clock source */
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = HSE_VALUE;
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL)
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* PLL used as system clock  source */
ARM GAS  /tmp/ccVJA96T.s 			page 23


1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     SYSCLK = PLL_VCO / PLLR
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     */
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     switch (pllsource)
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       break;
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       break;
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     case RCC_PLLSOURCE_MSI:  /* MSI used as PLL clock source */
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     default:
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pllvco = (msirange / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       break;
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = pllvco/pllr;
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return sysclockfreq;
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the HCLK frequency.
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval HCLK frequency in Hz
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return SystemCoreClock;
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the PCLK1 frequency.
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval PCLK1 frequency in Hz
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the PCLK2 frequency.
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
ARM GAS  /tmp/ccVJA96T.s 			page 24


1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval PCLK2 frequency in Hz
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Configure the RCC_OscInitStruct according to the internal
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         RCC configuration registers.
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct  pointer to an RCC_OscInitTypeDef structure that
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         will be configured.
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLA
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if((RCC->CR & RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else if((RCC->CR & RCC_CR_HSEON) == RCC_CR_HSEON)
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****    /* Get the MSI configuration -----------------------------------------------*/
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if((RCC->CR & RCC_CR_MSION) == RCC_CR_MSION)
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->MSIState = RCC_MSI_ON;
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->MSIState = RCC_MSI_OFF;
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->MSICalibrationValue = (uint32_t)((RCC->ICSCR & RCC_ICSCR_MSITRIM) >> RCC_ICSCR
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->MSIClockRange = (uint32_t)((RCC->CR & RCC_CR_MSIRANGE) );
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccVJA96T.s 			page 25


1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if((RCC->CR & RCC_CR_HSION) == RCC_CR_HSION)
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->ICSCR & RCC_ICSCR_HSITRIM) >> RCC_ICSCR
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if((RCC->BDCR & RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else if((RCC->BDCR & RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if((RCC->CSR & RCC_CSR_LSION) == RCC_CSR_LSION)
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the HSI48 configuration ---------------------------------------------*/
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if((RCC->CRRCR & RCC_CRRCR_HSI48ON) == RCC_CRRCR_HSI48ON)
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_ON;
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_OFF;
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->HSI48State = RCC_HSI48_OFF;
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if((RCC->CR & RCC_CR_PLLON) == RCC_CR_PLLON)
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccVJA96T.s 			page 26


1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)(((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_P
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Po
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_DIV_2_31_SUPPORT)
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLPDIV) >> RCC_PLLCFGR_PLLP
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) != RESET)
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLP = RCC_PLLP_DIV17;
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLP = RCC_PLLP_DIV7;
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLP_DIV_2_31_SUPPORT */
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Configure the RCC_ClkInitStruct according to the internal
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         RCC configuration registers.
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct  pointer to an RCC_ClkInitTypeDef structure that
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         will be configured.
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  pFLatency  Pointer on the Flash Latency.
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Enable the Clock Security System.
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
ARM GAS  /tmp/ccVJA96T.s 			page 27


1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The Clock Security System can only be cleared by reset.
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief Handle the RCC Clock Security System interrupt request.
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check RCC CSSF interrupt flag  */
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback.
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval none
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback should be implemented in the user file
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****    */
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Functions
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Update number of Flash wait states in line with MSI range and current 
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             voltage range.
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_11
ARM GAS  /tmp/ccVJA96T.s 			page 28


1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval HAL status
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
  27              		.loc 1 1518 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 83B0     		sub	sp, sp, #12
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
  41 0004 0546     		mov	r5, r0
  42              	.LVL1:
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t vos = 0;
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(__HAL_RCC_PWR_IS_CLK_ENABLED())
  43              		.loc 1 1522 0
  44 0006 204B     		ldr	r3, .L15
  45 0008 9B6D     		ldr	r3, [r3, #88]
  46 000a 13F0805F 		tst	r3, #268435456
  47 000e 0BD0     		beq	.L2
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     vos = HAL_PWREx_GetVoltageRange();
  48              		.loc 1 1524 0
  49 0010 FFF7FEFF 		bl	HAL_PWREx_GetVoltageRange
  50              	.LVL2:
  51              	.L3:
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_PWR_CLK_ENABLE();
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     vos = HAL_PWREx_GetVoltageRange();
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_PWR_CLK_DISABLE();
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(vos == PWR_REGULATOR_VOLTAGE_SCALE1)
  52              		.loc 1 1533 0
  53 0014 B0F5007F 		cmp	r0, #512
  54 0018 17D0     		beq	.L14
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(msirange > RCC_MSIRANGE_8)
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI > 16Mhz */
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(msirange > RCC_MSIRANGE_10)
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 48Mhz */
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_2; /* 2WS */
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
ARM GAS  /tmp/ccVJA96T.s 			page 29


1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 24Mhz or 32Mhz */
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_1; /* 1WS */
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* else MSI <= 16Mhz default FLASH_LATENCY_0 0WS */
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(msirange >= RCC_MSIRANGE_8)
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI >= 16Mhz */
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       latency = FLASH_LATENCY_2; /* 2WS */
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(msirange == RCC_MSIRANGE_7)
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 8Mhz */
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_1; /* 1WS */
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* else MSI < 8Mhz default FLASH_LATENCY_0 0WS */
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(msirange > RCC_MSIRANGE_8)
  55              		.loc 1 1569 0
  56 001a 802D     		cmp	r5, #128
  57 001c 1FD8     		bhi	.L9
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI > 16Mhz */
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       latency = FLASH_LATENCY_3; /* 3WS */
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(msirange == RCC_MSIRANGE_8)
  58              		.loc 1 1576 0
  59 001e 2DD0     		beq	.L10
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 16Mhz */
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_2; /* 2WS */
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else if(msirange == RCC_MSIRANGE_7) 
  60              		.loc 1 1581 0
  61 0020 702D     		cmp	r5, #112
  62 0022 2DD0     		beq	.L11
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   
  63              		.loc 1 1520 0
  64 0024 0021     		movs	r1, #0
  65 0026 1BE0     		b	.L5
  66              	.LVL3:
  67              	.L2:
  68              	.LBB4:
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     vos = HAL_PWREx_GetVoltageRange();
  69              		.loc 1 1528 0
  70 0028 174C     		ldr	r4, .L15
  71 002a A36D     		ldr	r3, [r4, #88]
ARM GAS  /tmp/ccVJA96T.s 			page 30


  72 002c 43F08053 		orr	r3, r3, #268435456
  73 0030 A365     		str	r3, [r4, #88]
  74 0032 A36D     		ldr	r3, [r4, #88]
  75 0034 03F08053 		and	r3, r3, #268435456
  76 0038 0193     		str	r3, [sp, #4]
  77 003a 019B     		ldr	r3, [sp, #4]
  78              	.LBE4:
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_PWR_CLK_DISABLE();
  79              		.loc 1 1529 0
  80 003c FFF7FEFF 		bl	HAL_PWREx_GetVoltageRange
  81              	.LVL4:
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
  82              		.loc 1 1530 0
  83 0040 A36D     		ldr	r3, [r4, #88]
  84 0042 23F08053 		bic	r3, r3, #268435456
  85 0046 A365     		str	r3, [r4, #88]
  86 0048 E4E7     		b	.L3
  87              	.L14:
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
  88              		.loc 1 1535 0
  89 004a 802D     		cmp	r5, #128
  90 004c 03D9     		bls	.L7
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
  91              		.loc 1 1538 0
  92 004e A02D     		cmp	r5, #160
  93 0050 03D9     		bls	.L8
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
  94              		.loc 1 1541 0
  95 0052 0221     		movs	r1, #2
  96 0054 04E0     		b	.L5
  97              	.L7:
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   
  98              		.loc 1 1520 0
  99 0056 0021     		movs	r1, #0
 100 0058 02E0     		b	.L5
 101              	.L8:
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 102              		.loc 1 1546 0
 103 005a 0121     		movs	r1, #1
 104 005c 00E0     		b	.L5
 105              	.L9:
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 106              		.loc 1 1572 0
 107 005e 0321     		movs	r1, #3
 108              	.L5:
 109              	.LVL5:
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 8Mhz */
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_1; /* 1WS */
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* else MSI < 8Mhz default FLASH_LATENCY_0 0WS */
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   __HAL_FLASH_SET_LATENCY(latency);
 110              		.loc 1 1591 0
ARM GAS  /tmp/ccVJA96T.s 			page 31


 111 0060 0A4A     		ldr	r2, .L15+4
 112 0062 1368     		ldr	r3, [r2]
 113 0064 23F00703 		bic	r3, r3, #7
 114 0068 0B43     		orrs	r3, r3, r1
 115 006a 1360     		str	r3, [r2]
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check that the new number of wait states is taken into account to access the Flash
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****      memory by reading the FLASH_ACR register */
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if((FLASH->ACR & FLASH_ACR_LATENCY) != latency)
 116              		.loc 1 1595 0
 117 006c 1368     		ldr	r3, [r2]
 118 006e 03F00703 		and	r3, r3, #7
 119 0072 9942     		cmp	r1, r3
 120 0074 06D0     		beq	.L12
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     return HAL_ERROR;
 121              		.loc 1 1597 0
 122 0076 0120     		movs	r0, #1
 123              	.LVL6:
 124              	.L6:
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return HAL_OK;
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 125              		.loc 1 1601 0
 126 0078 03B0     		add	sp, sp, #12
 127              	.LCFI2:
 128              		.cfi_remember_state
 129              		.cfi_def_cfa_offset 12
 130              		@ sp needed
 131 007a 30BD     		pop	{r4, r5, pc}
 132              	.LVL7:
 133              	.L10:
 134              	.LCFI3:
 135              		.cfi_restore_state
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 136              		.loc 1 1579 0
 137 007c 0221     		movs	r1, #2
 138 007e EFE7     		b	.L5
 139              	.L11:
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 140              		.loc 1 1584 0
 141 0080 0121     		movs	r1, #1
 142 0082 EDE7     		b	.L5
 143              	.LVL8:
 144              	.L12:
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 145              		.loc 1 1600 0
 146 0084 0020     		movs	r0, #0
 147              	.LVL9:
 148 0086 F7E7     		b	.L6
 149              	.L16:
 150              		.align	2
 151              	.L15:
 152 0088 00100240 		.word	1073876992
 153 008c 00200240 		.word	1073881088
 154              		.cfi_endproc
ARM GAS  /tmp/ccVJA96T.s 			page 32


 155              	.LFE322:
 157              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
 158              		.align	1
 159              		.global	HAL_RCC_DeInit
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	HAL_RCC_DeInit:
 166              	.LFB309:
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Set MSION bit */
 167              		.loc 1 276 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 172              		.loc 1 278 0
 173 0000 184A     		ldr	r2, .L20
 174 0002 1368     		ldr	r3, [r2]
 175 0004 43F00103 		orr	r3, r3, #1
 176 0008 1360     		str	r3, [r2]
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   
 177              		.loc 1 281 0
 178 000a 00E0     		b	.L18
 179              	.L19:
 180              	.LBB5:
 181              	.LBB6:
 182              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
ARM GAS  /tmp/ccVJA96T.s 			page 33


  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccVJA96T.s 			page 34


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccVJA96T.s 			page 35


 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
ARM GAS  /tmp/ccVJA96T.s 			page 36


 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccVJA96T.s 			page 37


 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccVJA96T.s 			page 38


 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
ARM GAS  /tmp/ccVJA96T.s 			page 39


 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 183              		.loc 2 375 0
 184              		.syntax unified
 185              	@ 375 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 186 000c 00BF     		nop
 187              	@ 0 "" 2
 188              		.thumb
 189              		.syntax unified
 190              	.L18:
 191              	.LBE6:
 192              	.LBE5:
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   
 193              		.loc 1 281 0 discriminator 1
 194 000e 154B     		ldr	r3, .L20
 195 0010 1B68     		ldr	r3, [r3]
 196 0012 13F0020F 		tst	r3, #2
 197 0016 F9D0     		beq	.L19
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   
 198              		.loc 1 284 0
 199 0018 124B     		ldr	r3, .L20
 200 001a 1A68     		ldr	r2, [r3]
 201 001c 22F0F002 		bic	r2, r2, #240
 202 0020 42F06002 		orr	r2, r2, #96
 203 0024 1A60     		str	r2, [r3]
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 204              		.loc 1 287 0
 205 0026 0022     		movs	r2, #0
 206 0028 9A60     		str	r2, [r3, #8]
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 207              		.loc 1 292 0
 208 002a 1868     		ldr	r0, [r3]
 209 002c 0E49     		ldr	r1, .L20+4
 210 002e 0140     		ands	r1, r1, r0
 211 0030 1960     		str	r1, [r3]
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN_4 );
 212              		.loc 1 301 0
 213 0032 DA60     		str	r2, [r3, #12]
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 214              		.loc 1 302 0
 215 0034 D968     		ldr	r1, [r3, #12]
 216 0036 41F48051 		orr	r1, r1, #4096
 217 003a D960     		str	r1, [r3, #12]
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLSAI1CFGR,  RCC_PLLSAI1CFGR_PLLSAI1N_4 );
 218              		.loc 1 305 0
 219 003c 1A61     		str	r2, [r3, #16]
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 220              		.loc 1 306 0
 221 003e 1969     		ldr	r1, [r3, #16]
 222 0040 41F48051 		orr	r1, r1, #4096
 223 0044 1961     		str	r1, [r3, #16]
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLSAI2CFGR,  RCC_PLLSAI2CFGR_PLLSAI2N_4 );
 224              		.loc 1 311 0
 225 0046 5A61     		str	r2, [r3, #20]
ARM GAS  /tmp/ccVJA96T.s 			page 40


 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   
 226              		.loc 1 312 0
 227 0048 5969     		ldr	r1, [r3, #20]
 228 004a 41F48051 		orr	r1, r1, #4096
 229 004e 5961     		str	r1, [r3, #20]
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 230              		.loc 1 317 0
 231 0050 1968     		ldr	r1, [r3]
 232 0052 21F48021 		bic	r1, r1, #262144
 233 0056 1960     		str	r1, [r3]
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 234              		.loc 1 320 0
 235 0058 9A61     		str	r2, [r3, #24]
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 236              		.loc 1 323 0
 237 005a 044A     		ldr	r2, .L20+8
 238 005c 044B     		ldr	r3, .L20+12
 239 005e 1A60     		str	r2, [r3]
 240 0060 7047     		bx	lr
 241              	.L21:
 242 0062 00BF     		.align	2
 243              	.L20:
 244 0064 00100240 		.word	1073876992
 245 0068 FFF4FEEA 		.word	-352389889
 246 006c 00093D00 		.word	4000000
 247 0070 00000000 		.word	SystemCoreClock
 248              		.cfi_endproc
 249              	.LFE309:
 251              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 252              		.align	1
 253              		.global	HAL_RCC_MCOConfig
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu fpv4-sp-d16
 259              	HAL_RCC_MCOConfig:
 260              	.LFB312:
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 261              		.loc 1 1134 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 24
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              	.LVL10:
 266 0000 70B5     		push	{r4, r5, r6, lr}
 267              	.LCFI4:
 268              		.cfi_def_cfa_offset 16
 269              		.cfi_offset 4, -16
 270              		.cfi_offset 5, -12
 271              		.cfi_offset 6, -8
 272              		.cfi_offset 14, -4
 273 0002 86B0     		sub	sp, sp, #24
 274              	.LCFI5:
 275              		.cfi_def_cfa_offset 40
 276 0004 0D46     		mov	r5, r1
 277 0006 1646     		mov	r6, r2
 278              	.LBB7:
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccVJA96T.s 			page 41


 279              		.loc 1 1142 0
 280 0008 0F4C     		ldr	r4, .L24
 281 000a E36C     		ldr	r3, [r4, #76]
 282 000c 43F00103 		orr	r3, r3, #1
 283 0010 E364     		str	r3, [r4, #76]
 284 0012 E36C     		ldr	r3, [r4, #76]
 285 0014 03F00103 		and	r3, r3, #1
 286 0018 0093     		str	r3, [sp]
 287 001a 009B     		ldr	r3, [sp]
 288              	.LBE7:
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 289              		.loc 1 1145 0
 290 001c 4FF48073 		mov	r3, #256
 291 0020 0193     		str	r3, [sp, #4]
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 292              		.loc 1 1146 0
 293 0022 0223     		movs	r3, #2
 294 0024 0293     		str	r3, [sp, #8]
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 295              		.loc 1 1147 0
 296 0026 0493     		str	r3, [sp, #16]
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 297              		.loc 1 1148 0
 298 0028 0023     		movs	r3, #0
 299 002a 0393     		str	r3, [sp, #12]
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 300              		.loc 1 1149 0
 301 002c 0593     		str	r3, [sp, #20]
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 302              		.loc 1 1150 0
 303 002e 01A9     		add	r1, sp, #4
 304              	.LVL11:
 305 0030 4FF09040 		mov	r0, #1207959552
 306              	.LVL12:
 307 0034 FFF7FEFF 		bl	HAL_GPIO_Init
 308              	.LVL13:
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 309              		.loc 1 1153 0
 310 0038 A268     		ldr	r2, [r4, #8]
 311 003a 22F0EE42 		bic	r2, r2, #1996488704
 312 003e 3543     		orrs	r5, r5, r6
 313              	.LVL14:
 314 0040 2A43     		orrs	r2, r2, r5
 315 0042 A260     		str	r2, [r4, #8]
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 316              		.loc 1 1154 0
 317 0044 06B0     		add	sp, sp, #24
 318              	.LCFI6:
 319              		.cfi_def_cfa_offset 16
 320              		@ sp needed
 321 0046 70BD     		pop	{r4, r5, r6, pc}
 322              	.LVL15:
 323              	.L25:
 324              		.align	2
 325              	.L24:
 326 0048 00100240 		.word	1073876992
 327              		.cfi_endproc
ARM GAS  /tmp/ccVJA96T.s 			page 42


 328              	.LFE312:
 330              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 331              		.align	1
 332              		.global	HAL_RCC_GetSysClockFreq
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 336              		.fpu fpv4-sp-d16
 338              	HAL_RCC_GetSysClockFreq:
 339              	.LFB313:
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t msirange = 0U, pllvco = 0U, pllsource = 0U, pllr = 2U, pllm = 2U;
 340              		.loc 1 1189 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344              		@ link register save eliminated.
 345              	.LVL16:
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_
 346              		.loc 1 1193 0
 347 0000 3B4B     		ldr	r3, .L43
 348 0002 9B68     		ldr	r3, [r3, #8]
 349 0004 13F00C0F 		tst	r3, #12
 350 0008 1AD0     		beq	.L27
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 351              		.loc 1 1194 0 discriminator 1
 352 000a 394B     		ldr	r3, .L43
 353 000c 9B68     		ldr	r3, [r3, #8]
 354 000e 03F00C03 		and	r3, r3, #12
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_
 355              		.loc 1 1193 0 discriminator 1
 356 0012 0C2B     		cmp	r3, #12
 357 0014 0ED0     		beq	.L41
 358              	.L28:
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 359              		.loc 1 1216 0
 360 0016 364B     		ldr	r3, .L43
 361 0018 9B68     		ldr	r3, [r3, #8]
 362 001a 03F00C03 		and	r3, r3, #12
 363 001e 042B     		cmp	r3, #4
 364 0020 2FD0     		beq	.L38
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 365              		.loc 1 1221 0
 366 0022 334B     		ldr	r3, .L43
 367 0024 9B68     		ldr	r3, [r3, #8]
 368 0026 03F00C03 		and	r3, r3, #12
 369 002a 082B     		cmp	r3, #8
 370 002c 2CD0     		beq	.L39
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 371              		.loc 1 1191 0
 372 002e 0020     		movs	r0, #0
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 373              		.loc 1 1190 0
 374 0030 0146     		mov	r1, r0
 375 0032 18E0     		b	.L31
 376              	.L41:
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 377              		.loc 1 1194 0
ARM GAS  /tmp/ccVJA96T.s 			page 43


 378 0034 2E4B     		ldr	r3, .L43
 379 0036 DB68     		ldr	r3, [r3, #12]
 380 0038 03F00303 		and	r3, r3, #3
 381 003c 012B     		cmp	r3, #1
 382 003e EAD1     		bne	.L28
 383              	.L27:
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     { /* MSISRANGE from RCC_CSR applies */
 384              		.loc 1 1199 0
 385 0040 2B4B     		ldr	r3, .L43
 386 0042 1B68     		ldr	r3, [r3]
 387 0044 13F0080F 		tst	r3, #8
 388 0048 14D1     		bne	.L29
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 389              		.loc 1 1201 0
 390 004a 294B     		ldr	r3, .L43
 391 004c D3F89430 		ldr	r3, [r3, #148]
 392 0050 C3F30323 		ubfx	r3, r3, #8, #4
 393              	.LVL17:
 394              	.L30:
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 395              		.loc 1 1208 0
 396 0054 274A     		ldr	r2, .L43+4
 397 0056 52F82310 		ldr	r1, [r2, r3, lsl #2]
 398              	.LVL18:
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 399              		.loc 1 1210 0
 400 005a 254B     		ldr	r3, .L43
 401 005c 9B68     		ldr	r3, [r3, #8]
 402 005e 13F00C0F 		tst	r3, #12
 403 0062 0CD0     		beq	.L37
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 404              		.loc 1 1191 0
 405 0064 0020     		movs	r0, #0
 406              	.LVL19:
 407              	.L31:
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 408              		.loc 1 1227 0
 409 0066 224A     		ldr	r2, .L43
 410 0068 9368     		ldr	r3, [r2, #8]
 411 006a 03F00C03 		and	r3, r3, #12
 412 006e 0C2B     		cmp	r3, #12
 413 0070 0DD0     		beq	.L42
 414              	.LVL20:
 415              	.L26:
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 416              		.loc 1 1257 0
 417 0072 7047     		bx	lr
 418              	.LVL21:
 419              	.L29:
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 420              		.loc 1 1205 0
 421 0074 1E4B     		ldr	r3, .L43
 422 0076 1B68     		ldr	r3, [r3]
 423 0078 C3F30313 		ubfx	r3, r3, #4, #4
 424              	.LVL22:
 425 007c EAE7     		b	.L30
 426              	.LVL23:
ARM GAS  /tmp/ccVJA96T.s 			page 44


 427              	.L37:
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 428              		.loc 1 1213 0
 429 007e 0846     		mov	r0, r1
 430 0080 F1E7     		b	.L31
 431              	.LVL24:
 432              	.L38:
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 433              		.loc 1 1219 0
 434 0082 1D48     		ldr	r0, .L43+8
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 435              		.loc 1 1190 0
 436 0084 0021     		movs	r1, #0
 437 0086 EEE7     		b	.L31
 438              	.L39:
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 439              		.loc 1 1224 0
 440 0088 1C48     		ldr	r0, .L43+12
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 441              		.loc 1 1190 0
 442 008a 0021     		movs	r1, #0
 443 008c EBE7     		b	.L31
 444              	.LVL25:
 445              	.L42:
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 446              		.loc 1 1234 0
 447 008e 1346     		mov	r3, r2
 448 0090 D268     		ldr	r2, [r2, #12]
 449 0092 02F00302 		and	r2, r2, #3
 450              	.LVL26:
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 451              		.loc 1 1235 0
 452 0096 DB68     		ldr	r3, [r3, #12]
 453 0098 C3F30213 		ubfx	r3, r3, #4, #3
 454 009c 0133     		adds	r3, r3, #1
 455              	.LVL27:
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 456              		.loc 1 1237 0
 457 009e 022A     		cmp	r2, #2
 458 00a0 0AD0     		beq	.L34
 459 00a2 032A     		cmp	r2, #3
 460 00a4 1AD0     		beq	.L35
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       break;
 461              		.loc 1 1249 0
 462 00a6 B1FBF3F3 		udiv	r3, r1, r3
 463              	.LVL28:
 464 00aa 114A     		ldr	r2, .L43
 465              	.LVL29:
 466 00ac D068     		ldr	r0, [r2, #12]
 467              	.LVL30:
 468 00ae C0F30620 		ubfx	r0, r0, #8, #7
 469 00b2 00FB03F0 		mul	r0, r0, r3
 470              	.LVL31:
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 471              		.loc 1 1250 0
 472 00b6 08E0     		b	.L36
 473              	.LVL32:
ARM GAS  /tmp/ccVJA96T.s 			page 45


 474              	.L34:
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       break;
 475              		.loc 1 1240 0
 476 00b8 0F48     		ldr	r0, .L43+8
 477              	.LVL33:
 478 00ba B0FBF3F3 		udiv	r3, r0, r3
 479              	.LVL34:
 480 00be 0C4A     		ldr	r2, .L43
 481              	.LVL35:
 482 00c0 D068     		ldr	r0, [r2, #12]
 483 00c2 C0F30620 		ubfx	r0, r0, #8, #7
 484 00c6 00FB03F0 		mul	r0, r0, r3
 485              	.LVL36:
 486              	.L36:
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = pllvco/pllr;
 487              		.loc 1 1252 0
 488 00ca 094B     		ldr	r3, .L43
 489 00cc DB68     		ldr	r3, [r3, #12]
 490 00ce C3F34163 		ubfx	r3, r3, #25, #2
 491 00d2 0133     		adds	r3, r3, #1
 492 00d4 5B00     		lsls	r3, r3, #1
 493              	.LVL37:
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 494              		.loc 1 1253 0
 495 00d6 B0FBF3F0 		udiv	r0, r0, r3
 496              	.LVL38:
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 497              		.loc 1 1256 0
 498 00da CAE7     		b	.L26
 499              	.LVL39:
 500              	.L35:
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       break;
 501              		.loc 1 1244 0
 502 00dc 0748     		ldr	r0, .L43+12
 503              	.LVL40:
 504 00de B0FBF3F3 		udiv	r3, r0, r3
 505              	.LVL41:
 506 00e2 034A     		ldr	r2, .L43
 507              	.LVL42:
 508 00e4 D068     		ldr	r0, [r2, #12]
 509 00e6 C0F30620 		ubfx	r0, r0, #8, #7
 510 00ea 00FB03F0 		mul	r0, r0, r3
 511              	.LVL43:
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 512              		.loc 1 1245 0
 513 00ee ECE7     		b	.L36
 514              	.L44:
 515              		.align	2
 516              	.L43:
 517 00f0 00100240 		.word	1073876992
 518 00f4 00000000 		.word	MSIRangeTable
 519 00f8 0024F400 		.word	16000000
 520 00fc 00127A00 		.word	8000000
 521              		.cfi_endproc
 522              	.LFE313:
 524              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 525              		.align	1
ARM GAS  /tmp/ccVJA96T.s 			page 46


 526              		.global	HAL_RCC_OscConfig
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 530              		.fpu fpv4-sp-d16
 532              	HAL_RCC_OscConfig:
 533              	.LFB310:
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart = 0;
 534              		.loc 1 341 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 8
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              	.LVL44:
 539 0000 70B5     		push	{r4, r5, r6, lr}
 540              	.LCFI7:
 541              		.cfi_def_cfa_offset 16
 542              		.cfi_offset 4, -16
 543              		.cfi_offset 5, -12
 544              		.cfi_offset 6, -8
 545              		.cfi_offset 14, -4
 546 0002 82B0     		sub	sp, sp, #8
 547              	.LCFI8:
 548              		.cfi_def_cfa_offset 24
 549 0004 0446     		mov	r4, r0
 550              	.LVL45:
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 551              		.loc 1 349 0
 552 0006 0368     		ldr	r3, [r0]
 553 0008 13F0100F 		tst	r3, #16
 554 000c 3FD0     		beq	.L46
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 555              		.loc 1 357 0
 556 000e 974B     		ldr	r3, .L145
 557 0010 9B68     		ldr	r3, [r3, #8]
 558 0012 13F00C0F 		tst	r3, #12
 559 0016 40F09280 		bne	.L47
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 560              		.loc 1 359 0
 561 001a 944B     		ldr	r3, .L145
 562 001c 1B68     		ldr	r3, [r3]
 563 001e 13F0020F 		tst	r3, #2
 564 0022 03D0     		beq	.L48
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 565              		.loc 1 359 0 is_stmt 0 discriminator 1
 566 0024 8369     		ldr	r3, [r0, #24]
 567 0026 002B     		cmp	r3, #0
 568 0028 00F09182 		beq	.L107
 569              	.L48:
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 570              		.loc 1 370 0 is_stmt 1
 571 002c 206A     		ldr	r0, [r4, #32]
 572              	.LVL46:
 573 002e 8F4B     		ldr	r3, .L145
 574 0030 1B68     		ldr	r3, [r3]
 575 0032 13F0080F 		tst	r3, #8
 576 0036 62D0     		beq	.L50
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
ARM GAS  /tmp/ccVJA96T.s 			page 47


 577              		.loc 1 370 0 is_stmt 0 discriminator 1
 578 0038 8C4B     		ldr	r3, .L145
 579 003a 1B68     		ldr	r3, [r3]
 580 003c 03F0F003 		and	r3, r3, #240
 581              	.L51:
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 582              		.loc 1 370 0 discriminator 4
 583 0040 8342     		cmp	r3, r0
 584 0042 63D2     		bcs	.L52
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 585              		.loc 1 373 0 is_stmt 1
 586 0044 FFF7FEFF 		bl	RCC_SetFlashLatencyFromMSIRange
 587              	.LVL47:
 588 0048 0028     		cmp	r0, #0
 589 004a 40F08782 		bne	.L108
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 590              		.loc 1 379 0
 591 004e 874B     		ldr	r3, .L145
 592 0050 1A68     		ldr	r2, [r3]
 593 0052 42F00802 		orr	r2, r2, #8
 594 0056 1A60     		str	r2, [r3]
 595 0058 1A68     		ldr	r2, [r3]
 596 005a 22F0F002 		bic	r2, r2, #240
 597 005e 216A     		ldr	r1, [r4, #32]
 598 0060 0A43     		orrs	r2, r2, r1
 599 0062 1A60     		str	r2, [r3]
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 600              		.loc 1 381 0
 601 0064 5A68     		ldr	r2, [r3, #4]
 602 0066 22F47F42 		bic	r2, r2, #65280
 603 006a E169     		ldr	r1, [r4, #28]
 604 006c 42EA0122 		orr	r2, r2, r1, lsl #8
 605 0070 5A60     		str	r2, [r3, #4]
 606              	.L53:
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         
 607              		.loc 1 399 0
 608 0072 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 609              	.LVL48:
 610 0076 7D4B     		ldr	r3, .L145
 611 0078 9B68     		ldr	r3, [r3, #8]
 612 007a C3F30313 		ubfx	r3, r3, #4, #4
 613 007e 7C4A     		ldr	r2, .L145+4
 614 0080 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 615 0082 D840     		lsrs	r0, r0, r3
 616 0084 7B4B     		ldr	r3, .L145+8
 617 0086 1860     		str	r0, [r3]
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 618              		.loc 1 402 0
 619 0088 0020     		movs	r0, #0
 620 008a FFF7FEFF 		bl	HAL_InitTick
 621              	.LVL49:
 622              	.L46:
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 623              		.loc 1 450 0
 624 008e 2368     		ldr	r3, [r4]
 625 0090 13F0010F 		tst	r3, #1
 626 0094 00F0A180 		beq	.L59
ARM GAS  /tmp/ccVJA96T.s 			page 48


 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RC
 627              		.loc 1 456 0
 628 0098 744B     		ldr	r3, .L145
 629 009a 9B68     		ldr	r3, [r3, #8]
 630 009c 03F00C03 		and	r3, r3, #12
 631 00a0 082B     		cmp	r3, #8
 632 00a2 00F09180 		beq	.L60
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 633              		.loc 1 457 0 discriminator 1
 634 00a6 714B     		ldr	r3, .L145
 635 00a8 9B68     		ldr	r3, [r3, #8]
 636 00aa 03F00C03 		and	r3, r3, #12
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RC
 637              		.loc 1 456 0 discriminator 1
 638 00ae 0C2B     		cmp	r3, #12
 639 00b0 00F08380 		beq	.L130
 640              	.L61:
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 641              		.loc 1 467 0
 642 00b4 6368     		ldr	r3, [r4, #4]
 643 00b6 B3F5803F 		cmp	r3, #65536
 644 00ba 00F0B580 		beq	.L131
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 645              		.loc 1 467 0 is_stmt 0 discriminator 2
 646 00be B3F5A02F 		cmp	r3, #327680
 647 00c2 00F0B780 		beq	.L132
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 648              		.loc 1 467 0 discriminator 4
 649 00c6 694B     		ldr	r3, .L145
 650 00c8 1A68     		ldr	r2, [r3]
 651 00ca 22F48032 		bic	r2, r2, #65536
 652 00ce 1A60     		str	r2, [r3]
 653 00d0 1A68     		ldr	r2, [r3]
 654 00d2 22F48022 		bic	r2, r2, #262144
 655 00d6 1A60     		str	r2, [r3]
 656              	.L63:
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 657              		.loc 1 470 0 is_stmt 1
 658 00d8 6368     		ldr	r3, [r4, #4]
 659 00da 002B     		cmp	r3, #0
 660 00dc 00F0B780 		beq	.L65
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 661              		.loc 1 473 0
 662 00e0 FFF7FEFF 		bl	HAL_GetTick
 663              	.LVL50:
 664 00e4 0546     		mov	r5, r0
 665              	.LVL51:
 666              	.L66:
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 667              		.loc 1 476 0
 668 00e6 614B     		ldr	r3, .L145
 669 00e8 1B68     		ldr	r3, [r3]
 670 00ea 13F4003F 		tst	r3, #131072
 671 00ee 74D1     		bne	.L59
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 672              		.loc 1 478 0
 673 00f0 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccVJA96T.s 			page 49


 674              	.LVL52:
 675 00f4 401B     		subs	r0, r0, r5
 676 00f6 6428     		cmp	r0, #100
 677 00f8 F5D9     		bls	.L66
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 678              		.loc 1 480 0
 679 00fa 0320     		movs	r0, #3
 680 00fc 35E2     		b	.L49
 681              	.LVL53:
 682              	.L50:
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 683              		.loc 1 370 0 discriminator 2
 684 00fe 5B4B     		ldr	r3, .L145
 685 0100 D3F89430 		ldr	r3, [r3, #148]
 686 0104 1B09     		lsrs	r3, r3, #4
 687 0106 03F0F003 		and	r3, r3, #240
 688 010a 99E7     		b	.L51
 689              	.L52:
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 690              		.loc 1 387 0
 691 010c 574B     		ldr	r3, .L145
 692 010e 1A68     		ldr	r2, [r3]
 693 0110 42F00802 		orr	r2, r2, #8
 694 0114 1A60     		str	r2, [r3]
 695 0116 1A68     		ldr	r2, [r3]
 696 0118 22F0F002 		bic	r2, r2, #240
 697 011c 216A     		ldr	r1, [r4, #32]
 698 011e 0A43     		orrs	r2, r2, r1
 699 0120 1A60     		str	r2, [r3]
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 700              		.loc 1 389 0
 701 0122 5A68     		ldr	r2, [r3, #4]
 702 0124 22F47F42 		bic	r2, r2, #65280
 703 0128 E169     		ldr	r1, [r4, #28]
 704 012a 42EA0122 		orr	r2, r2, r1, lsl #8
 705 012e 5A60     		str	r2, [r3, #4]
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 706              		.loc 1 392 0
 707 0130 206A     		ldr	r0, [r4, #32]
 708 0132 FFF7FEFF 		bl	RCC_SetFlashLatencyFromMSIRange
 709              	.LVL54:
 710 0136 0028     		cmp	r0, #0
 711 0138 9BD0     		beq	.L53
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }          
 712              		.loc 1 394 0
 713 013a 0120     		movs	r0, #1
 714 013c 15E2     		b	.L49
 715              	.LVL55:
 716              	.L47:
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 717              		.loc 1 408 0
 718 013e 8369     		ldr	r3, [r0, #24]
 719 0140 33B3     		cbz	r3, .L54
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 720              		.loc 1 411 0
 721 0142 4A4A     		ldr	r2, .L145
 722 0144 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccVJA96T.s 			page 50


 723 0146 43F00103 		orr	r3, r3, #1
 724 014a 1360     		str	r3, [r2]
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 725              		.loc 1 414 0
 726 014c FFF7FEFF 		bl	HAL_GetTick
 727              	.LVL56:
 728 0150 0546     		mov	r5, r0
 729              	.LVL57:
 730              	.L55:
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 731              		.loc 1 417 0
 732 0152 464B     		ldr	r3, .L145
 733 0154 1B68     		ldr	r3, [r3]
 734 0156 13F0020F 		tst	r3, #2
 735 015a 06D1     		bne	.L133
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 736              		.loc 1 419 0
 737 015c FFF7FEFF 		bl	HAL_GetTick
 738              	.LVL58:
 739 0160 401B     		subs	r0, r0, r5
 740 0162 0228     		cmp	r0, #2
 741 0164 F5D9     		bls	.L55
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 742              		.loc 1 421 0
 743 0166 0320     		movs	r0, #3
 744 0168 FFE1     		b	.L49
 745              	.L133:
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 746              		.loc 1 425 0
 747 016a 404B     		ldr	r3, .L145
 748 016c 1A68     		ldr	r2, [r3]
 749 016e 42F00802 		orr	r2, r2, #8
 750 0172 1A60     		str	r2, [r3]
 751 0174 1A68     		ldr	r2, [r3]
 752 0176 22F0F002 		bic	r2, r2, #240
 753 017a 216A     		ldr	r1, [r4, #32]
 754 017c 0A43     		orrs	r2, r2, r1
 755 017e 1A60     		str	r2, [r3]
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 756              		.loc 1 427 0
 757 0180 5A68     		ldr	r2, [r3, #4]
 758 0182 22F47F42 		bic	r2, r2, #65280
 759 0186 E169     		ldr	r1, [r4, #28]
 760 0188 42EA0122 		orr	r2, r2, r1, lsl #8
 761 018c 5A60     		str	r2, [r3, #4]
 762 018e 7EE7     		b	.L46
 763              	.LVL59:
 764              	.L54:
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 765              		.loc 1 433 0
 766 0190 364A     		ldr	r2, .L145
 767 0192 1368     		ldr	r3, [r2]
 768 0194 23F00103 		bic	r3, r3, #1
 769 0198 1360     		str	r3, [r2]
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 770              		.loc 1 436 0
 771 019a FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccVJA96T.s 			page 51


 772              	.LVL60:
 773 019e 0546     		mov	r5, r0
 774              	.LVL61:
 775              	.L57:
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 776              		.loc 1 439 0
 777 01a0 324B     		ldr	r3, .L145
 778 01a2 1B68     		ldr	r3, [r3]
 779 01a4 13F0020F 		tst	r3, #2
 780 01a8 3FF471AF 		beq	.L46
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 781              		.loc 1 441 0
 782 01ac FFF7FEFF 		bl	HAL_GetTick
 783              	.LVL62:
 784 01b0 401B     		subs	r0, r0, r5
 785 01b2 0228     		cmp	r0, #2
 786 01b4 F4D9     		bls	.L57
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 787              		.loc 1 443 0
 788 01b6 0320     		movs	r0, #3
 789 01b8 D7E1     		b	.L49
 790              	.LVL63:
 791              	.L130:
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 792              		.loc 1 457 0
 793 01ba 2C4B     		ldr	r3, .L145
 794 01bc DB68     		ldr	r3, [r3, #12]
 795 01be 03F00303 		and	r3, r3, #3
 796 01c2 032B     		cmp	r3, #3
 797 01c4 7FF476AF 		bne	.L61
 798              	.L60:
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 799              		.loc 1 459 0
 800 01c8 284B     		ldr	r3, .L145
 801 01ca 1B68     		ldr	r3, [r3]
 802 01cc 13F4003F 		tst	r3, #131072
 803 01d0 03D0     		beq	.L59
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 804              		.loc 1 459 0 is_stmt 0 discriminator 1
 805 01d2 6368     		ldr	r3, [r4, #4]
 806 01d4 002B     		cmp	r3, #0
 807 01d6 00F0C381 		beq	.L134
 808              	.L59:
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 809              		.loc 1 501 0 is_stmt 1
 810 01da 2368     		ldr	r3, [r4]
 811 01dc 13F0020F 		tst	r3, #2
 812 01e0 61D0     		beq	.L70
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RC
 813              		.loc 1 508 0
 814 01e2 224B     		ldr	r3, .L145
 815 01e4 9B68     		ldr	r3, [r3, #8]
 816 01e6 03F00C03 		and	r3, r3, #12
 817 01ea 042B     		cmp	r3, #4
 818 01ec 4AD0     		beq	.L71
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 819              		.loc 1 509 0 discriminator 1
ARM GAS  /tmp/ccVJA96T.s 			page 52


 820 01ee 1F4B     		ldr	r3, .L145
 821 01f0 9B68     		ldr	r3, [r3, #8]
 822 01f2 03F00C03 		and	r3, r3, #12
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RC
 823              		.loc 1 508 0 discriminator 1
 824 01f6 0C2B     		cmp	r3, #12
 825 01f8 3ED0     		beq	.L135
 826              	.L72:
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 827              		.loc 1 526 0
 828 01fa E368     		ldr	r3, [r4, #12]
 829 01fc 002B     		cmp	r3, #0
 830 01fe 78D0     		beq	.L74
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 831              		.loc 1 529 0
 832 0200 1A4A     		ldr	r2, .L145
 833 0202 1368     		ldr	r3, [r2]
 834 0204 43F48073 		orr	r3, r3, #256
 835 0208 1360     		str	r3, [r2]
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 836              		.loc 1 532 0
 837 020a FFF7FEFF 		bl	HAL_GetTick
 838              	.LVL64:
 839 020e 0546     		mov	r5, r0
 840              	.LVL65:
 841              	.L75:
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 842              		.loc 1 535 0
 843 0210 164B     		ldr	r3, .L145
 844 0212 1B68     		ldr	r3, [r3]
 845 0214 13F4806F 		tst	r3, #1024
 846 0218 62D1     		bne	.L136
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 847              		.loc 1 537 0
 848 021a FFF7FEFF 		bl	HAL_GetTick
 849              	.LVL66:
 850 021e 401B     		subs	r0, r0, r5
 851 0220 0228     		cmp	r0, #2
 852 0222 F5D9     		bls	.L75
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 853              		.loc 1 539 0
 854 0224 0320     		movs	r0, #3
 855 0226 A0E1     		b	.L49
 856              	.LVL67:
 857              	.L131:
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 858              		.loc 1 467 0 discriminator 1
 859 0228 104A     		ldr	r2, .L145
 860 022a 1368     		ldr	r3, [r2]
 861 022c 43F48033 		orr	r3, r3, #65536
 862 0230 1360     		str	r3, [r2]
 863 0232 51E7     		b	.L63
 864              	.L132:
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 865              		.loc 1 467 0 is_stmt 0 discriminator 3
 866 0234 03F18043 		add	r3, r3, #1073741824
 867 0238 A3F53C33 		sub	r3, r3, #192512
ARM GAS  /tmp/ccVJA96T.s 			page 53


 868 023c 1A68     		ldr	r2, [r3]
 869 023e 42F48022 		orr	r2, r2, #262144
 870 0242 1A60     		str	r2, [r3]
 871 0244 1A68     		ldr	r2, [r3]
 872 0246 42F48032 		orr	r2, r2, #65536
 873 024a 1A60     		str	r2, [r3]
 874 024c 44E7     		b	.L63
 875              	.L65:
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 876              		.loc 1 487 0 is_stmt 1
 877 024e FFF7FEFF 		bl	HAL_GetTick
 878              	.LVL68:
 879 0252 0546     		mov	r5, r0
 880              	.LVL69:
 881              	.L68:
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 882              		.loc 1 490 0
 883 0254 054B     		ldr	r3, .L145
 884 0256 1B68     		ldr	r3, [r3]
 885 0258 13F4003F 		tst	r3, #131072
 886 025c BDD0     		beq	.L59
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 887              		.loc 1 492 0
 888 025e FFF7FEFF 		bl	HAL_GetTick
 889              	.LVL70:
 890 0262 401B     		subs	r0, r0, r5
 891 0264 6428     		cmp	r0, #100
 892 0266 F5D9     		bls	.L68
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 893              		.loc 1 494 0
 894 0268 0320     		movs	r0, #3
 895 026a 7EE1     		b	.L49
 896              	.L146:
 897              		.align	2
 898              	.L145:
 899 026c 00100240 		.word	1073876992
 900 0270 00000000 		.word	AHBPrescTable
 901 0274 00000000 		.word	SystemCoreClock
 902              	.LVL71:
 903              	.L135:
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 904              		.loc 1 509 0
 905 0278 B64B     		ldr	r3, .L147
 906 027a DB68     		ldr	r3, [r3, #12]
 907 027c 03F00303 		and	r3, r3, #3
 908 0280 022B     		cmp	r3, #2
 909 0282 BAD1     		bne	.L72
 910              	.L71:
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 911              		.loc 1 512 0
 912 0284 B34B     		ldr	r3, .L147
 913 0286 1B68     		ldr	r3, [r3]
 914 0288 13F4806F 		tst	r3, #1024
 915 028c 03D0     		beq	.L73
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 916              		.loc 1 512 0 is_stmt 0 discriminator 1
 917 028e E368     		ldr	r3, [r4, #12]
ARM GAS  /tmp/ccVJA96T.s 			page 54


 918 0290 002B     		cmp	r3, #0
 919 0292 00F06781 		beq	.L115
 920              	.L73:
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 921              		.loc 1 520 0 is_stmt 1
 922 0296 AF4A     		ldr	r2, .L147
 923 0298 5368     		ldr	r3, [r2, #4]
 924 029a 23F0F853 		bic	r3, r3, #520093696
 925 029e 2169     		ldr	r1, [r4, #16]
 926 02a0 43EA0163 		orr	r3, r3, r1, lsl #24
 927 02a4 5360     		str	r3, [r2, #4]
 928              	.L70:
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 929              		.loc 1 566 0
 930 02a6 2368     		ldr	r3, [r4]
 931 02a8 13F0080F 		tst	r3, #8
 932 02ac 4CD0     		beq	.L79
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 933              		.loc 1 572 0
 934 02ae 6369     		ldr	r3, [r4, #20]
 935 02b0 9BB3     		cbz	r3, .L80
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 936              		.loc 1 575 0
 937 02b2 A84A     		ldr	r2, .L147
 938 02b4 D2F89430 		ldr	r3, [r2, #148]
 939 02b8 43F00103 		orr	r3, r3, #1
 940 02bc C2F89430 		str	r3, [r2, #148]
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 941              		.loc 1 578 0
 942 02c0 FFF7FEFF 		bl	HAL_GetTick
 943              	.LVL72:
 944 02c4 0546     		mov	r5, r0
 945              	.LVL73:
 946              	.L81:
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 947              		.loc 1 581 0
 948 02c6 A34B     		ldr	r3, .L147
 949 02c8 D3F89430 		ldr	r3, [r3, #148]
 950 02cc 13F0020F 		tst	r3, #2
 951 02d0 3AD1     		bne	.L79
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 952              		.loc 1 583 0
 953 02d2 FFF7FEFF 		bl	HAL_GetTick
 954              	.LVL74:
 955 02d6 401B     		subs	r0, r0, r5
 956 02d8 0228     		cmp	r0, #2
 957 02da F4D9     		bls	.L81
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 958              		.loc 1 585 0
 959 02dc 0320     		movs	r0, #3
 960 02de 44E1     		b	.L49
 961              	.L136:
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 962              		.loc 1 544 0
 963 02e0 9C4A     		ldr	r2, .L147
 964 02e2 5368     		ldr	r3, [r2, #4]
 965 02e4 23F0F853 		bic	r3, r3, #520093696
ARM GAS  /tmp/ccVJA96T.s 			page 55


 966 02e8 2169     		ldr	r1, [r4, #16]
 967 02ea 43EA0163 		orr	r3, r3, r1, lsl #24
 968 02ee 5360     		str	r3, [r2, #4]
 969 02f0 D9E7     		b	.L70
 970              	.LVL75:
 971              	.L74:
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 972              		.loc 1 549 0
 973 02f2 984A     		ldr	r2, .L147
 974 02f4 1368     		ldr	r3, [r2]
 975 02f6 23F48073 		bic	r3, r3, #256
 976 02fa 1360     		str	r3, [r2]
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 977              		.loc 1 552 0
 978 02fc FFF7FEFF 		bl	HAL_GetTick
 979              	.LVL76:
 980 0300 0546     		mov	r5, r0
 981              	.LVL77:
 982              	.L77:
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 983              		.loc 1 555 0
 984 0302 944B     		ldr	r3, .L147
 985 0304 1B68     		ldr	r3, [r3]
 986 0306 13F4806F 		tst	r3, #1024
 987 030a CCD0     		beq	.L70
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 988              		.loc 1 557 0
 989 030c FFF7FEFF 		bl	HAL_GetTick
 990              	.LVL78:
 991 0310 401B     		subs	r0, r0, r5
 992 0312 0228     		cmp	r0, #2
 993 0314 F5D9     		bls	.L77
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 994              		.loc 1 559 0
 995 0316 0320     		movs	r0, #3
 996 0318 27E1     		b	.L49
 997              	.LVL79:
 998              	.L80:
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 999              		.loc 1 592 0
 1000 031a 8E4A     		ldr	r2, .L147
 1001 031c D2F89430 		ldr	r3, [r2, #148]
 1002 0320 23F00103 		bic	r3, r3, #1
 1003 0324 C2F89430 		str	r3, [r2, #148]
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1004              		.loc 1 595 0
 1005 0328 FFF7FEFF 		bl	HAL_GetTick
 1006              	.LVL80:
 1007 032c 0546     		mov	r5, r0
 1008              	.LVL81:
 1009              	.L83:
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1010              		.loc 1 598 0
 1011 032e 894B     		ldr	r3, .L147
 1012 0330 D3F89430 		ldr	r3, [r3, #148]
 1013 0334 13F0020F 		tst	r3, #2
 1014 0338 06D0     		beq	.L79
ARM GAS  /tmp/ccVJA96T.s 			page 56


 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1015              		.loc 1 600 0
 1016 033a FFF7FEFF 		bl	HAL_GetTick
 1017              	.LVL82:
 1018 033e 401B     		subs	r0, r0, r5
 1019 0340 0228     		cmp	r0, #2
 1020 0342 F4D9     		bls	.L83
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 1021              		.loc 1 602 0
 1022 0344 0320     		movs	r0, #3
 1023 0346 10E1     		b	.L49
 1024              	.LVL83:
 1025              	.L79:
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 1026              		.loc 1 608 0
 1027 0348 2368     		ldr	r3, [r4]
 1028 034a 13F0040F 		tst	r3, #4
 1029 034e 7BD0     		beq	.L85
 1030              	.LVL84:
 1031              	.LBB8:
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1032              		.loc 1 617 0
 1033 0350 804B     		ldr	r3, .L147
 1034 0352 9B6D     		ldr	r3, [r3, #88]
 1035 0354 13F0805F 		tst	r3, #268435456
 1036 0358 36D1     		bne	.L120
 1037              	.LBB9:
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pwrclkchanged = SET;
 1038              		.loc 1 619 0
 1039 035a 7E4B     		ldr	r3, .L147
 1040 035c 9A6D     		ldr	r2, [r3, #88]
 1041 035e 42F08052 		orr	r2, r2, #268435456
 1042 0362 9A65     		str	r2, [r3, #88]
 1043 0364 9B6D     		ldr	r3, [r3, #88]
 1044 0366 03F08053 		and	r3, r3, #268435456
 1045 036a 0193     		str	r3, [sp, #4]
 1046 036c 019B     		ldr	r3, [sp, #4]
 1047              	.LVL85:
 1048              	.LBE9:
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 1049              		.loc 1 620 0
 1050 036e 0125     		movs	r5, #1
 1051              	.LVL86:
 1052              	.L86:
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1053              		.loc 1 623 0
 1054 0370 794B     		ldr	r3, .L147+4
 1055 0372 1B68     		ldr	r3, [r3]
 1056 0374 13F4807F 		tst	r3, #256
 1057 0378 28D0     		beq	.L137
 1058              	.L87:
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1059              		.loc 1 641 0
 1060 037a A368     		ldr	r3, [r4, #8]
 1061 037c 012B     		cmp	r3, #1
 1062 037e 39D0     		beq	.L138
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccVJA96T.s 			page 57


 1063              		.loc 1 641 0 is_stmt 0 discriminator 2
 1064 0380 052B     		cmp	r3, #5
 1065 0382 3FD0     		beq	.L139
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1066              		.loc 1 641 0 discriminator 4
 1067 0384 734B     		ldr	r3, .L147
 1068 0386 D3F89020 		ldr	r2, [r3, #144]
 1069 038a 22F00102 		bic	r2, r2, #1
 1070 038e C3F89020 		str	r2, [r3, #144]
 1071 0392 D3F89020 		ldr	r2, [r3, #144]
 1072 0396 22F00402 		bic	r2, r2, #4
 1073 039a C3F89020 		str	r2, [r3, #144]
 1074              	.L91:
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1075              		.loc 1 644 0 is_stmt 1
 1076 039e A368     		ldr	r3, [r4, #8]
 1077 03a0 002B     		cmp	r3, #0
 1078 03a2 3DD0     		beq	.L93
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1079              		.loc 1 647 0
 1080 03a4 FFF7FEFF 		bl	HAL_GetTick
 1081              	.LVL87:
 1082 03a8 0646     		mov	r6, r0
 1083              	.LVL88:
 1084              	.L94:
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1085              		.loc 1 650 0
 1086 03aa 6A4B     		ldr	r3, .L147
 1087 03ac D3F89030 		ldr	r3, [r3, #144]
 1088 03b0 13F0020F 		tst	r3, #2
 1089 03b4 46D1     		bne	.L96
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1090              		.loc 1 652 0
 1091 03b6 FFF7FEFF 		bl	HAL_GetTick
 1092              	.LVL89:
 1093 03ba 801B     		subs	r0, r0, r6
 1094 03bc 41F28833 		movw	r3, #5000
 1095 03c0 9842     		cmp	r0, r3
 1096 03c2 F2D9     		bls	.L94
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 1097              		.loc 1 654 0
 1098 03c4 0320     		movs	r0, #3
 1099 03c6 D0E0     		b	.L49
 1100              	.LVL90:
 1101              	.L120:
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     
 1102              		.loc 1 610 0
 1103 03c8 0025     		movs	r5, #0
 1104 03ca D1E7     		b	.L86
 1105              	.LVL91:
 1106              	.L137:
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       
 1107              		.loc 1 626 0
 1108 03cc 624A     		ldr	r2, .L147+4
 1109 03ce 1368     		ldr	r3, [r2]
 1110 03d0 43F48073 		orr	r3, r3, #256
 1111 03d4 1360     		str	r3, [r2]
ARM GAS  /tmp/ccVJA96T.s 			page 58


 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1112              		.loc 1 629 0
 1113 03d6 FFF7FEFF 		bl	HAL_GetTick
 1114              	.LVL92:
 1115 03da 0646     		mov	r6, r0
 1116              	.LVL93:
 1117              	.L88:
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1118              		.loc 1 631 0
 1119 03dc 5E4B     		ldr	r3, .L147+4
 1120 03de 1B68     		ldr	r3, [r3]
 1121 03e0 13F4807F 		tst	r3, #256
 1122 03e4 C9D1     		bne	.L87
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1123              		.loc 1 633 0
 1124 03e6 FFF7FEFF 		bl	HAL_GetTick
 1125              	.LVL94:
 1126 03ea 801B     		subs	r0, r0, r6
 1127 03ec 0228     		cmp	r0, #2
 1128 03ee F5D9     		bls	.L88
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 1129              		.loc 1 635 0
 1130 03f0 0320     		movs	r0, #3
 1131 03f2 BAE0     		b	.L49
 1132              	.LVL95:
 1133              	.L138:
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1134              		.loc 1 641 0 discriminator 1
 1135 03f4 574A     		ldr	r2, .L147
 1136 03f6 D2F89030 		ldr	r3, [r2, #144]
 1137 03fa 43F00103 		orr	r3, r3, #1
 1138 03fe C2F89030 		str	r3, [r2, #144]
 1139 0402 CCE7     		b	.L91
 1140              	.L139:
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1141              		.loc 1 641 0 is_stmt 0 discriminator 3
 1142 0404 534B     		ldr	r3, .L147
 1143 0406 D3F89020 		ldr	r2, [r3, #144]
 1144 040a 42F00402 		orr	r2, r2, #4
 1145 040e C3F89020 		str	r2, [r3, #144]
 1146 0412 D3F89020 		ldr	r2, [r3, #144]
 1147 0416 42F00102 		orr	r2, r2, #1
 1148 041a C3F89020 		str	r2, [r3, #144]
 1149 041e BEE7     		b	.L91
 1150              	.L93:
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1151              		.loc 1 661 0 is_stmt 1
 1152 0420 FFF7FEFF 		bl	HAL_GetTick
 1153              	.LVL96:
 1154 0424 0646     		mov	r6, r0
 1155              	.LVL97:
 1156              	.L97:
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1157              		.loc 1 664 0
 1158 0426 4B4B     		ldr	r3, .L147
 1159 0428 D3F89030 		ldr	r3, [r3, #144]
 1160 042c 13F0020F 		tst	r3, #2
ARM GAS  /tmp/ccVJA96T.s 			page 59


 1161 0430 08D0     		beq	.L96
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1162              		.loc 1 666 0
 1163 0432 FFF7FEFF 		bl	HAL_GetTick
 1164              	.LVL98:
 1165 0436 801B     		subs	r0, r0, r6
 1166 0438 41F28833 		movw	r3, #5000
 1167 043c 9842     		cmp	r0, r3
 1168 043e F2D9     		bls	.L97
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 1169              		.loc 1 668 0
 1170 0440 0320     		movs	r0, #3
 1171 0442 92E0     		b	.L49
 1172              	.L96:
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1173              		.loc 1 674 0
 1174 0444 002D     		cmp	r5, #0
 1175 0446 35D1     		bne	.L140
 1176              	.LVL99:
 1177              	.L85:
 1178              	.LBE8:
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 1179              		.loc 1 727 0
 1180 0448 A36A     		ldr	r3, [r4, #40]
 1181 044a 002B     		cmp	r3, #0
 1182 044c 00F08C80 		beq	.L124
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1183              		.loc 1 730 0
 1184 0450 404A     		ldr	r2, .L147
 1185 0452 9268     		ldr	r2, [r2, #8]
 1186 0454 02F00C02 		and	r2, r2, #12
 1187 0458 0C2A     		cmp	r2, #12
 1188 045a 00F08880 		beq	.L125
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1189              		.loc 1 732 0
 1190 045e 022B     		cmp	r3, #2
 1191 0460 2ED0     		beq	.L141
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1192              		.loc 1 786 0
 1193 0462 3C4B     		ldr	r3, .L147
 1194 0464 1A68     		ldr	r2, [r3]
 1195 0466 22F08072 		bic	r2, r2, #16777216
 1196 046a 1A60     		str	r2, [r3]
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 1197              		.loc 1 789 0
 1198 046c 1B68     		ldr	r3, [r3]
 1199 046e 13F0006F 		tst	r3, #134217728
 1200 0472 09D1     		bne	.L104
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 1201              		.loc 1 792 0
 1202 0474 374B     		ldr	r3, .L147
 1203 0476 1B68     		ldr	r3, [r3]
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) == RESET)
 1204              		.loc 1 791 0
 1205 0478 13F0005F 		tst	r3, #536870912
 1206 047c 04D1     		bne	.L104
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
ARM GAS  /tmp/ccVJA96T.s 			page 60


 1207              		.loc 1 796 0
 1208 047e 354A     		ldr	r2, .L147
 1209 0480 D368     		ldr	r3, [r2, #12]
 1210 0482 23F00303 		bic	r3, r3, #3
 1211 0486 D360     		str	r3, [r2, #12]
 1212              	.L104:
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 1213              		.loc 1 800 0
 1214 0488 324A     		ldr	r2, .L147
 1215 048a D368     		ldr	r3, [r2, #12]
 1216 048c 23F08873 		bic	r3, r3, #17825792
 1217 0490 23F48033 		bic	r3, r3, #65536
 1218 0494 D360     		str	r3, [r2, #12]
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1219              		.loc 1 806 0
 1220 0496 FFF7FEFF 		bl	HAL_GetTick
 1221              	.LVL100:
 1222 049a 0446     		mov	r4, r0
 1223              	.LVL101:
 1224              	.L105:
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1225              		.loc 1 809 0
 1226 049c 2D4B     		ldr	r3, .L147
 1227 049e 1B68     		ldr	r3, [r3]
 1228 04a0 13F0007F 		tst	r3, #33554432
 1229 04a4 51D0     		beq	.L142
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 1230              		.loc 1 811 0
 1231 04a6 FFF7FEFF 		bl	HAL_GetTick
 1232              	.LVL102:
 1233 04aa 001B     		subs	r0, r0, r4
 1234 04ac 0228     		cmp	r0, #2
 1235 04ae F5D9     		bls	.L105
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 1236              		.loc 1 813 0
 1237 04b0 0320     		movs	r0, #3
 1238 04b2 5AE0     		b	.L49
 1239              	.LVL103:
 1240              	.L140:
 1241              	.LBB10:
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 1242              		.loc 1 676 0
 1243 04b4 274A     		ldr	r2, .L147
 1244 04b6 936D     		ldr	r3, [r2, #88]
 1245 04b8 23F08053 		bic	r3, r3, #268435456
 1246 04bc 9365     		str	r3, [r2, #88]
 1247 04be C3E7     		b	.L85
 1248              	.LVL104:
 1249              	.L141:
 1250              	.LBE10:
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1251              		.loc 1 743 0
 1252 04c0 244A     		ldr	r2, .L147
 1253 04c2 1368     		ldr	r3, [r2]
 1254 04c4 23F08073 		bic	r3, r3, #16777216
 1255 04c8 1360     		str	r3, [r2]
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccVJA96T.s 			page 61


 1256              		.loc 1 746 0
 1257 04ca FFF7FEFF 		bl	HAL_GetTick
 1258              	.LVL105:
 1259 04ce 0546     		mov	r5, r0
 1260              	.LVL106:
 1261              	.L100:
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1262              		.loc 1 749 0
 1263 04d0 204B     		ldr	r3, .L147
 1264 04d2 1B68     		ldr	r3, [r3]
 1265 04d4 13F0007F 		tst	r3, #33554432
 1266 04d8 06D0     		beq	.L143
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 1267              		.loc 1 751 0
 1268 04da FFF7FEFF 		bl	HAL_GetTick
 1269              	.LVL107:
 1270 04de 401B     		subs	r0, r0, r5
 1271 04e0 0228     		cmp	r0, #2
 1272 04e2 F5D9     		bls	.L100
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 1273              		.loc 1 753 0
 1274 04e4 0320     		movs	r0, #3
 1275 04e6 40E0     		b	.L49
 1276              	.L143:
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 1277              		.loc 1 758 0
 1278 04e8 236B     		ldr	r3, [r4, #48]
 1279 04ea 5A1E     		subs	r2, r3, #1
 1280 04ec 636B     		ldr	r3, [r4, #52]
 1281 04ee 1B02     		lsls	r3, r3, #8
 1282 04f0 43EA0213 		orr	r3, r3, r2, lsl #4
 1283 04f4 A26B     		ldr	r2, [r4, #56]
 1284 04f6 1209     		lsrs	r2, r2, #4
 1285 04f8 43EA4243 		orr	r3, r3, r2, lsl #17
 1286 04fc E26A     		ldr	r2, [r4, #44]
 1287 04fe 1343     		orrs	r3, r3, r2
 1288 0500 E26B     		ldr	r2, [r4, #60]
 1289 0502 5208     		lsrs	r2, r2, #1
 1290 0504 013A     		subs	r2, r2, #1
 1291 0506 43EA4253 		orr	r3, r3, r2, lsl #21
 1292 050a 226C     		ldr	r2, [r4, #64]
 1293 050c 5208     		lsrs	r2, r2, #1
 1294 050e 013A     		subs	r2, r2, #1
 1295 0510 43EA4263 		orr	r3, r3, r2, lsl #25
 1296 0514 0F4A     		ldr	r2, .L147
 1297 0516 D360     		str	r3, [r2, #12]
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1298              		.loc 1 766 0
 1299 0518 1368     		ldr	r3, [r2]
 1300 051a 43F08073 		orr	r3, r3, #16777216
 1301 051e 1360     		str	r3, [r2]
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1302              		.loc 1 769 0
 1303 0520 D368     		ldr	r3, [r2, #12]
 1304 0522 43F08073 		orr	r3, r3, #16777216
 1305 0526 D360     		str	r3, [r2, #12]
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccVJA96T.s 			page 62


 1306              		.loc 1 772 0
 1307 0528 FFF7FEFF 		bl	HAL_GetTick
 1308              	.LVL108:
 1309 052c 0446     		mov	r4, r0
 1310              	.LVL109:
 1311              	.L102:
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1312              		.loc 1 775 0
 1313 052e 094B     		ldr	r3, .L147
 1314 0530 1B68     		ldr	r3, [r3]
 1315 0532 13F0007F 		tst	r3, #33554432
 1316 0536 06D1     		bne	.L144
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 1317              		.loc 1 777 0
 1318 0538 FFF7FEFF 		bl	HAL_GetTick
 1319              	.LVL110:
 1320 053c 001B     		subs	r0, r0, r4
 1321 053e 0228     		cmp	r0, #2
 1322 0540 F5D9     		bls	.L102
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 1323              		.loc 1 779 0
 1324 0542 0320     		movs	r0, #3
 1325 0544 11E0     		b	.L49
 1326              	.L144:
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 1327              		.loc 1 823 0
 1328 0546 0020     		movs	r0, #0
 1329 0548 0FE0     		b	.L49
 1330              	.L142:
 1331 054a 0020     		movs	r0, #0
 1332 054c 0DE0     		b	.L49
 1333              	.LVL111:
 1334              	.L107:
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 1335              		.loc 1 361 0
 1336 054e 0120     		movs	r0, #1
 1337              	.LVL112:
 1338 0550 0BE0     		b	.L49
 1339              	.L148:
 1340 0552 00BF     		.align	2
 1341              	.L147:
 1342 0554 00100240 		.word	1073876992
 1343 0558 00700040 		.word	1073770496
 1344              	.L108:
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 1345              		.loc 1 375 0
 1346 055c 0120     		movs	r0, #1
 1347 055e 04E0     		b	.L49
 1348              	.LVL113:
 1349              	.L134:
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 1350              		.loc 1 461 0
 1351 0560 0120     		movs	r0, #1
 1352 0562 02E0     		b	.L49
 1353              	.L115:
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 1354              		.loc 1 514 0
ARM GAS  /tmp/ccVJA96T.s 			page 63


 1355 0564 0120     		movs	r0, #1
 1356 0566 00E0     		b	.L49
 1357              	.L124:
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 1358              		.loc 1 823 0
 1359 0568 0020     		movs	r0, #0
 1360              	.LVL114:
 1361              	.L49:
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1362              		.loc 1 824 0
 1363 056a 02B0     		add	sp, sp, #8
 1364              	.LCFI9:
 1365              		.cfi_remember_state
 1366              		.cfi_def_cfa_offset 16
 1367              		@ sp needed
 1368 056c 70BD     		pop	{r4, r5, r6, pc}
 1369              	.LVL115:
 1370              	.L125:
 1371              	.LCFI10:
 1372              		.cfi_restore_state
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 1373              		.loc 1 820 0
 1374 056e 0120     		movs	r0, #1
 1375 0570 FBE7     		b	.L49
 1376              		.cfi_endproc
 1377              	.LFE310:
 1379 0572 00BF     		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1380              		.align	1
 1381              		.global	HAL_RCC_ClockConfig
 1382              		.syntax unified
 1383              		.thumb
 1384              		.thumb_func
 1385              		.fpu fpv4-sp-d16
 1387              	HAL_RCC_ClockConfig:
 1388              	.LFB311:
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart = 0;
 1389              		.loc 1 877 0
 1390              		.cfi_startproc
 1391              		@ args = 0, pretend = 0, frame = 0
 1392              		@ frame_needed = 0, uses_anonymous_args = 0
 1393              	.LVL116:
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 1394              		.loc 1 894 0
 1395 0000 664B     		ldr	r3, .L189
 1396 0002 1B68     		ldr	r3, [r3]
 1397 0004 03F00703 		and	r3, r3, #7
 1398 0008 8B42     		cmp	r3, r1
 1399 000a 0CD2     		bcs	.L150
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1400              		.loc 1 897 0
 1401 000c 634A     		ldr	r2, .L189
 1402 000e 1368     		ldr	r3, [r2]
 1403 0010 23F00703 		bic	r3, r3, #7
 1404 0014 0B43     		orrs	r3, r3, r1
 1405 0016 1360     		str	r3, [r2]
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1406              		.loc 1 901 0
ARM GAS  /tmp/ccVJA96T.s 			page 64


 1407 0018 1368     		ldr	r3, [r2]
 1408 001a 03F00703 		and	r3, r3, #7
 1409 001e 9942     		cmp	r1, r3
 1410 0020 01D0     		beq	.L150
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 1411              		.loc 1 903 0
 1412 0022 0120     		movs	r0, #1
 1413              	.LVL117:
 1414 0024 7047     		bx	lr
 1415              	.LVL118:
 1416              	.L150:
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart = 0;
 1417              		.loc 1 877 0
 1418 0026 70B5     		push	{r4, r5, r6, lr}
 1419              	.LCFI11:
 1420              		.cfi_def_cfa_offset 16
 1421              		.cfi_offset 4, -16
 1422              		.cfi_offset 5, -12
 1423              		.cfi_offset 6, -8
 1424              		.cfi_offset 14, -4
 1425 0028 0D46     		mov	r5, r1
 1426 002a 0446     		mov	r4, r0
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 1427              		.loc 1 908 0
 1428 002c 0368     		ldr	r3, [r0]
 1429 002e 13F0010F 		tst	r3, #1
 1430 0032 6CD0     		beq	.L152
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1431              		.loc 1 913 0
 1432 0034 4368     		ldr	r3, [r0, #4]
 1433 0036 032B     		cmp	r3, #3
 1434 0038 0AD0     		beq	.L186
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1435              		.loc 1 939 0
 1436 003a 022B     		cmp	r3, #2
 1437 003c 2DD0     		beq	.L187
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1438              		.loc 1 948 0
 1439 003e 002B     		cmp	r3, #0
 1440 0040 32D1     		bne	.L156
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1441              		.loc 1 951 0
 1442 0042 574A     		ldr	r2, .L189+4
 1443 0044 1268     		ldr	r2, [r2]
 1444 0046 12F0020F 		tst	r2, #2
 1445 004a 07D1     		bne	.L154
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 1446              		.loc 1 953 0
 1447 004c 0120     		movs	r0, #1
 1448              	.LVL119:
 1449 004e 70BD     		pop	{r4, r5, r6, pc}
 1450              	.LVL120:
 1451              	.L186:
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1452              		.loc 1 916 0
 1453 0050 534A     		ldr	r2, .L189+4
 1454 0052 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccVJA96T.s 			page 65


 1455 0054 12F0007F 		tst	r2, #33554432
 1456 0058 00F09E80 		beq	.L188
 1457              	.L154:
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1458              		.loc 1 979 0
 1459 005c 5049     		ldr	r1, .L189+4
 1460              	.LVL121:
 1461 005e 8A68     		ldr	r2, [r1, #8]
 1462 0060 22F00302 		bic	r2, r2, #3
 1463 0064 1343     		orrs	r3, r3, r2
 1464 0066 8B60     		str	r3, [r1, #8]
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1465              		.loc 1 982 0
 1466 0068 FFF7FEFF 		bl	HAL_GetTick
 1467              	.LVL122:
 1468 006c 0646     		mov	r6, r0
 1469              	.LVL123:
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1470              		.loc 1 984 0
 1471 006e 6368     		ldr	r3, [r4, #4]
 1472 0070 032B     		cmp	r3, #3
 1473 0072 20D0     		beq	.L157
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1474              		.loc 1 996 0
 1475 0074 022B     		cmp	r3, #2
 1476 0076 2DD0     		beq	.L160
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1477              		.loc 1 1006 0
 1478 0078 002B     		cmp	r3, #0
 1479 007a 3AD0     		beq	.L163
 1480              	.LVL124:
 1481              	.L164:
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1482              		.loc 1 1018 0
 1483 007c 484B     		ldr	r3, .L189+4
 1484 007e 9B68     		ldr	r3, [r3, #8]
 1485 0080 03F00C03 		and	r3, r3, #12
 1486 0084 042B     		cmp	r3, #4
 1487 0086 42D0     		beq	.L152
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 1488              		.loc 1 1020 0
 1489 0088 FFF7FEFF 		bl	HAL_GetTick
 1490              	.LVL125:
 1491 008c 801B     		subs	r0, r0, r6
 1492 008e 41F28833 		movw	r3, #5000
 1493 0092 9842     		cmp	r0, r3
 1494 0094 F2D9     		bls	.L164
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 1495              		.loc 1 1022 0
 1496 0096 0320     		movs	r0, #3
 1497 0098 70BD     		pop	{r4, r5, r6, pc}
 1498              	.LVL126:
 1499              	.L187:
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1500              		.loc 1 942 0
 1501 009a 414A     		ldr	r2, .L189+4
 1502 009c 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccVJA96T.s 			page 66


 1503 009e 12F4003F 		tst	r2, #131072
 1504 00a2 DBD1     		bne	.L154
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 1505              		.loc 1 944 0
 1506 00a4 0120     		movs	r0, #1
 1507              	.LVL127:
 1508 00a6 70BD     		pop	{r4, r5, r6, pc}
 1509              	.LVL128:
 1510              	.L156:
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1511              		.loc 1 960 0
 1512 00a8 3D4A     		ldr	r2, .L189+4
 1513 00aa 1268     		ldr	r2, [r2]
 1514 00ac 12F4806F 		tst	r2, #1024
 1515 00b0 D4D1     		bne	.L154
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 1516              		.loc 1 962 0
 1517 00b2 0120     		movs	r0, #1
 1518              	.LVL129:
 1519 00b4 70BD     		pop	{r4, r5, r6, pc}
 1520              	.LVL130:
 1521              	.L157:
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1522              		.loc 1 986 0
 1523 00b6 3A4B     		ldr	r3, .L189+4
 1524 00b8 9B68     		ldr	r3, [r3, #8]
 1525 00ba 03F00C03 		and	r3, r3, #12
 1526 00be 0C2B     		cmp	r3, #12
 1527 00c0 25D0     		beq	.L152
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1528              		.loc 1 988 0
 1529 00c2 FFF7FEFF 		bl	HAL_GetTick
 1530              	.LVL131:
 1531 00c6 801B     		subs	r0, r0, r6
 1532 00c8 41F28833 		movw	r3, #5000
 1533 00cc 9842     		cmp	r0, r3
 1534 00ce F2D9     		bls	.L157
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 1535              		.loc 1 990 0
 1536 00d0 0320     		movs	r0, #3
 1537 00d2 70BD     		pop	{r4, r5, r6, pc}
 1538              	.LVL132:
 1539              	.L160:
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1540              		.loc 1 998 0
 1541 00d4 324B     		ldr	r3, .L189+4
 1542 00d6 9B68     		ldr	r3, [r3, #8]
 1543 00d8 03F00C03 		and	r3, r3, #12
 1544 00dc 082B     		cmp	r3, #8
 1545 00de 16D0     		beq	.L152
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 1546              		.loc 1 1000 0
 1547 00e0 FFF7FEFF 		bl	HAL_GetTick
 1548              	.LVL133:
 1549 00e4 801B     		subs	r0, r0, r6
 1550 00e6 41F28833 		movw	r3, #5000
 1551 00ea 9842     		cmp	r0, r3
ARM GAS  /tmp/ccVJA96T.s 			page 67


 1552 00ec F2D9     		bls	.L160
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 1553              		.loc 1 1002 0
 1554 00ee 0320     		movs	r0, #3
 1555 00f0 70BD     		pop	{r4, r5, r6, pc}
 1556              	.LVL134:
 1557              	.L163:
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1558              		.loc 1 1008 0
 1559 00f2 2B4B     		ldr	r3, .L189+4
 1560 00f4 9B68     		ldr	r3, [r3, #8]
 1561 00f6 13F00C0F 		tst	r3, #12
 1562 00fa 08D0     		beq	.L152
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 1563              		.loc 1 1010 0
 1564 00fc FFF7FEFF 		bl	HAL_GetTick
 1565              	.LVL135:
 1566 0100 801B     		subs	r0, r0, r6
 1567 0102 41F28833 		movw	r3, #5000
 1568 0106 9842     		cmp	r0, r3
 1569 0108 F3D9     		bls	.L163
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 1570              		.loc 1 1012 0
 1571 010a 0320     		movs	r0, #3
 1572 010c 70BD     		pop	{r4, r5, r6, pc}
 1573              	.LVL136:
 1574              	.L152:
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 1575              		.loc 1 1030 0
 1576 010e 2368     		ldr	r3, [r4]
 1577 0110 13F0020F 		tst	r3, #2
 1578 0114 06D0     		beq	.L167
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1579              		.loc 1 1033 0
 1580 0116 224A     		ldr	r2, .L189+4
 1581 0118 9368     		ldr	r3, [r2, #8]
 1582 011a 23F0F003 		bic	r3, r3, #240
 1583 011e A168     		ldr	r1, [r4, #8]
 1584 0120 0B43     		orrs	r3, r3, r1
 1585 0122 9360     		str	r3, [r2, #8]
 1586              	.L167:
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 1587              		.loc 1 1047 0
 1588 0124 1D4B     		ldr	r3, .L189
 1589 0126 1B68     		ldr	r3, [r3]
 1590 0128 03F00703 		and	r3, r3, #7
 1591 012c 9D42     		cmp	r5, r3
 1592 012e 0CD2     		bcs	.L168
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1593              		.loc 1 1050 0
 1594 0130 1A4A     		ldr	r2, .L189
 1595 0132 1368     		ldr	r3, [r2]
 1596 0134 23F00703 		bic	r3, r3, #7
 1597 0138 2B43     		orrs	r3, r3, r5
 1598 013a 1360     		str	r3, [r2]
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1599              		.loc 1 1054 0
ARM GAS  /tmp/ccVJA96T.s 			page 68


 1600 013c 1368     		ldr	r3, [r2]
 1601 013e 03F00703 		and	r3, r3, #7
 1602 0142 9D42     		cmp	r5, r3
 1603 0144 01D0     		beq	.L168
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 1604              		.loc 1 1056 0
 1605 0146 0120     		movs	r0, #1
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1606              		.loc 1 1081 0
 1607 0148 70BD     		pop	{r4, r5, r6, pc}
 1608              	.LVL137:
 1609              	.L168:
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 1610              		.loc 1 1061 0
 1611 014a 2368     		ldr	r3, [r4]
 1612 014c 13F0040F 		tst	r3, #4
 1613 0150 06D0     		beq	.L169
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1614              		.loc 1 1064 0
 1615 0152 134A     		ldr	r2, .L189+4
 1616 0154 9368     		ldr	r3, [r2, #8]
 1617 0156 23F4E063 		bic	r3, r3, #1792
 1618 015a E168     		ldr	r1, [r4, #12]
 1619 015c 0B43     		orrs	r3, r3, r1
 1620 015e 9360     		str	r3, [r2, #8]
 1621              	.L169:
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 1622              		.loc 1 1068 0
 1623 0160 2368     		ldr	r3, [r4]
 1624 0162 13F0080F 		tst	r3, #8
 1625 0166 07D0     		beq	.L170
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1626              		.loc 1 1071 0
 1627 0168 0D4A     		ldr	r2, .L189+4
 1628 016a 9368     		ldr	r3, [r2, #8]
 1629 016c 23F46053 		bic	r3, r3, #14336
 1630 0170 2169     		ldr	r1, [r4, #16]
 1631 0172 43EAC103 		orr	r3, r3, r1, lsl #3
 1632 0176 9360     		str	r3, [r2, #8]
 1633              	.L170:
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1634              		.loc 1 1075 0
 1635 0178 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1636              	.LVL138:
 1637 017c 084B     		ldr	r3, .L189+4
 1638 017e 9B68     		ldr	r3, [r3, #8]
 1639 0180 C3F30313 		ubfx	r3, r3, #4, #4
 1640 0184 074A     		ldr	r2, .L189+8
 1641 0186 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1642 0188 D840     		lsrs	r0, r0, r3
 1643 018a 074B     		ldr	r3, .L189+12
 1644 018c 1860     		str	r0, [r3]
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1645              		.loc 1 1078 0
 1646 018e 0020     		movs	r0, #0
 1647 0190 FFF7FEFF 		bl	HAL_InitTick
 1648              	.LVL139:
ARM GAS  /tmp/ccVJA96T.s 			page 69


1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 1649              		.loc 1 1080 0
 1650 0194 0020     		movs	r0, #0
 1651 0196 70BD     		pop	{r4, r5, r6, pc}
 1652              	.LVL140:
 1653              	.L188:
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 1654              		.loc 1 918 0
 1655 0198 0120     		movs	r0, #1
 1656              	.LVL141:
 1657 019a 70BD     		pop	{r4, r5, r6, pc}
 1658              	.LVL142:
 1659              	.L190:
 1660              		.align	2
 1661              	.L189:
 1662 019c 00200240 		.word	1073881088
 1663 01a0 00100240 		.word	1073876992
 1664 01a4 00000000 		.word	AHBPrescTable
 1665 01a8 00000000 		.word	SystemCoreClock
 1666              		.cfi_endproc
 1667              	.LFE311:
 1669              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1670              		.align	1
 1671              		.global	HAL_RCC_GetHCLKFreq
 1672              		.syntax unified
 1673              		.thumb
 1674              		.thumb_func
 1675              		.fpu fpv4-sp-d16
 1677              	HAL_RCC_GetHCLKFreq:
 1678              	.LFB314:
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return SystemCoreClock;
 1679              		.loc 1 1268 0
 1680              		.cfi_startproc
 1681              		@ args = 0, pretend = 0, frame = 0
 1682              		@ frame_needed = 0, uses_anonymous_args = 0
 1683              		@ link register save eliminated.
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1684              		.loc 1 1270 0
 1685 0000 014B     		ldr	r3, .L192
 1686 0002 1868     		ldr	r0, [r3]
 1687 0004 7047     		bx	lr
 1688              	.L193:
 1689 0006 00BF     		.align	2
 1690              	.L192:
 1691 0008 00000000 		.word	SystemCoreClock
 1692              		.cfi_endproc
 1693              	.LFE314:
 1695              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1696              		.align	1
 1697              		.global	HAL_RCC_GetPCLK1Freq
 1698              		.syntax unified
 1699              		.thumb
 1700              		.thumb_func
 1701              		.fpu fpv4-sp-d16
 1703              	HAL_RCC_GetPCLK1Freq:
 1704              	.LFB315:
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
ARM GAS  /tmp/ccVJA96T.s 			page 70


 1705              		.loc 1 1279 0
 1706              		.cfi_startproc
 1707              		@ args = 0, pretend = 0, frame = 0
 1708              		@ frame_needed = 0, uses_anonymous_args = 0
 1709 0000 08B5     		push	{r3, lr}
 1710              	.LCFI12:
 1711              		.cfi_def_cfa_offset 8
 1712              		.cfi_offset 3, -8
 1713              		.cfi_offset 14, -4
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 1714              		.loc 1 1281 0
 1715 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1716              	.LVL143:
 1717 0006 044B     		ldr	r3, .L196
 1718 0008 9B68     		ldr	r3, [r3, #8]
 1719 000a C3F30223 		ubfx	r3, r3, #8, #3
 1720 000e 034A     		ldr	r2, .L196+4
 1721 0010 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1722              		.loc 1 1282 0
 1723 0012 D840     		lsrs	r0, r0, r3
 1724 0014 08BD     		pop	{r3, pc}
 1725              	.L197:
 1726 0016 00BF     		.align	2
 1727              	.L196:
 1728 0018 00100240 		.word	1073876992
 1729 001c 00000000 		.word	APBPrescTable
 1730              		.cfi_endproc
 1731              	.LFE315:
 1733              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1734              		.align	1
 1735              		.global	HAL_RCC_GetPCLK2Freq
 1736              		.syntax unified
 1737              		.thumb
 1738              		.thumb_func
 1739              		.fpu fpv4-sp-d16
 1741              	HAL_RCC_GetPCLK2Freq:
 1742              	.LFB316:
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 1743              		.loc 1 1291 0
 1744              		.cfi_startproc
 1745              		@ args = 0, pretend = 0, frame = 0
 1746              		@ frame_needed = 0, uses_anonymous_args = 0
 1747 0000 08B5     		push	{r3, lr}
 1748              	.LCFI13:
 1749              		.cfi_def_cfa_offset 8
 1750              		.cfi_offset 3, -8
 1751              		.cfi_offset 14, -4
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 1752              		.loc 1 1293 0
 1753 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1754              	.LVL144:
 1755 0006 044B     		ldr	r3, .L200
 1756 0008 9B68     		ldr	r3, [r3, #8]
 1757 000a C3F3C223 		ubfx	r3, r3, #11, #3
 1758 000e 034A     		ldr	r2, .L200+4
 1759 0010 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccVJA96T.s 			page 71


1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1760              		.loc 1 1294 0
 1761 0012 D840     		lsrs	r0, r0, r3
 1762 0014 08BD     		pop	{r3, pc}
 1763              	.L201:
 1764 0016 00BF     		.align	2
 1765              	.L200:
 1766 0018 00100240 		.word	1073876992
 1767 001c 00000000 		.word	APBPrescTable
 1768              		.cfi_endproc
 1769              	.LFE316:
 1771              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1772              		.align	1
 1773              		.global	HAL_RCC_GetOscConfig
 1774              		.syntax unified
 1775              		.thumb
 1776              		.thumb_func
 1777              		.fpu fpv4-sp-d16
 1779              	HAL_RCC_GetOscConfig:
 1780              	.LFB317:
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
 1781              		.loc 1 1304 0
 1782              		.cfi_startproc
 1783              		@ args = 0, pretend = 0, frame = 0
 1784              		@ frame_needed = 0, uses_anonymous_args = 0
 1785              		@ link register save eliminated.
 1786              	.LVL145:
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
 1787              		.loc 1 1313 0
 1788 0000 1F23     		movs	r3, #31
 1789 0002 0360     		str	r3, [r0]
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 1790              		.loc 1 1318 0
 1791 0004 434B     		ldr	r3, .L220
 1792 0006 1B68     		ldr	r3, [r3]
 1793 0008 13F4802F 		tst	r3, #262144
 1794 000c 5AD0     		beq	.L203
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1795              		.loc 1 1320 0
 1796 000e 4FF4A023 		mov	r3, #327680
 1797 0012 4360     		str	r3, [r0, #4]
 1798              	.L204:
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 1799              		.loc 1 1332 0
 1800 0014 3F4B     		ldr	r3, .L220
 1801 0016 1B68     		ldr	r3, [r3]
 1802 0018 13F0010F 		tst	r3, #1
 1803 001c 5ED0     		beq	.L206
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1804              		.loc 1 1334 0
 1805 001e 0123     		movs	r3, #1
 1806 0020 8361     		str	r3, [r0, #24]
 1807              	.L207:
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->MSIClockRange = (uint32_t)((RCC->CR & RCC_CR_MSIRANGE) );
 1808              		.loc 1 1341 0
 1809 0022 3C4B     		ldr	r3, .L220
 1810 0024 5A68     		ldr	r2, [r3, #4]
ARM GAS  /tmp/ccVJA96T.s 			page 72


 1811 0026 C2F30722 		ubfx	r2, r2, #8, #8
 1812 002a C261     		str	r2, [r0, #28]
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1813              		.loc 1 1342 0
 1814 002c 1A68     		ldr	r2, [r3]
 1815 002e 02F0F002 		and	r2, r2, #240
 1816 0032 0262     		str	r2, [r0, #32]
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 1817              		.loc 1 1345 0
 1818 0034 1B68     		ldr	r3, [r3]
 1819 0036 13F4807F 		tst	r3, #256
 1820 003a 52D0     		beq	.L208
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1821              		.loc 1 1347 0
 1822 003c 4FF48073 		mov	r3, #256
 1823 0040 C360     		str	r3, [r0, #12]
 1824              	.L209:
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1825              		.loc 1 1354 0
 1826 0042 344A     		ldr	r2, .L220
 1827 0044 5368     		ldr	r3, [r2, #4]
 1828 0046 C3F30463 		ubfx	r3, r3, #24, #5
 1829 004a 0361     		str	r3, [r0, #16]
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 1830              		.loc 1 1357 0
 1831 004c D2F89030 		ldr	r3, [r2, #144]
 1832 0050 13F0040F 		tst	r3, #4
 1833 0054 48D0     		beq	.L210
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1834              		.loc 1 1359 0
 1835 0056 0523     		movs	r3, #5
 1836 0058 8360     		str	r3, [r0, #8]
 1837              	.L211:
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 1838              		.loc 1 1371 0
 1839 005a 2E4B     		ldr	r3, .L220
 1840 005c D3F89430 		ldr	r3, [r3, #148]
 1841 0060 13F0010F 		tst	r3, #1
 1842 0064 4CD0     		beq	.L213
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1843              		.loc 1 1373 0
 1844 0066 0123     		movs	r3, #1
 1845 0068 4361     		str	r3, [r0, #20]
 1846              	.L214:
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
 1847              		.loc 1 1391 0
 1848 006a 0023     		movs	r3, #0
 1849 006c 4362     		str	r3, [r0, #36]
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 1850              		.loc 1 1395 0
 1851 006e 03F18043 		add	r3, r3, #1073741824
 1852 0072 03F50433 		add	r3, r3, #135168
 1853 0076 1B68     		ldr	r3, [r3]
 1854 0078 13F0807F 		tst	r3, #16777216
 1855 007c 43D0     		beq	.L215
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1856              		.loc 1 1397 0
ARM GAS  /tmp/ccVJA96T.s 			page 73


 1857 007e 0223     		movs	r3, #2
 1858 0080 8362     		str	r3, [r0, #40]
 1859              	.L216:
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)(((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_P
 1860              		.loc 1 1403 0
 1861 0082 244A     		ldr	r2, .L220
 1862 0084 D368     		ldr	r3, [r2, #12]
 1863 0086 03F00303 		and	r3, r3, #3
 1864 008a C362     		str	r3, [r0, #44]
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Po
 1865              		.loc 1 1404 0
 1866 008c D368     		ldr	r3, [r2, #12]
 1867 008e C3F30213 		ubfx	r3, r3, #4, #3
 1868 0092 0133     		adds	r3, r3, #1
 1869 0094 0363     		str	r3, [r0, #48]
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_
 1870              		.loc 1 1405 0
 1871 0096 D368     		ldr	r3, [r2, #12]
 1872 0098 C3F30623 		ubfx	r3, r3, #8, #7
 1873 009c 4363     		str	r3, [r0, #52]
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_
 1874              		.loc 1 1406 0
 1875 009e D368     		ldr	r3, [r2, #12]
 1876 00a0 C3F34153 		ubfx	r3, r3, #21, #2
 1877 00a4 0133     		adds	r3, r3, #1
 1878 00a6 5B00     		lsls	r3, r3, #1
 1879 00a8 C363     		str	r3, [r0, #60]
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_DIV_2_31_SUPPORT)
 1880              		.loc 1 1407 0
 1881 00aa D368     		ldr	r3, [r2, #12]
 1882 00ac C3F34163 		ubfx	r3, r3, #25, #2
 1883 00b0 0133     		adds	r3, r3, #1
 1884 00b2 5B00     		lsls	r3, r3, #1
 1885 00b4 0364     		str	r3, [r0, #64]
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 1886              		.loc 1 1411 0
 1887 00b6 D368     		ldr	r3, [r2, #12]
 1888 00b8 13F4003F 		tst	r3, #131072
 1889 00bc 26D1     		bne	.L219
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1890              		.loc 1 1417 0
 1891 00be 0723     		movs	r3, #7
 1892 00c0 8363     		str	r3, [r0, #56]
 1893 00c2 7047     		bx	lr
 1894              	.L203:
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 1895              		.loc 1 1322 0
 1896 00c4 134B     		ldr	r3, .L220
 1897 00c6 1B68     		ldr	r3, [r3]
 1898 00c8 13F4803F 		tst	r3, #65536
 1899 00cc 03D0     		beq	.L205
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1900              		.loc 1 1324 0
 1901 00ce 4FF48033 		mov	r3, #65536
 1902 00d2 4360     		str	r3, [r0, #4]
 1903 00d4 9EE7     		b	.L204
 1904              	.L205:
ARM GAS  /tmp/ccVJA96T.s 			page 74


1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1905              		.loc 1 1328 0
 1906 00d6 0023     		movs	r3, #0
 1907 00d8 4360     		str	r3, [r0, #4]
 1908 00da 9BE7     		b	.L204
 1909              	.L206:
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1910              		.loc 1 1338 0
 1911 00dc 0023     		movs	r3, #0
 1912 00de 8361     		str	r3, [r0, #24]
 1913 00e0 9FE7     		b	.L207
 1914              	.L208:
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1915              		.loc 1 1351 0
 1916 00e2 0023     		movs	r3, #0
 1917 00e4 C360     		str	r3, [r0, #12]
 1918 00e6 ACE7     		b	.L209
 1919              	.L210:
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 1920              		.loc 1 1361 0
 1921 00e8 0A4B     		ldr	r3, .L220
 1922 00ea D3F89030 		ldr	r3, [r3, #144]
 1923 00ee 13F0010F 		tst	r3, #1
 1924 00f2 02D0     		beq	.L212
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1925              		.loc 1 1363 0
 1926 00f4 0123     		movs	r3, #1
 1927 00f6 8360     		str	r3, [r0, #8]
 1928 00f8 AFE7     		b	.L211
 1929              	.L212:
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1930              		.loc 1 1367 0
 1931 00fa 0023     		movs	r3, #0
 1932 00fc 8360     		str	r3, [r0, #8]
 1933 00fe ACE7     		b	.L211
 1934              	.L213:
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1935              		.loc 1 1377 0
 1936 0100 0023     		movs	r3, #0
 1937 0102 4361     		str	r3, [r0, #20]
 1938 0104 B1E7     		b	.L214
 1939              	.L215:
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1940              		.loc 1 1401 0
 1941 0106 0123     		movs	r3, #1
 1942 0108 8362     		str	r3, [r0, #40]
 1943 010a BAE7     		b	.L216
 1944              	.L219:
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 1945              		.loc 1 1413 0
 1946 010c 1123     		movs	r3, #17
 1947 010e 8363     		str	r3, [r0, #56]
 1948 0110 7047     		bx	lr
 1949              	.L221:
 1950 0112 00BF     		.align	2
 1951              	.L220:
 1952 0114 00100240 		.word	1073876992
ARM GAS  /tmp/ccVJA96T.s 			page 75


 1953              		.cfi_endproc
 1954              	.LFE317:
 1956              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 1957              		.align	1
 1958              		.global	HAL_RCC_GetClockConfig
 1959              		.syntax unified
 1960              		.thumb
 1961              		.thumb_func
 1962              		.fpu fpv4-sp-d16
 1964              	HAL_RCC_GetClockConfig:
 1965              	.LFB318:
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
 1966              		.loc 1 1431 0
 1967              		.cfi_startproc
 1968              		@ args = 0, pretend = 0, frame = 0
 1969              		@ frame_needed = 0, uses_anonymous_args = 0
 1970              		@ link register save eliminated.
 1971              	.LVL146:
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1972              		.loc 1 1437 0
 1973 0000 0F23     		movs	r3, #15
 1974 0002 0360     		str	r3, [r0]
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1975              		.loc 1 1440 0
 1976 0004 0B4B     		ldr	r3, .L223
 1977 0006 9A68     		ldr	r2, [r3, #8]
 1978 0008 02F00302 		and	r2, r2, #3
 1979 000c 4260     		str	r2, [r0, #4]
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1980              		.loc 1 1443 0
 1981 000e 9A68     		ldr	r2, [r3, #8]
 1982 0010 02F0F002 		and	r2, r2, #240
 1983 0014 8260     		str	r2, [r0, #8]
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1984              		.loc 1 1446 0
 1985 0016 9A68     		ldr	r2, [r3, #8]
 1986 0018 02F4E062 		and	r2, r2, #1792
 1987 001c C260     		str	r2, [r0, #12]
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 1988              		.loc 1 1449 0
 1989 001e 9B68     		ldr	r3, [r3, #8]
 1990 0020 DB08     		lsrs	r3, r3, #3
 1991 0022 03F4E063 		and	r3, r3, #1792
 1992 0026 0361     		str	r3, [r0, #16]
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 1993              		.loc 1 1452 0
 1994 0028 034B     		ldr	r3, .L223+4
 1995 002a 1B68     		ldr	r3, [r3]
 1996 002c 03F00703 		and	r3, r3, #7
 1997 0030 0B60     		str	r3, [r1]
 1998 0032 7047     		bx	lr
 1999              	.L224:
 2000              		.align	2
 2001              	.L223:
 2002 0034 00100240 		.word	1073876992
 2003 0038 00200240 		.word	1073881088
 2004              		.cfi_endproc
ARM GAS  /tmp/ccVJA96T.s 			page 76


 2005              	.LFE318:
 2007              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 2008              		.align	1
 2009              		.global	HAL_RCC_EnableCSS
 2010              		.syntax unified
 2011              		.thumb
 2012              		.thumb_func
 2013              		.fpu fpv4-sp-d16
 2015              	HAL_RCC_EnableCSS:
 2016              	.LFB319:
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
 2017              		.loc 1 1466 0
 2018              		.cfi_startproc
 2019              		@ args = 0, pretend = 0, frame = 0
 2020              		@ frame_needed = 0, uses_anonymous_args = 0
 2021              		@ link register save eliminated.
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2022              		.loc 1 1467 0
 2023 0000 024A     		ldr	r2, .L226
 2024 0002 1368     		ldr	r3, [r2]
 2025 0004 43F40023 		orr	r3, r3, #524288
 2026 0008 1360     		str	r3, [r2]
 2027 000a 7047     		bx	lr
 2028              	.L227:
 2029              		.align	2
 2030              	.L226:
 2031 000c 00100240 		.word	1073876992
 2032              		.cfi_endproc
 2033              	.LFE319:
 2035              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2036              		.align	1
 2037              		.weak	HAL_RCC_CSSCallback
 2038              		.syntax unified
 2039              		.thumb
 2040              		.thumb_func
 2041              		.fpu fpv4-sp-d16
 2043              	HAL_RCC_CSSCallback:
 2044              	.LFB321:
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 2045              		.loc 1 1493 0
 2046              		.cfi_startproc
 2047              		@ args = 0, pretend = 0, frame = 0
 2048              		@ frame_needed = 0, uses_anonymous_args = 0
 2049              		@ link register save eliminated.
 2050 0000 7047     		bx	lr
 2051              		.cfi_endproc
 2052              	.LFE321:
 2054              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2055              		.align	1
 2056              		.global	HAL_RCC_NMI_IRQHandler
 2057              		.syntax unified
 2058              		.thumb
 2059              		.thumb_func
 2060              		.fpu fpv4-sp-d16
 2062              	HAL_RCC_NMI_IRQHandler:
 2063              	.LFB320:
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check RCC CSSF interrupt flag  */
ARM GAS  /tmp/ccVJA96T.s 			page 77


 2064              		.loc 1 1476 0
 2065              		.cfi_startproc
 2066              		@ args = 0, pretend = 0, frame = 0
 2067              		@ frame_needed = 0, uses_anonymous_args = 0
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check RCC CSSF interrupt flag  */
 2068              		.loc 1 1476 0
 2069 0000 08B5     		push	{r3, lr}
 2070              	.LCFI14:
 2071              		.cfi_def_cfa_offset 8
 2072              		.cfi_offset 3, -8
 2073              		.cfi_offset 14, -4
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 2074              		.loc 1 1478 0
 2075 0002 064B     		ldr	r3, .L233
 2076 0004 DB69     		ldr	r3, [r3, #28]
 2077 0006 13F4807F 		tst	r3, #256
 2078 000a 00D1     		bne	.L232
 2079              	.L229:
 2080 000c 08BD     		pop	{r3, pc}
 2081              	.L232:
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 2082              		.loc 1 1481 0
 2083 000e FFF7FEFF 		bl	HAL_RCC_CSSCallback
 2084              	.LVL147:
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 2085              		.loc 1 1484 0
 2086 0012 4FF48072 		mov	r2, #256
 2087 0016 014B     		ldr	r3, .L233
 2088 0018 1A62     		str	r2, [r3, #32]
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 2089              		.loc 1 1486 0
 2090 001a F7E7     		b	.L229
 2091              	.L234:
 2092              		.align	2
 2093              	.L233:
 2094 001c 00100240 		.word	1073876992
 2095              		.cfi_endproc
 2096              	.LFE320:
 2098              		.text
 2099              	.Letext0:
 2100              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2101              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2102              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 2103              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 2104              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 2105              		.file 8 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 2106              		.file 9 "/usr/arm-none-eabi/include/sys/lock.h"
 2107              		.file 10 "/usr/arm-none-eabi/include/sys/_types.h"
 2108              		.file 11 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 2109              		.file 12 "/usr/arm-none-eabi/include/sys/reent.h"
 2110              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2111              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 2112              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 2113              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 2114              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/ccVJA96T.s 			page 78


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_rcc.c
     /tmp/ccVJA96T.s:18     .text.RCC_SetFlashLatencyFromMSIRange:0000000000000000 $t
     /tmp/ccVJA96T.s:24     .text.RCC_SetFlashLatencyFromMSIRange:0000000000000000 RCC_SetFlashLatencyFromMSIRange
     /tmp/ccVJA96T.s:152    .text.RCC_SetFlashLatencyFromMSIRange:0000000000000088 $d
     /tmp/ccVJA96T.s:158    .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccVJA96T.s:165    .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccVJA96T.s:244    .text.HAL_RCC_DeInit:0000000000000064 $d
     /tmp/ccVJA96T.s:252    .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccVJA96T.s:259    .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccVJA96T.s:326    .text.HAL_RCC_MCOConfig:0000000000000048 $d
     /tmp/ccVJA96T.s:331    .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccVJA96T.s:338    .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccVJA96T.s:517    .text.HAL_RCC_GetSysClockFreq:00000000000000f0 $d
     /tmp/ccVJA96T.s:525    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccVJA96T.s:532    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccVJA96T.s:899    .text.HAL_RCC_OscConfig:000000000000026c $d
     /tmp/ccVJA96T.s:905    .text.HAL_RCC_OscConfig:0000000000000278 $t
     /tmp/ccVJA96T.s:1342   .text.HAL_RCC_OscConfig:0000000000000554 $d
     /tmp/ccVJA96T.s:1346   .text.HAL_RCC_OscConfig:000000000000055c $t
     /tmp/ccVJA96T.s:1380   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccVJA96T.s:1387   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccVJA96T.s:1662   .text.HAL_RCC_ClockConfig:000000000000019c $d
     /tmp/ccVJA96T.s:1670   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccVJA96T.s:1677   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccVJA96T.s:1691   .text.HAL_RCC_GetHCLKFreq:0000000000000008 $d
     /tmp/ccVJA96T.s:1696   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccVJA96T.s:1703   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccVJA96T.s:1728   .text.HAL_RCC_GetPCLK1Freq:0000000000000018 $d
     /tmp/ccVJA96T.s:1734   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccVJA96T.s:1741   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccVJA96T.s:1766   .text.HAL_RCC_GetPCLK2Freq:0000000000000018 $d
     /tmp/ccVJA96T.s:1772   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccVJA96T.s:1779   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccVJA96T.s:1952   .text.HAL_RCC_GetOscConfig:0000000000000114 $d
     /tmp/ccVJA96T.s:1957   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccVJA96T.s:1964   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccVJA96T.s:2002   .text.HAL_RCC_GetClockConfig:0000000000000034 $d
     /tmp/ccVJA96T.s:2008   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccVJA96T.s:2015   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccVJA96T.s:2031   .text.HAL_RCC_EnableCSS:000000000000000c $d
     /tmp/ccVJA96T.s:2036   .text.HAL_RCC_CSSCallback:0000000000000000 $t
     /tmp/ccVJA96T.s:2043   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccVJA96T.s:2055   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccVJA96T.s:2062   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccVJA96T.s:2094   .text.HAL_RCC_NMI_IRQHandler:000000000000001c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_PWREx_GetVoltageRange
SystemCoreClock
HAL_GPIO_Init
MSIRangeTable
HAL_InitTick
HAL_GetTick
AHBPrescTable
APBPrescTable
ARM GAS  /tmp/ccVJA96T.s 			page 79


