ARM GAS  /tmp/ccWogU0R.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_ADC_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_ADC_MspInit:
  26              	.LFB311:
  27              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @file    stm32l4xx_hal_adc.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           + Operation functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *             ++ Start, stop, get result of conversions of regular
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *                group, using 3 possible modes: polling, interruption or DMA.
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           + Control functions
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *             ++ Channels configuration on regular group
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           + State functions
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *             ++ ADC state machine management
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *             ++ Interrupts and flags management
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          Other functions (extended functions) are available in file 
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          "stm32l4xx_hal_adc_ex.c".
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   @verbatim
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ==============================================================================
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                      ##### ADC peripheral features #####
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ==============================================================================
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   [..]
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of 
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       analog watchdog or overrun events.
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
ARM GAS  /tmp/ccWogU0R.s 			page 2


  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Configurable delay between conversions in Dual interleaved mode.
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC channels selectable single/differential input.
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC offset shared on 4 offset instances.
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC calibration
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC conversion of regular group.
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to 
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       Vdda or to an external voltage reference).
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                      ##### How to use this driver #####
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ==============================================================================
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ============================================================
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Enable the ADC interface
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) Two clock settings are mandatory: 
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    Two possible clock sources: synchronous clock derived from APB clock
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    or asynchronous clock derived from system clock, PLLSAI1 or the PLLSAI2 
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    running up to 80MHz.
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) Example:
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    other device clock parameters configuration:
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory)
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                RCC_ADCCLKSOURCE_PLL enable:                       (optional: if asynchronous clock 
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) RCC_PeriphClkInitTypeDef   RCC_PeriphClkInit;
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection    = RCC_ADCCLKSOURCE_PLL;
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccWogU0R.s 			page 3


  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) ADC pins configuration
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_GPIO_Init()
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler() 
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               into the function of corresponding ADC interruption vector 
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               ADCx_IRQHandler().
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_DMA_Init().
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler() 
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               into the function of corresponding DMA interruption vector 
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ================================================================
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADC_Init().
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number, 
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         monitored, thresholds, ...)
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Execution of ADC conversions ***
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ====================================
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         conversion accuracy
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         transfer by DMA.
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC conversion by polling:
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Start()
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion 
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
ARM GAS  /tmp/ccWogU0R.s 			page 4


 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Retrieve conversion results 
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC conversion by interruption: 
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 (this function must be implemented in user program)
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Retrieve conversion results 
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 (these functions must be implemented in user program)
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 destination variable address.
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Deinitialization of ADC ***
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ============================================================
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Disable the ADC interface
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC clock disable
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) Example:
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    other device clock parameters configuration:
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) ADC pins configuration
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
ARM GAS  /tmp/ccWogU0R.s 			page 5


 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Deinitialize the DMA
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_DMA_Init().
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     @endverbatim
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ******************************************************************************
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @attention
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * Redistribution and use in source and binary forms, with or without modification,
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * are permitted provided that the following conditions are met:
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *      this list of conditions and the following disclaimer.
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *      this list of conditions and the following disclaimer in the documentation
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *      and/or other materials provided with the distribution.
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *      may be used to endorse or promote products derived from this software
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *      without specific prior written permission.
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ******************************************************************************  
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #include "stm32l4xx_hal.h"
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @addtogroup STM32L4xx_HAL_Driver
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC ADC
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief ADC HAL module driver
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccWogU0R.s 			page 6


 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_CFGR_FIELDS_1  ((uint32_t)(ADC_CFGR_RES    | ADC_CFGR_ALIGN   |\
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                        ADC_CFGR_CONT   | ADC_CFGR_OVRMOD  |\
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                        ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM |\
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                        ADC_CFGR_EXTEN  | ADC_CFGR_EXTSEL))   /*!< ADC_CFGR fields o
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                                                                   when no regular c
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_CFGR2_FIELDS  ((uint32_t)(ADC_CFGR2_ROVSE | ADC_CFGR2_OVSR  |\
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                        ADC_CFGR2_OVSS | ADC_CFGR2_TROVS |\
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                        ADC_CFGR2_ROVSM))                     /*!< ADC_CFGR2 fields 
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                                                                  (neither regular n
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_CFGR_WD_FIELDS  ((uint32_t)(ADC_CFGR_AWD1SGL | ADC_CFGR_JAWD1EN | \
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                         ADC_CFGR_AWD1EN | ADC_CFGR_AWD1CH))  /*!< ADC_CFGR fields o
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                                                                   conversion (neith
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_OFR_FIELDS  ((uint32_t)(ADC_OFR1_OFFSET1 | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1_EN)) 
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                                                                                    
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Delay to wait before setting ADEN once ADCAL has been reset
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    must be at least 4 ADC clock cycles.
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    Assuming lowest ADC clock (140 KHz according to DS), this
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    4 ADC clock cycles duration is equal to
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    4 / 140,000 = 0.028 ms.
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    ADC_ENABLE_TIMEOUT set to 2 is a margin large enough to ensure
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    the 4 ADC clock cycles have elapsed while waiting for ADRDY
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    to become 1 */        
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   #define ADC_ENABLE_TIMEOUT              ((uint32_t)  2)    /*!< ADC enable time-out value  */
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   #define ADC_DISABLE_TIMEOUT             ((uint32_t)  2)    /*!< ADC disable time-out value */
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                                                             
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Delay for ADC voltage regulator startup time                               */
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*  Maximum delay is 10 microseconds                                          */
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* (refer device RM, parameter Tadcvreg_stup).                                */
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_STAB_DELAY_US               ((uint32_t) 10)     /*!< ADC voltage regulator startup time
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Timeout to wait for current conversion on going to be completed.           */
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Timeout fixed to longest ADC conversion possible, for 1 channel:           */
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - maximum sampling time (640.5 adc_clk)                                  */
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - ADC resolution (Tsar 12 bits= 12.5 adc_clk)                            */
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - ADC clock with prescaler 256                                           */
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*     (from asynchronous clock, assuming clock frequency same as CPU for     */
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*      this calculation)                                                     */
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - ADC oversampling ratio 256                                             */
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   Calculation: 653 * 256 * 256 = 42795008 CPU clock cycles max             */
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Unit: cycles of CPU clock.                                                 */
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_CONVERSION_TIME_MAX_CPU_CYCLES ((uint32_t) 42795008)  /*!< ADC conversion completion ti
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccWogU0R.s 			page 7


 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim    
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) De-initialize the ADC.
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to  
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         in header of this file).
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef  
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC  
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         before HAL_ADC_Init().
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire 
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments 
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Parameters related to common ADC registers (ADC clock mode) are set 
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         only if all ADCs are disabled.
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         If this is not the case, these common parameters setting are  
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of update of a parameter of ADC_InitTypeDef on the fly,
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         without  disabling the other ADCs.
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
ARM GAS  /tmp/ccWogU0R.s 			page 8


 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpCFGR = 0;
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check ADC handle */
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if(hadc == NULL)
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     return HAL_ERROR;
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_DFSDMCFG_MODE(hadc));
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if(hadc->Init.DiscontinuousConvMode == ENABLE)
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* DISCEN and CONT bits cannot be set at the same time */
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if(hadc->State == HAL_ADC_STATE_RESET)
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Init the low level hardware */
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC error code to none */
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Initialize Lock */
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
ARM GAS  /tmp/ccWogU0R.s 			page 9


 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  Exit deep power down mode if still in that state */
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_DEEPPWD))
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Exit deep power down mode */ 
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* System was in deep power down mode, calibration must
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      be relaunched or a previously saved calibration factor 
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      re-applied once the ADC voltage regulator is enabled */    
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN))
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN);
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Wait loop initialization and execution */
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially                    */
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       CPU processing cycles.                                           */
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     wait_loop_index = (ADC_STAB_DELAY_US * (SystemCoreClock / (1000000 * 2)));
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while(wait_loop_index != 0)
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       wait_loop_index--;
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN))
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC error code to ADC IP internal error */
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if(   (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      && (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     )
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Pointer to the common control register                                 */
ARM GAS  /tmp/ccWogU0R.s 			page 10


 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - clock configuration                                                 */
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((ADC_IS_ENABLE(hadc) == RESET)   &&
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Reset configuration of ADC common register CCR:                      */
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*                                                                      */
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*   - ADC clock mode and ACC prescaler (CKMODE and PRESC bits)are set  */
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*     according to adc->Init.ClockPrescaler. It selects the clock      */
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*    source and sets the clock division factor.                        */
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*                                                                      */
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Some parameters of this register are not reset, since they are set   */
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* by other functions and must be kept in case of usage of this         */
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* without needing to reconfigure all other ADC groups/channels         */
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* parameters):                                                         */
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*   - when multimode feature is available, multimode-related           */
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*     (set into HAL_ADC_ConfigChannel() or                             */
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*     HAL_ADCEx_InjectedConfigChannel() )                              */
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       MODIFY_REG(tmpADC_Common->CCR, ADC_CCR_PRESC|ADC_CCR_CKMODE, hadc->Init.ClockPrescaler);
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - resolution                               Init.Resolution            */
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - data alignment                           Init.DataAlign             */
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - external trigger to start conversion     Init.ExternalTrigConv      */
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - external trigger polarity                Init.ExternalTrigConvEdge  */
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - continuous conversion mode               Init.ContinuousConvMode    */
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - overrun                                  Init.Overrun               */
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - discontinuous mode                       Init.DiscontinuousConvMode */
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - discontinuous mode channel count         Init.NbrOfDiscConversion   */
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmpCFGR  = (ADC_CFGR_CONTINUOUS(hadc->Init.ContinuousConvMode)           |
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                           |
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.DataAlign                                         |
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Resolution                                        |
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS(hadc->Init.DiscontinuousConvMode)  );
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* start.                                                                 */
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - external trigger to start conversion     Init.ExternalTrigConv      */
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - external trigger polarity                Init.ExternalTrigConvEdge  */
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note:  parameter ExternalTrigConvEdge set to "trigger edge none" is    */
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*        equivalent to software start.                                   */
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
ARM GAS  /tmp/ccWogU0R.s 			page 11


 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     &&  (hadc->Init.ExternalTrigConvEdge != ADC_EXTERNALTRIGCONVEDGE_NONE))
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpCFGR |= ( hadc->Init.ExternalTrigConv |  hadc->Init.ExternalTrigConvEdge);
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      /* Update Configuration Register CFGR */
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR); 
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without */
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* conversion on going on regular and injected groups:                    */
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - DMA continuous request          Init.DMAContinuousRequests          */
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Oversampling parameters         Init.Oversampling                   */
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpCFGR = ( ADC_CFGR_DFSDM(hadc)                                 |
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_CFGR_AUTOWAIT(hadc->Init.LowPowerAutoWait)       |
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_CFGR_DMACONTREQ(hadc->Init.DMAContinuousRequests) );
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);                    
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->Init.ExternalTrigConv == ADC_SOFTWARE_START)
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ||  (hadc->Init.ExternalTrigConvEdge == ADC_EXTERNALTRIGCONVEDGE_NONE))
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Multi trigger is not applicable to software-triggered conversions */
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             assert_param((hadc->Init.Oversampling.TriggeredMode == ADC_TRIGGEREDMODE_SINGLE_TRIGGER
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        /* Configuration of Oversampler:                                       */
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        /*  - Oversampling Ratio                                               */
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        /*  - Right bit shift                                                  */
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        /*  - Triggered mode                                                   */
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        /*  - Oversampling mode (continued/resumed)                            */
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_FIELDS, 
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                ADC_CFGR2_ROVSE                     | 
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                hadc->Init.Oversampling.Ratio         |
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                hadc->Init.Oversampling.RightBitShift |
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                hadc->Init.Oversampling.TriggeredMode |
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                hadc->Init.Oversampling.OversamplingStopReset);
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Disable Regular OverSampling */
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT( hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }   /*  if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET) */
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
ARM GAS  /tmp/ccWogU0R.s 			page 12


 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   parameter "NbrOfConversion"                                          */
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set number of ranks in regular group sequencer */
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));  
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Initialize the ADC state */
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done 
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is  
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same 
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         common group is still running.
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   By default, HAL_ADC_DeInit() set ADC in mode deep power-down:
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         this saves more power by reducing leakage currents 
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         and is particularly interesting before entering MCU low-power modes.
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
ARM GAS  /tmp/ccWogU0R.s 			page 13


 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check ADC handle */
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if(hadc == NULL)
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     return HAL_ERROR;
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC state */
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Note: No check on ADC_ConversionStop() return status,              */
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       if the conversion stop failed, it is up to                   */
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       HAL_ADC_MspDeInit() to reset the ADC IP.                     */
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped            */
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Flush register JSQR: reset the queue sequencer when injected             */
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* queue sequencer is enabled and ADC disabled.                             */
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* The software and hardware triggers of the injected sequence are both     */
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* internally disabled just after the completion of the last valid          */
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* injected sequence.                                                       */
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM);
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable the ADC peripheral */
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* No check on ADC_Disable() return status, if the ADC disabling process
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     failed, it is up to HAL_ADC_MspDeInit() to reset the ADC IP */  
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_Disable(hadc);
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register IER */
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_JEOS  | ADC_IT_JEOC |
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY                 ) );
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register ISR */
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_JEOS  | ADC_FLAG_JEOC |
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY                   ) );
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CR */
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  /* Bits ADC_CR_JADSTP, ADC_CR_ADSTP, ADC_CR_JADSTART, ADC_CR_ADSTART, 
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_CR_ADCAL, ADC_CR_ADDIS and ADC_CR_ADEN are in access mode "read-set": 
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     no direct reset applicable. 
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     Update CR register to reset value where doable by software */
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN | ADC_CR_ADCALDIF);
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);    
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CFGR */
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_FIELDS);
ARM GAS  /tmp/ccWogU0R.s 			page 14


 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);  
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CFGR2 */
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSM  | ADC_CFGR2_TROVS   | ADC_CFGR2_OVSS |   
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                   ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE    );        
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SMPR1 */
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR1, ADC_SMPR1_FIELDS);                                 
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SMPR2 */
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR2, ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | ADC_SMPR2_SMP16 | 
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                              ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 | 
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                              ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 | ADC_SMPR2_SMP10    );             
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register TR1 */
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR1, ADC_TR1_HT1 | ADC_TR1_LT1);
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register TR2 */
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR2, ADC_TR2_HT2 | ADC_TR2_LT2);    
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register TR3 */
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR3, ADC_TR3_HT3 | ADC_TR3_LT3);      
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR1 */
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_SQ4 | ADC_SQR1_SQ3 | ADC_SQR1_SQ2 | 
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                             ADC_SQR1_SQ1 | ADC_SQR1_L);                              
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR2 */
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ9 | ADC_SQR2_SQ8 | ADC_SQR2_SQ7 | 
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);                                
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR3 */
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ14 | ADC_SQR3_SQ13 | ADC_SQR3_SQ12 | 
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);                                 
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR4 */
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR4, ADC_SQR4_SQ16 | ADC_SQR4_SQ15); 
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Register JSQR was reset when the ADC was disabled */
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register DR */
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR1 */
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1); 
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR2 */
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN | ADC_OFR2_OFFSET2_CH | ADC_OFR2_OFFSET2); 
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR3 */
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN | ADC_OFR3_OFFSET3_CH | ADC_OFR3_OFFSET3); 
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR4 */
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN | ADC_OFR4_OFFSET4_CH | ADC_OFR4_OFFSET4);
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset registers JDR1, JDR2, JDR3, JDR4 */
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register AWD2CR */
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
ARM GAS  /tmp/ccWogU0R.s 			page 15


 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register AWD3CR */
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register DIFSEL */
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_DIFSEL);
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CALFACT */
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Reset common ADC registers ========== */
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Software is allowed to change common parameters only when all the other
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ADCs are disabled.   */
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((ADC_IS_ENABLE(hadc) == RESET)   &&
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Reset configuration of ADC common register CCR:
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       - clock mode: CKMODE, PRESCEN
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       - multimode related parameters (when this feature is available): MDMA, 
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         DMACFG, DELAY, DUAL (set by HAL_ADCEx_MultiModeConfigChannel() API)
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       - internal measurement paths: Vbat, temperature sensor, Vref (set into
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         HAL_ADC_ConfigChannel() or HAL_ADCEx_InjectedConfigChannel() )
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     */
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_CLEAR_COMMON_CONTROL_REGISTER(hadc);
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* DeInit the low level hardware. 
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      For example:
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_RCC_ADC_FORCE_RESET();
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_RCC_ADC_RELEASE_RESET();
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_RCC_ADC_CLK_DISABLE();
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     Keep in mind that all ADCs use the same clock: disabling
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     the clock will reset all ADCs. 
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC error code to none */
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset injected channel configuration parameters */
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->InjectionConfig.ContextQueue = 0;
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0; 
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC state */
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
ARM GAS  /tmp/ccWogU0R.s 			page 16


 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
  28              		.loc 1 837 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE311:
  38              		.section	.text.HAL_ADC_Init,"ax",%progbits
  39              		.align	1
  40              		.global	HAL_ADC_Init
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv4-sp-d16
  46              	HAL_ADC_Init:
  47              	.LFB309:
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  48              		.loc 1 373 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 8
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              	.LVL1:
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  53              		.loc 1 373 0
  54 0000 30B5     		push	{r4, r5, lr}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 12
  57              		.cfi_offset 4, -12
  58              		.cfi_offset 5, -8
  59              		.cfi_offset 14, -4
  60 0002 83B0     		sub	sp, sp, #12
  61              	.LCFI1:
  62              		.cfi_def_cfa_offset 24
  63              	.LVL2:
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
  64              		.loc 1 378 0
  65 0004 0023     		movs	r3, #0
  66 0006 0193     		str	r3, [sp, #4]
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
  67              		.loc 1 381 0
  68 0008 0028     		cmp	r0, #0
  69 000a 00F03681 		beq	.L29
  70 000e 0446     		mov	r4, r0
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
  71              		.loc 1 418 0
  72 0010 836D     		ldr	r3, [r0, #88]
  73 0012 E3B1     		cbz	r3, .L44
ARM GAS  /tmp/ccWogU0R.s 			page 17


  74              	.LVL3:
  75              	.L4:
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
  76              		.loc 1 432 0
  77 0014 2368     		ldr	r3, [r4]
  78 0016 9A68     		ldr	r2, [r3, #8]
  79 0018 12F0005F 		tst	r2, #536870912
  80 001c 03D0     		beq	.L5
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
  81              		.loc 1 435 0
  82 001e 9A68     		ldr	r2, [r3, #8]
  83 0020 22F00052 		bic	r2, r2, #536870912
  84 0024 9A60     		str	r2, [r3, #8]
  85              	.L5:
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
  86              		.loc 1 442 0
  87 0026 2368     		ldr	r3, [r4]
  88 0028 9A68     		ldr	r2, [r3, #8]
  89 002a 12F0805F 		tst	r2, #268435456
  90 002e 1BD1     		bne	.L6
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
  91              		.loc 1 445 0
  92 0030 9A68     		ldr	r2, [r3, #8]
  93 0032 42F08052 		orr	r2, r2, #268435456
  94 0036 9A60     		str	r2, [r3, #8]
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while(wait_loop_index != 0)
  95              		.loc 1 451 0
  96 0038 914B     		ldr	r3, .L56
  97 003a 1B68     		ldr	r3, [r3]
  98 003c 914A     		ldr	r2, .L56+4
  99 003e A2FB0323 		umull	r2, r3, r2, r3
 100 0042 DB0C     		lsrs	r3, r3, #19
 101 0044 03EB8303 		add	r3, r3, r3, lsl #2
 102 0048 5A00     		lsls	r2, r3, #1
 103 004a 0192     		str	r2, [sp, #4]
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 104              		.loc 1 452 0
 105 004c 09E0     		b	.L7
 106              	.LVL4:
 107              	.L44:
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 108              		.loc 1 421 0
 109 004e FFF7FEFF 		bl	HAL_ADC_MspInit
 110              	.LVL5:
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 111              		.loc 1 424 0
 112 0052 0023     		movs	r3, #0
 113 0054 E365     		str	r3, [r4, #92]
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 114              		.loc 1 427 0
 115 0056 84F85430 		strb	r3, [r4, #84]
 116 005a DBE7     		b	.L4
 117              	.L8:
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 118              		.loc 1 454 0
 119 005c 019B     		ldr	r3, [sp, #4]
 120 005e 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccWogU0R.s 			page 18


 121 0060 0193     		str	r3, [sp, #4]
 122              	.L7:
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 123              		.loc 1 452 0
 124 0062 019B     		ldr	r3, [sp, #4]
 125 0064 002B     		cmp	r3, #0
 126 0066 F9D1     		bne	.L8
 127              	.L6:
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 128              		.loc 1 461 0
 129 0068 2368     		ldr	r3, [r4]
 130 006a 9A68     		ldr	r2, [r3, #8]
 131 006c 12F0805F 		tst	r2, #268435456
 132 0070 3DD1     		bne	.L30
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 133              		.loc 1 464 0
 134 0072 A26D     		ldr	r2, [r4, #88]
 135 0074 42F01002 		orr	r2, r2, #16
 136 0078 A265     		str	r2, [r4, #88]
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 137              		.loc 1 467 0
 138 007a E26D     		ldr	r2, [r4, #92]
 139 007c 42F00102 		orr	r2, r2, #1
 140 0080 E265     		str	r2, [r4, #92]
 141              	.LVL6:
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 142              		.loc 1 469 0
 143 0082 0120     		movs	r0, #1
 144              	.LVL7:
 145              	.L9:
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      && (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 146              		.loc 1 476 0
 147 0084 A26D     		ldr	r2, [r4, #88]
 148 0086 12F0100F 		tst	r2, #16
 149 008a 40F0EF80 		bne	.L10
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     )
 150              		.loc 1 477 0
 151 008e 9A68     		ldr	r2, [r3, #8]
 152 0090 12F0040F 		tst	r2, #4
 153 0094 40F0EA80 		bne	.L10
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 154              		.loc 1 481 0
 155 0098 A26D     		ldr	r2, [r4, #88]
 156 009a 22F48172 		bic	r2, r2, #258
 157 009e 42F00202 		orr	r2, r2, #2
 158 00a2 A265     		str	r2, [r4, #88]
 159              	.LVL8:
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 160              		.loc 1 494 0
 161 00a4 9A68     		ldr	r2, [r3, #8]
 162 00a6 02F00302 		and	r2, r2, #3
 163 00aa 012A     		cmp	r2, #1
 164 00ac 21D0     		beq	.L45
 165 00ae 0022     		movs	r2, #0
 166              	.L11:
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 167              		.loc 1 494 0 is_stmt 0 discriminator 6
ARM GAS  /tmp/ccWogU0R.s 			page 19


 168 00b0 002A     		cmp	r2, #0
 169 00b2 79D1     		bne	.L12
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 170              		.loc 1 495 0 is_stmt 1
 171 00b4 7449     		ldr	r1, .L56+8
 172 00b6 8B42     		cmp	r3, r1
 173 00b8 23D0     		beq	.L46
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 174              		.loc 1 495 0 is_stmt 0 discriminator 2
 175 00ba 7449     		ldr	r1, .L56+12
 176 00bc 8B42     		cmp	r3, r1
 177 00be 3DD0     		beq	.L47
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 178              		.loc 1 495 0 discriminator 14
 179 00c0 714B     		ldr	r3, .L56+8
 180 00c2 9B68     		ldr	r3, [r3, #8]
 181 00c4 03F00303 		and	r3, r3, #3
 182 00c8 012B     		cmp	r3, #1
 183 00ca 59D0     		beq	.L48
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 184              		.loc 1 495 0
 185 00cc 1346     		mov	r3, r2
 186              	.L22:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 187              		.loc 1 495 0 discriminator 31
 188 00ce 13F0010F 		tst	r3, #1
 189 00d2 5ED1     		bne	.L41
 190              	.L21:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 191              		.loc 1 495 0 discriminator 33
 192 00d4 6D4B     		ldr	r3, .L56+12
 193 00d6 9B68     		ldr	r3, [r3, #8]
 194 00d8 03F00303 		and	r3, r3, #3
 195 00dc 012B     		cmp	r3, #1
 196 00de 59D1     		bne	.L20
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 197              		.loc 1 495 0 discriminator 34
 198 00e0 6A4B     		ldr	r3, .L56+12
 199 00e2 1B68     		ldr	r3, [r3]
 200 00e4 13F0010F 		tst	r3, #1
 201 00e8 54D0     		beq	.L20
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 202              		.loc 1 495 0
 203 00ea 0122     		movs	r2, #1
 204 00ec 52E0     		b	.L20
 205              	.LVL9:
 206              	.L30:
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 207              		.loc 1 374 0 is_stmt 1
 208 00ee 0020     		movs	r0, #0
 209 00f0 C8E7     		b	.L9
 210              	.LVL10:
 211              	.L45:
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 212              		.loc 1 494 0 discriminator 1
 213 00f2 1A68     		ldr	r2, [r3]
 214 00f4 12F0010F 		tst	r2, #1
ARM GAS  /tmp/ccWogU0R.s 			page 20


 215 00f8 01D1     		bne	.L32
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 216              		.loc 1 494 0 is_stmt 0
 217 00fa 0022     		movs	r2, #0
 218 00fc D8E7     		b	.L11
 219              	.L32:
 220 00fe 0122     		movs	r2, #1
 221 0100 D6E7     		b	.L11
 222              	.L46:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 223              		.loc 1 495 0 is_stmt 1 discriminator 1
 224 0102 624B     		ldr	r3, .L56+12
 225 0104 9B68     		ldr	r3, [r3, #8]
 226 0106 03F00303 		and	r3, r3, #3
 227 010a 012B     		cmp	r3, #1
 228 010c 08D0     		beq	.L49
 229              	.L14:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 230              		.loc 1 495 0 is_stmt 0 discriminator 6
 231 010e 604B     		ldr	r3, .L56+16
 232 0110 9B68     		ldr	r3, [r3, #8]
 233 0112 03F00303 		and	r3, r3, #3
 234 0116 012B     		cmp	r3, #1
 235 0118 09D0     		beq	.L50
 236              	.L15:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 237              		.loc 1 495 0 discriminator 12
 238 011a 82F00102 		eor	r2, r2, #1
 239 011e 3BE0     		b	.L16
 240              	.L49:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 241              		.loc 1 495 0 discriminator 3
 242 0120 5A4B     		ldr	r3, .L56+12
 243 0122 1B68     		ldr	r3, [r3]
 244 0124 13F0010F 		tst	r3, #1
 245 0128 F1D0     		beq	.L14
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 246              		.loc 1 495 0
 247 012a 0122     		movs	r2, #1
 248 012c F5E7     		b	.L15
 249              	.L50:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 250              		.loc 1 495 0 discriminator 7
 251 012e 584B     		ldr	r3, .L56+16
 252 0130 1B68     		ldr	r3, [r3]
 253 0132 13F0010F 		tst	r3, #1
 254 0136 F0D0     		beq	.L15
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 255              		.loc 1 495 0
 256 0138 0122     		movs	r2, #1
 257 013a EEE7     		b	.L15
 258              	.L47:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 259              		.loc 1 495 0 discriminator 13
 260 013c 524B     		ldr	r3, .L56+8
 261 013e 9B68     		ldr	r3, [r3, #8]
 262 0140 03F00303 		and	r3, r3, #3
ARM GAS  /tmp/ccWogU0R.s 			page 21


 263 0144 012B     		cmp	r3, #1
 264 0146 0BD0     		beq	.L51
 265              	.L18:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 266              		.loc 1 495 0 discriminator 18
 267 0148 514B     		ldr	r3, .L56+16
 268 014a 9B68     		ldr	r3, [r3, #8]
 269 014c 03F00303 		and	r3, r3, #3
 270 0150 012B     		cmp	r3, #1
 271 0152 0CD0     		beq	.L52
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 272              		.loc 1 495 0
 273 0154 1346     		mov	r3, r2
 274              	.L19:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 275              		.loc 1 495 0 discriminator 24
 276 0156 13F0010F 		tst	r3, #1
 277 015a BBD0     		beq	.L21
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 278              		.loc 1 495 0
 279 015c 0122     		movs	r2, #1
 280 015e 19E0     		b	.L20
 281              	.L51:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 282              		.loc 1 495 0 discriminator 15
 283 0160 494B     		ldr	r3, .L56+8
 284 0162 1B68     		ldr	r3, [r3]
 285 0164 13F0010F 		tst	r3, #1
 286 0168 EED0     		beq	.L18
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 287              		.loc 1 495 0
 288 016a 0123     		movs	r3, #1
 289 016c F3E7     		b	.L19
 290              	.L52:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 291              		.loc 1 495 0 discriminator 19
 292 016e 484B     		ldr	r3, .L56+16
 293 0170 1B68     		ldr	r3, [r3]
 294 0172 13F0010F 		tst	r3, #1
 295 0176 01D1     		bne	.L37
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 296              		.loc 1 495 0
 297 0178 1346     		mov	r3, r2
 298 017a ECE7     		b	.L19
 299              	.L37:
 300 017c 0123     		movs	r3, #1
 301 017e EAE7     		b	.L19
 302              	.L48:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 303              		.loc 1 495 0 discriminator 26
 304 0180 414B     		ldr	r3, .L56+8
 305 0182 1B68     		ldr	r3, [r3]
 306 0184 13F0010F 		tst	r3, #1
 307 0188 01D1     		bne	.L40
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 308              		.loc 1 495 0
 309 018a 1346     		mov	r3, r2
ARM GAS  /tmp/ccWogU0R.s 			page 22


 310 018c 9FE7     		b	.L22
 311              	.L40:
 312 018e 0123     		movs	r3, #1
 313 0190 9DE7     		b	.L22
 314              	.L41:
 315 0192 0122     		movs	r2, #1
 316              	.L20:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 317              		.loc 1 495 0 discriminator 39
 318 0194 82F00102 		eor	r2, r2, #1
 319              	.L16:
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 320              		.loc 1 494 0 is_stmt 1
 321 0198 32B1     		cbz	r2, .L12
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 322              		.loc 1 515 0
 323 019a 3E4A     		ldr	r2, .L56+20
 324 019c 9368     		ldr	r3, [r2, #8]
 325 019e 23F47C13 		bic	r3, r3, #4128768
 326 01a2 6168     		ldr	r1, [r4, #4]
 327 01a4 0B43     		orrs	r3, r3, r1
 328 01a6 9360     		str	r3, [r2, #8]
 329              	.L12:
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                           |
 330              		.loc 1 527 0
 331 01a8 E269     		ldr	r2, [r4, #28]
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.DataAlign                                         |
 332              		.loc 1 528 0
 333 01aa A36B     		ldr	r3, [r4, #56]
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                           |
 334              		.loc 1 527 0
 335 01ac 43EA4233 		orr	r3, r3, r2, lsl #13
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Resolution                                        |
 336              		.loc 1 529 0
 337 01b0 E268     		ldr	r2, [r4, #12]
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.DataAlign                                         |
 338              		.loc 1 528 0
 339 01b2 1343     		orrs	r3, r3, r2
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS(hadc->Init.DiscontinuousConvMode)  );
 340              		.loc 1 530 0
 341 01b4 A268     		ldr	r2, [r4, #8]
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Resolution                                        |
 342              		.loc 1 529 0
 343 01b6 1343     		orrs	r3, r3, r2
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 344              		.loc 1 531 0
 345 01b8 626A     		ldr	r2, [r4, #36]
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                           |
 346              		.loc 1 527 0
 347 01ba 43EA0243 		orr	r3, r3, r2, lsl #16
 348              	.LVL11:
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 349              		.loc 1 533 0
 350 01be 012A     		cmp	r2, #1
 351 01c0 34D0     		beq	.L53
 352              	.L23:
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     &&  (hadc->Init.ExternalTrigConvEdge != ADC_EXTERNALTRIGCONVEDGE_NONE))
ARM GAS  /tmp/ccWogU0R.s 			page 23


 353              		.loc 1 544 0
 354 01c2 E26A     		ldr	r2, [r4, #44]
 355 01c4 012A     		cmp	r2, #1
 356 01c6 03D0     		beq	.L24
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 357              		.loc 1 545 0
 358 01c8 216B     		ldr	r1, [r4, #48]
 359 01ca 09B1     		cbz	r1, .L24
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 360              		.loc 1 547 0
 361 01cc 0A43     		orrs	r2, r2, r1
 362 01ce 1343     		orrs	r3, r3, r2
 363              	.LVL12:
 364              	.L24:
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 365              		.loc 1 551 0
 366 01d0 2168     		ldr	r1, [r4]
 367 01d2 CD68     		ldr	r5, [r1, #12]
 368 01d4 304A     		ldr	r2, .L56+24
 369 01d6 2A40     		ands	r2, r2, r5
 370 01d8 1343     		orrs	r3, r3, r2
 371              	.LVL13:
 372 01da CB60     		str	r3, [r1, #12]
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 373              		.loc 1 559 0
 374 01dc 2268     		ldr	r2, [r4]
 375 01de 9368     		ldr	r3, [r2, #8]
 376 01e0 13F00C0F 		tst	r3, #12
 377 01e4 13D1     		bne	.L25
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_CFGR_DMACONTREQ(hadc->Init.DMAContinuousRequests) );
 378              		.loc 1 562 0
 379 01e6 A169     		ldr	r1, [r4, #24]
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                
 380              		.loc 1 563 0
 381 01e8 636B     		ldr	r3, [r4, #52]
 382 01ea 5B00     		lsls	r3, r3, #1
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_CFGR_AUTOWAIT(hadc->Init.LowPowerAutoWait)       |
 383              		.loc 1 561 0
 384 01ec 43EA8133 		orr	r3, r3, r1, lsl #14
 385              	.LVL14:
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 386              		.loc 1 565 0
 387 01f0 D168     		ldr	r1, [r2, #12]
 388 01f2 21F48041 		bic	r1, r1, #16384
 389 01f6 21F00201 		bic	r1, r1, #2
 390 01fa 0B43     		orrs	r3, r3, r1
 391              	.LVL15:
 392 01fc D360     		str	r3, [r2, #12]
 393              	.LVL16:
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 394              		.loc 1 567 0
 395 01fe E36B     		ldr	r3, [r4, #60]
 396 0200 012B     		cmp	r3, #1
 397 0202 18D0     		beq	.L54
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 398              		.loc 1 597 0
 399 0204 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccWogU0R.s 			page 24


 400 0206 1369     		ldr	r3, [r2, #16]
 401 0208 23F00103 		bic	r3, r3, #1
 402 020c 1361     		str	r3, [r2, #16]
 403              	.L25:
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 404              		.loc 1 613 0
 405 020e 2369     		ldr	r3, [r4, #16]
 406 0210 012B     		cmp	r3, #1
 407 0212 22D0     		beq	.L55
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 408              		.loc 1 620 0
 409 0214 2268     		ldr	r2, [r4]
 410 0216 136B     		ldr	r3, [r2, #48]
 411 0218 23F00F03 		bic	r3, r3, #15
 412 021c 1363     		str	r3, [r2, #48]
 413              	.L28:
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 414              		.loc 1 625 0
 415 021e A36D     		ldr	r3, [r4, #88]
 416 0220 23F00303 		bic	r3, r3, #3
 417 0224 43F00103 		orr	r3, r3, #1
 418 0228 A365     		str	r3, [r4, #88]
 419 022a 24E0     		b	.L3
 420              	.LVL17:
 421              	.L53:
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 422              		.loc 1 535 0
 423 022c A26A     		ldr	r2, [r4, #40]
 424 022e 013A     		subs	r2, r2, #1
 425 0230 43EA4243 		orr	r3, r3, r2, lsl #17
 426              	.LVL18:
 427 0234 C5E7     		b	.L23
 428              	.LVL19:
 429              	.L54:
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                ADC_CFGR2_ROVSE                     | 
 430              		.loc 1 587 0
 431 0236 2168     		ldr	r1, [r4]
 432 0238 0B69     		ldr	r3, [r1, #16]
 433 023a 23F4FF63 		bic	r3, r3, #2040
 434 023e 23F00503 		bic	r3, r3, #5
 435 0242 226C     		ldr	r2, [r4, #64]
 436 0244 656C     		ldr	r5, [r4, #68]
 437 0246 2A43     		orrs	r2, r2, r5
 438 0248 A56C     		ldr	r5, [r4, #72]
 439 024a 2A43     		orrs	r2, r2, r5
 440 024c E56C     		ldr	r5, [r4, #76]
 441 024e 2A43     		orrs	r2, r2, r5
 442 0250 1343     		orrs	r3, r3, r2
 443 0252 43F00103 		orr	r3, r3, #1
 444 0256 0B61     		str	r3, [r1, #16]
 445 0258 D9E7     		b	.L25
 446              	.L55:
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 447              		.loc 1 616 0
 448 025a 2168     		ldr	r1, [r4]
 449 025c 0B6B     		ldr	r3, [r1, #48]
 450 025e 23F00F03 		bic	r3, r3, #15
ARM GAS  /tmp/ccWogU0R.s 			page 25


 451 0262 226A     		ldr	r2, [r4, #32]
 452 0264 013A     		subs	r2, r2, #1
 453 0266 1343     		orrs	r3, r3, r2
 454 0268 0B63     		str	r3, [r1, #48]
 455 026a D8E7     		b	.L28
 456              	.LVL20:
 457              	.L10:
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 458              		.loc 1 630 0
 459 026c A36D     		ldr	r3, [r4, #88]
 460 026e 43F01003 		orr	r3, r3, #16
 461 0272 A365     		str	r3, [r4, #88]
 462              	.LVL21:
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 463              		.loc 1 632 0
 464 0274 0120     		movs	r0, #1
 465              	.LVL22:
 466              	.L3:
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 467              		.loc 1 637 0
 468 0276 03B0     		add	sp, sp, #12
 469              	.LCFI2:
 470              		.cfi_remember_state
 471              		.cfi_def_cfa_offset 12
 472              		@ sp needed
 473 0278 30BD     		pop	{r4, r5, pc}
 474              	.LVL23:
 475              	.L29:
 476              	.LCFI3:
 477              		.cfi_restore_state
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 478              		.loc 1 383 0
 479 027a 0120     		movs	r0, #1
 480              	.LVL24:
 481 027c FBE7     		b	.L3
 482              	.L57:
 483 027e 00BF     		.align	2
 484              	.L56:
 485 0280 00000000 		.word	SystemCoreClock
 486 0284 83DE1B43 		.word	1125899907
 487 0288 00000450 		.word	1342439424
 488 028c 00010450 		.word	1342439680
 489 0290 00020450 		.word	1342439936
 490 0294 00030450 		.word	1342440192
 491 0298 07C0F0FF 		.word	-999417
 492              		.cfi_endproc
 493              	.LFE309:
 495              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 496              		.align	1
 497              		.weak	HAL_ADC_MspDeInit
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 501              		.fpu fpv4-sp-d16
 503              	HAL_ADC_MspDeInit:
 504              	.LFB312:
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccWogU0R.s 			page 26


 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    */ 
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 505              		.loc 1 854 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510              	.LVL25:
 511 0000 7047     		bx	lr
 512              		.cfi_endproc
 513              	.LFE312:
 515              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 516              		.align	1
 517              		.global	HAL_ADC_PollForConversion
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 521              		.fpu fpv4-sp-d16
 523              	HAL_ADC_PollForConversion:
 524              	.LFB315:
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    */ 
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  *  @brief    ADC IO operation functions 
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  *
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim   
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       ##### IO operation functions #####
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Start conversion of regular group.
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Stop conversion of regular group.
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
ARM GAS  /tmp/ccWogU0R.s 			page 27


 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Poll for conversion event.
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Get result of regular channel conversion.
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Handle ADC interrupt request
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available): 
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           if ADC is Slave, ADC is enabled but conversion is not started, 
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           if ADC is master, ADC is enabled and multimode conversion is started.
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_TypeDef       *tmpADC_Master;
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Process locked */
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_LOCK(hadc);
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable the ADC peripheral */
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state                                                        */
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - by default if ADC is Master or Independent or if multimode feature is not available
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - if multimode setting is set to independent mode (no dual regular or injected conversions 
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code */
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
ARM GAS  /tmp/ccWogU0R.s 			page 28


 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {  
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset all ADC error code fields */
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc); 
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* trigger event.                                                       */
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (ADC_INDEPENDENT_OR_NONMULTIMODEREGULAR_SLAVE(hadc))
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Multimode feature is not available or ADC Instance is Independent or Master, 
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            or is not Slave ADC with dual regular conversions enabled. 
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            Then, set HAL_ADC_STATE_INJ_BUSY bit and reset HAL_ADC_STATE_INJ_EOC bit if JAUTO is set
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != RESET)
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start ADC group regular conversion */
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting 
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            HAL_ADC_STATE_INJ_BUSY bit and in resetting HAL_ADC_STATE_INJ_EOC bit */
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADC_Master = ADC_MASTER_REGISTER(hadc); 
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != RESET)
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
ARM GAS  /tmp/ccWogU0R.s 			page 29


 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in 
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential 
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccWogU0R.s 			page 30


1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are 
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still 
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 525              		.loc 1 1068 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529              	.LVL26:
 530              		.loc 1 1068 0
 531 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 532              	.LCFI4:
 533              		.cfi_def_cfa_offset 24
 534              		.cfi_offset 3, -24
 535              		.cfi_offset 4, -20
 536              		.cfi_offset 5, -16
 537              		.cfi_offset 6, -12
 538              		.cfi_offset 7, -8
 539              		.cfi_offset 14, -4
 540              	.LVL27:
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart = 0U;
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_Flag_End = 0U;
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_cfgr = 0U;
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_TypeDef *tmpADC_Master;
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 541              		.loc 1 1078 0
 542 0002 4669     		ldr	r6, [r0, #20]
 543 0004 082E     		cmp	r6, #8
 544 0006 3DD0     		beq	.L60
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_Flag_End = ADC_FLAG_EOS;
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
ARM GAS  /tmp/ccWogU0R.s 			page 31


1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* each conversion:                                                       */
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if(ADC_IS_DUAL_REGULAR_CONVERSION_ENABLE(hadc) == RESET)
 545              		.loc 1 1091 0
 546 0008 0368     		ldr	r3, [r0]
 547 000a 524A     		ldr	r2, .L87
 548 000c 9342     		cmp	r3, r2
 549 000e 0BD0     		beq	.L61
 550              		.loc 1 1091 0 is_stmt 0 discriminator 2
 551 0010 02F58072 		add	r2, r2, #256
 552 0014 9342     		cmp	r3, r2
 553 0016 07D0     		beq	.L61
 554              		.loc 1 1091 0
 555 0018 0022     		movs	r2, #0
 556              	.L62:
 557              		.loc 1 1091 0 discriminator 12
 558 001a 22BB     		cbnz	r2, .L63
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check ADC DMA mode in independant mode */
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if(READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != RESET)
 559              		.loc 1 1094 0 is_stmt 1
 560 001c DB68     		ldr	r3, [r3, #12]
 561 001e 13F0010F 		tst	r3, #1
 562 0022 1AD1     		bne	.L83
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
 563              		.loc 1 1101 0
 564 0024 0426     		movs	r6, #4
 565 0026 2DE0     		b	.L60
 566              	.L61:
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 567              		.loc 1 1091 0 discriminator 3
 568 0028 4B4A     		ldr	r2, .L87+4
 569 002a 9268     		ldr	r2, [r2, #8]
 570 002c 12F01F0F 		tst	r2, #31
 571 0030 0FD0     		beq	.L76
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 572              		.loc 1 1091 0 is_stmt 0 discriminator 5
 573 0032 494A     		ldr	r2, .L87+4
 574 0034 9268     		ldr	r2, [r2, #8]
 575 0036 02F01F02 		and	r2, r2, #31
 576 003a 052A     		cmp	r2, #5
 577 003c 0BD0     		beq	.L77
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 578              		.loc 1 1091 0 discriminator 7
 579 003e 464A     		ldr	r2, .L87+4
 580 0040 9268     		ldr	r2, [r2, #8]
 581 0042 02F01F02 		and	r2, r2, #31
 582 0046 092A     		cmp	r2, #9
ARM GAS  /tmp/ccWogU0R.s 			page 32


 583 0048 01D0     		beq	.L84
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 584              		.loc 1 1091 0
 585 004a 0122     		movs	r2, #1
 586 004c E5E7     		b	.L62
 587              	.L84:
 588 004e 0022     		movs	r2, #0
 589 0050 E3E7     		b	.L62
 590              	.L76:
 591 0052 0022     		movs	r2, #0
 592 0054 E1E7     		b	.L62
 593              	.L77:
 594 0056 0022     		movs	r2, #0
 595 0058 DFE7     		b	.L62
 596              	.L83:
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
 597              		.loc 1 1096 0 is_stmt 1
 598 005a 836D     		ldr	r3, [r0, #88]
 599 005c 43F02003 		orr	r3, r3, #32
 600 0060 8365     		str	r3, [r0, #88]
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 601              		.loc 1 1097 0
 602 0062 0120     		movs	r0, #1
 603              	.LVL28:
 604 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 605              	.LVL29:
 606              	.L63:
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check ADC DMA mode in multimode */
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if(ADC_MULTIMODE_DMA_ENABLED(hadc))
 607              		.loc 1 1107 0
 608 0066 3C4B     		ldr	r3, .L87+4
 609 0068 9B68     		ldr	r3, [r3, #8]
 610 006a 03F44043 		and	r3, r3, #49152
 611 006e B3F5004F 		cmp	r3, #32768
 612 0072 22D0     		beq	.L65
 613              		.loc 1 1107 0 is_stmt 0 discriminator 1
 614 0074 384B     		ldr	r3, .L87+4
 615 0076 9B68     		ldr	r3, [r3, #8]
 616 0078 03F44043 		and	r3, r3, #49152
 617 007c B3F5404F 		cmp	r3, #49152
 618 0080 1BD0     		beq	.L65
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
 619              		.loc 1 1114 0 is_stmt 1
 620 0082 0426     		movs	r6, #4
 621              	.L60:
 622 0084 0D46     		mov	r5, r1
 623 0086 0446     		mov	r4, r0
ARM GAS  /tmp/ccWogU0R.s 			page 33


 624              	.LVL30:
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Get tick count */
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 625              		.loc 1 1120 0
 626 0088 FFF7FEFF 		bl	HAL_GetTick
 627              	.LVL31:
 628 008c 0746     		mov	r7, r0
 629              	.LVL32:
 630              	.L67:
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   while(HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_End))
 631              		.loc 1 1123 0
 632 008e 2368     		ldr	r3, [r4]
 633 0090 1A68     		ldr	r2, [r3]
 634 0092 1642     		tst	r6, r2
 635 0094 17D1     		bne	.L85
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 636              		.loc 1 1126 0
 637 0096 B5F1FF3F 		cmp	r5, #-1
 638 009a F8D0     		beq	.L67
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if((Timeout == 0) || ((HAL_GetTick()-tickstart) > Timeout))
 639              		.loc 1 1128 0
 640 009c 25B1     		cbz	r5, .L68
 641              		.loc 1 1128 0 is_stmt 0 discriminator 1
 642 009e FFF7FEFF 		bl	HAL_GetTick
 643              	.LVL33:
 644 00a2 C01B     		subs	r0, r0, r7
 645 00a4 8542     		cmp	r5, r0
 646 00a6 F2D2     		bcs	.L67
 647              	.L68:
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to timeout */
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 648              		.loc 1 1131 0 is_stmt 1
 649 00a8 A36D     		ldr	r3, [r4, #88]
 650 00aa 43F00403 		orr	r3, r3, #4
 651 00ae A365     		str	r3, [r4, #88]
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Process unlocked */
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 652              		.loc 1 1134 0
 653 00b0 0023     		movs	r3, #0
 654 00b2 84F85430 		strb	r3, [r4, #84]
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_TIMEOUT;
 655              		.loc 1 1136 0
 656 00b6 0320     		movs	r0, #3
 657 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 658              	.LVL34:
ARM GAS  /tmp/ccWogU0R.s 			page 34


 659              	.L65:
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
 660              		.loc 1 1109 0
 661 00ba 836D     		ldr	r3, [r0, #88]
 662 00bc 43F02003 		orr	r3, r3, #32
 663 00c0 8365     		str	r3, [r0, #88]
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 664              		.loc 1 1110 0
 665 00c2 0120     		movs	r0, #1
 666              	.LVL35:
 667 00c4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 668              	.LVL36:
 669              	.L85:
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Update ADC state machine */
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 670              		.loc 1 1142 0
 671 00c6 A26D     		ldr	r2, [r4, #88]
 672 00c8 42F40072 		orr	r2, r2, #512
 673 00cc A265     		str	r2, [r4, #88]
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 674              		.loc 1 1146 0
 675 00ce DA68     		ldr	r2, [r3, #12]
 676 00d0 12F4406F 		tst	r2, #3072
 677 00d4 11D1     		bne	.L70
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)   )
 678              		.loc 1 1147 0 discriminator 1
 679 00d6 E269     		ldr	r2, [r4, #28]
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)   )
 680              		.loc 1 1146 0 discriminator 1
 681 00d8 7AB9     		cbnz	r2, .L70
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check whether end of sequence is reached */
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
 682              		.loc 1 1150 0
 683 00da 1A68     		ldr	r2, [r3]
 684 00dc 12F0080F 		tst	r2, #8
 685 00e0 0BD0     		beq	.L70
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 686              		.loc 1 1153 0
 687 00e2 A26D     		ldr	r2, [r4, #88]
 688 00e4 22F48072 		bic	r2, r2, #256
 689 00e8 A265     		str	r2, [r4, #88]
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 690              		.loc 1 1155 0
 691 00ea A26D     		ldr	r2, [r4, #88]
 692 00ec 12F4805F 		tst	r2, #4096
 693 00f0 03D1     		bne	.L70
ARM GAS  /tmp/ccWogU0R.s 			page 35


1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       { 
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 694              		.loc 1 1157 0
 695 00f2 A26D     		ldr	r2, [r4, #88]
 696 00f4 42F00102 		orr	r2, r2, #1
 697 00f8 A265     		str	r2, [r4, #88]
 698              	.L70:
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave        */
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* in function of multimode state (for devices with multimode               */
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* available).                                                              */
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (ADC_INDEPENDENT_OR_NONMULTIMODEREGULAR_SLAVE(hadc)) 
 699              		.loc 1 1165 0
 700 00fa 164A     		ldr	r2, .L87
 701 00fc 9342     		cmp	r3, r2
 702 00fe 18D0     		beq	.L71
 703              		.loc 1 1165 0 is_stmt 0 discriminator 1
 704 0100 02F50072 		add	r2, r2, #512
 705 0104 9342     		cmp	r3, r2
 706 0106 14D0     		beq	.L71
 707              		.loc 1 1165 0 discriminator 2
 708 0108 02F58072 		add	r2, r2, #256
 709 010c 9268     		ldr	r2, [r2, #8]
 710 010e 12F01F0F 		tst	r2, #31
 711 0112 0ED0     		beq	.L71
 712              		.loc 1 1165 0 discriminator 3
 713 0114 104A     		ldr	r2, .L87+4
 714 0116 9268     		ldr	r2, [r2, #8]
 715 0118 02F01F02 		and	r2, r2, #31
 716 011c 052A     		cmp	r2, #5
 717 011e 08D0     		beq	.L71
 718              		.loc 1 1165 0 discriminator 4
 719 0120 0D4A     		ldr	r2, .L87+4
 720 0122 9268     		ldr	r2, [r2, #8]
 721 0124 02F01F02 		and	r2, r2, #31
 722 0128 092A     		cmp	r2, #9
 723 012a 02D0     		beq	.L71
 724              	.LVL37:
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Retrieve handle ADC CFGR register */
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);  
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Retrieve Master ADC CFGR register */
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmpADC_Master = ADC_MASTER_REGISTER(hadc);
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 725              		.loc 1 1174 0 is_stmt 1 discriminator 6
 726 012c 094A     		ldr	r2, .L87
 727 012e D268     		ldr	r2, [r2, #12]
 728              	.LVL38:
 729 0130 00E0     		b	.L73
 730              	.LVL39:
 731              	.L71:
ARM GAS  /tmp/ccWogU0R.s 			page 36


1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 732              		.loc 1 1168 0
 733 0132 DA68     		ldr	r2, [r3, #12]
 734              	.LVL40:
 735              	.L73:
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Clear polled flag */
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_Flag_End == ADC_FLAG_EOS)
 736              		.loc 1 1178 0
 737 0134 082E     		cmp	r6, #8
 738 0136 06D0     		beq	.L86
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOS);  
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear end of conversion EOC flag of regular group if low power feature */
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature    */
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* until data register is read using function HAL_ADC_GetValue().         */
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == RESET)
 739              		.loc 1 1187 0
 740 0138 12F4804F 		tst	r2, #16384
 741 013c 07D1     		bne	.L81
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 742              		.loc 1 1189 0
 743 013e 0C22     		movs	r2, #12
 744              	.LVL41:
 745 0140 1A60     		str	r2, [r3]
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
 746              		.loc 1 1194 0
 747 0142 0020     		movs	r0, #0
 748 0144 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 749              	.LVL42:
 750              	.L86:
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 751              		.loc 1 1180 0
 752 0146 0822     		movs	r2, #8
 753              	.LVL43:
 754 0148 1A60     		str	r2, [r3]
 755              		.loc 1 1194 0
 756 014a 0020     		movs	r0, #0
 757 014c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 758              	.LVL44:
 759              	.L81:
 760 014e 0020     		movs	r0, #0
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 761              		.loc 1 1195 0
 762 0150 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 763              	.LVL45:
 764              	.L88:
 765 0152 00BF     		.align	2
ARM GAS  /tmp/ccWogU0R.s 			page 37


 766              	.L87:
 767 0154 00000450 		.word	1342439424
 768 0158 00030450 		.word	1342440192
 769              		.cfi_endproc
 770              	.LFE315:
 772              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 773              		.align	1
 774              		.global	HAL_ADC_PollForEvent
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 778              		.fpu fpv4-sp-d16
 780              	HAL_ADC_PollForEvent:
 781              	.LFB316:
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Poll for ADC event.
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param EventType the ADC event type.
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          This parameter can be one of the following values:
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_JQOVF_EVENT  ADC Injected context queue overflow event
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set  
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten 
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR); 
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 782              		.loc 1 1218 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              	.LVL46:
 787 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 788              	.LCFI5:
 789              		.cfi_def_cfa_offset 24
 790              		.cfi_offset 3, -24
 791              		.cfi_offset 4, -20
 792              		.cfi_offset 5, -16
 793              		.cfi_offset 6, -12
 794              		.cfi_offset 7, -8
 795              		.cfi_offset 14, -4
 796 0002 0546     		mov	r5, r0
 797 0004 0C46     		mov	r4, r1
 798 0006 1646     		mov	r6, r2
 799              	.LVL47:
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart = 0; 
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
ARM GAS  /tmp/ccWogU0R.s 			page 38


1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Get tick count */
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 800              		.loc 1 1226 0
 801 0008 FFF7FEFF 		bl	HAL_GetTick
 802              	.LVL48:
 803 000c 0746     		mov	r7, r0
 804              	.LVL49:
 805              	.L91:
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check selected event flag */
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   while(__HAL_ADC_GET_FLAG(hadc, EventType) == RESET)
 806              		.loc 1 1229 0
 807 000e 2B68     		ldr	r3, [r5]
 808 0010 1A68     		ldr	r2, [r3]
 809 0012 34EA0202 		bics	r2, r4, r2
 810 0016 11D0     		beq	.L104
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 811              		.loc 1 1232 0
 812 0018 B6F1FF3F 		cmp	r6, #-1
 813 001c F7D0     		beq	.L91
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if((Timeout == 0) || ((HAL_GetTick() - tickstart) > Timeout))
 814              		.loc 1 1234 0
 815 001e 26B1     		cbz	r6, .L92
 816              		.loc 1 1234 0 is_stmt 0 discriminator 1
 817 0020 FFF7FEFF 		bl	HAL_GetTick
 818              	.LVL50:
 819 0024 C01B     		subs	r0, r0, r7
 820 0026 8642     		cmp	r6, r0
 821 0028 F1D2     		bcs	.L91
 822              	.L92:
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to timeout */
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 823              		.loc 1 1237 0 is_stmt 1
 824 002a AB6D     		ldr	r3, [r5, #88]
 825 002c 43F00403 		orr	r3, r3, #4
 826 0030 AB65     		str	r3, [r5, #88]
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Process unlocked */
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 827              		.loc 1 1240 0
 828 0032 0023     		movs	r3, #0
 829 0034 85F85430 		strb	r3, [r5, #84]
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_TIMEOUT;
 830              		.loc 1 1242 0
 831 0038 0320     		movs	r0, #3
 832 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 833              	.LVL51:
 834              	.L104:
ARM GAS  /tmp/ccWogU0R.s 			page 39


1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   switch(EventType)
 835              		.loc 1 1247 0
 836 003c B4F5807F 		cmp	r4, #256
 837 0040 27D0     		beq	.L96
 838 0042 0BD8     		bhi	.L97
 839 0044 022C     		cmp	r4, #2
 840 0046 1CD0     		beq	.L98
 841 0048 802C     		cmp	r4, #128
 842 004a 34D1     		bne	.L95
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* End Of Sampling event */
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   case ADC_EOSMP_EVENT:
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear the End Of Sampling flag */
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     break;  
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Analog watchdog (level out of window) event */
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Note: In case of several analog watchdog enabled, if needed to know      */
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* For example:                                                             */
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_AWD1)) "    */
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_AWD2)) "    */
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_AWD3)) "    */
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check analog watchdog 1 flag */
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   case ADC_AWD_EVENT:
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 843              		.loc 1 1270 0
 844 004c AA6D     		ldr	r2, [r5, #88]
 845 004e 42F48032 		orr	r2, r2, #65536
 846 0052 AA65     		str	r2, [r5, #88]
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 847              		.loc 1 1273 0
 848 0054 8022     		movs	r2, #128
 849 0056 1A60     		str	r2, [r3]
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     break;
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check analog watchdog 2 flag */
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   case ADC_AWD2_EVENT:
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
ARM GAS  /tmp/ccWogU0R.s 			page 40


1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     break;
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check analog watchdog 3 flag */
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   case ADC_AWD3_EVENT:
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     break;
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Injected context queue overflow event */
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   case ADC_JQOVF_EVENT:
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC error code to Injected context queue overflow */
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC Injected context queue overflow flag */
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     break;
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Overrun event */
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   default: /* Case ADC_OVR_EVENT */
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* If overrun is set to overwrite previous data, overrun event is not     */
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* considered as an error.                                                */
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* overrun ")                                                             */
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to overrun */
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          otherwise, data register is potentially overwritten by new converted data as soon
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          as OVR is cleared. */
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     break;
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
 850              		.loc 1 1335 0
 851 0058 0020     		movs	r0, #0
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 852              		.loc 1 1275 0
 853 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 854              	.LVL52:
ARM GAS  /tmp/ccWogU0R.s 			page 41


 855              	.L97:
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 856              		.loc 1 1247 0
 857 005c B4F5007F 		cmp	r4, #512
 858 0060 20D0     		beq	.L100
 859 0062 B4F5806F 		cmp	r4, #1024
 860 0066 26D1     		bne	.L95
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 861              		.loc 1 1300 0
 862 0068 AA6D     		ldr	r2, [r5, #88]
 863 006a 42F48042 		orr	r2, r2, #16384
 864 006e AA65     		str	r2, [r5, #88]
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 865              		.loc 1 1303 0
 866 0070 EA6D     		ldr	r2, [r5, #92]
 867 0072 42F00802 		orr	r2, r2, #8
 868 0076 EA65     		str	r2, [r5, #92]
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 869              		.loc 1 1306 0
 870 0078 4FF48062 		mov	r2, #1024
 871 007c 1A60     		str	r2, [r3]
 872              		.loc 1 1335 0
 873 007e 0020     		movs	r0, #0
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 874              		.loc 1 1308 0
 875 0080 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 876              	.LVL53:
 877              	.L98:
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      
 878              		.loc 1 1252 0
 879 0082 AA6D     		ldr	r2, [r5, #88]
 880 0084 42F40062 		orr	r2, r2, #2048
 881 0088 AA65     		str	r2, [r5, #88]
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        
 882              		.loc 1 1255 0
 883 008a 0222     		movs	r2, #2
 884 008c 1A60     		str	r2, [r3]
 885              		.loc 1 1335 0
 886 008e 0020     		movs	r0, #0
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 887              		.loc 1 1257 0
 888 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 889              	.LVL54:
 890              	.L96:
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 891              		.loc 1 1280 0
 892 0092 AA6D     		ldr	r2, [r5, #88]
 893 0094 42F40032 		orr	r2, r2, #131072
 894 0098 AA65     		str	r2, [r5, #88]
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 895              		.loc 1 1283 0
 896 009a 4FF48072 		mov	r2, #256
 897 009e 1A60     		str	r2, [r3]
 898              		.loc 1 1335 0
 899 00a0 0020     		movs	r0, #0
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 900              		.loc 1 1285 0
ARM GAS  /tmp/ccWogU0R.s 			page 42


 901 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 902              	.LVL55:
 903              	.L100:
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 904              		.loc 1 1290 0
 905 00a4 AA6D     		ldr	r2, [r5, #88]
 906 00a6 42F48022 		orr	r2, r2, #262144
 907 00aa AA65     		str	r2, [r5, #88]
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 908              		.loc 1 1293 0
 909 00ac 4FF40072 		mov	r2, #512
 910 00b0 1A60     		str	r2, [r3]
 911              		.loc 1 1335 0
 912 00b2 0020     		movs	r0, #0
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 913              		.loc 1 1295 0
 914 00b4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 915              	.LVL56:
 916              	.L95:
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 917              		.loc 1 1316 0
 918 00b6 AA6B     		ldr	r2, [r5, #56]
 919 00b8 1AB1     		cbz	r2, .L105
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 920              		.loc 1 1329 0
 921 00ba 1022     		movs	r2, #16
 922 00bc 1A60     		str	r2, [r3]
 923              		.loc 1 1335 0
 924 00be 0020     		movs	r0, #0
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 925              		.loc 1 1336 0
 926 00c0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 927              	.LVL57:
 928              	.L105:
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 929              		.loc 1 1319 0
 930 00c2 AB6D     		ldr	r3, [r5, #88]
 931 00c4 43F48063 		orr	r3, r3, #1024
 932 00c8 AB65     		str	r3, [r5, #88]
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 933              		.loc 1 1322 0
 934 00ca EB6D     		ldr	r3, [r5, #92]
 935 00cc 43F00203 		orr	r3, r3, #2
 936 00d0 EB65     		str	r3, [r5, #92]
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 937              		.loc 1 1335 0
 938 00d2 0020     		movs	r0, #0
 939 00d4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 940              		.cfi_endproc
 941              	.LFE316:
 943              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 944              		.align	1
 945              		.global	HAL_ADC_GetValue
 946              		.syntax unified
 947              		.thumb
 948              		.thumb_func
 949              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccWogU0R.s 			page 43


 951              	HAL_ADC_GetValue:
 952              	.LFB321:
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence), 
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         OVR overrun.
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available): 
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADC_Start_IT() must be called for ADC Slave first, then for
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC Master.
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For ADC Slave, ADC is enabled only (conversion is not started).  
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For ADC Master, ADC is enabled and multimode conversion is started.
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure 
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling 
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         mode), the user must:
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP) 
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_TypeDef       *tmpADC_Master;
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Process locked */
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_LOCK(hadc);
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable the ADC peripheral */
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state                                                        */
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - by default if ADC is Master or Independent or if multimode feature is not available
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - if multimode setting is set to independent mode (no dual regular or injected conversions 
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
ARM GAS  /tmp/ccWogU0R.s 			page 44


1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code */
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR|HAL_ADC_ERROR_DMA));         
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset all ADC error code fields */
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc); 
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       switch(hadc->Init.EOCSelection)
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         default:
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);  
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* trigger event.                                                       */
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */ 
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
ARM GAS  /tmp/ccWogU0R.s 			page 45


1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if(ADC_INDEPENDENT_OR_NONMULTIMODEREGULAR_SLAVE(hadc))
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Multimode feature is not available or ADC Instance is Independent or Master, 
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            or is not Slave ADC with dual regular conversions enabled.         
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            Then set HAL_ADC_STATE_INJ_BUSY and reset HAL_ADC_STATE_INJ_EOC if JAUTO is set. */
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != RESET)
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Enable as well injected interruptions in case 
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            allows to start regular and injected conversions when JAUTO is
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            set with a single call to HAL_ADC_Start_IT() */
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           switch(hadc->Init.EOCSelection)
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV: 
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             default:
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);      
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start ADC group regular conversion */
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* hadc is the handle of a Slave ADC with dual regular conversions
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            enabled. Therefore, ADC_CR_ADSTART is NOT set */
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            are enabled nevertheless (for same reason as above) */
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADC_Master = ADC_MASTER_REGISTER(hadc); 
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != RESET)
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* First, update Slave State in setting HAL_ADC_STATE_INJ_BUSY bit 
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              and in resetting HAL_ADC_STATE_INJ_EOC bit */
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           switch(hadc->Init.EOCSelection)
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             default:
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
ARM GAS  /tmp/ccWogU0R.s 			page 46


1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of 
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
ARM GAS  /tmp/ccWogU0R.s 			page 47


1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Interruptions enabled in this function:
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete. 
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available): HAL_ADC_Start_DMA() 
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         is designed for single-ADC mode only. For multimode, the dedicated 
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADCEx_MultiModeStart_DMA() function must be used.
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param pData Destination Buffer address.
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param Length Length of data to be transferred from ADC peripheral to memory (in bytes)
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Process locked */
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_LOCK(hadc);
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Ensure that dual regular conversions are not enabled or unavailable.   */
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Otherwise, dedicated API HAL_ADCEx_MultiModeStart_DMA() must be used.  */
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (ADC_IS_DUAL_REGULAR_CONVERSION_ENABLE(hadc) == RESET)
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable the ADC peripheral */
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = ADC_Enable(hadc);
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Start conversion if ADC is effectively enabled */
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (tmp_hal_status == HAL_OK)
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC state                                                        */
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* - Clear state bitfield related to regular group conversion results   */
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* - Set state bitfield related to regular operation                    */
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY);
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           - by default if ADC is Master or Independent or if multimode feature is not available
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           - if multimode setting is set to independent mode (no dual regular or injected conversion
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
ARM GAS  /tmp/ccWogU0R.s 			page 48


1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Check if a conversion is on going on ADC group injected */
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Reset ADC error code fields related to regular conversions only */
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         else
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {  
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Reset all ADC error code fields */
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_CLEAR_ERRORCODE(hadc); 
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the DMA transfer complete callback */
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the DMA half transfer complete callback */
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the DMA error callback */
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Manage ADC and DMA start: ADC overrun interruption, DMA start,     */
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC start (in case of SW start):                                   */
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear regular group conversion flag and overrun flag               */
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* (To ensure of no unknown state from potential previous ADC         */
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* operations)                                                        */
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Process unlocked */
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Unlock before starting ADC conversions: in case of potential         */
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* interruption, to let the process to ADC IRQ Handler.                 */
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* With DMA, overrun event is always considered as an error even if 
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            hadc->Init.Overrun is set to ADC_OVR_DATA_OVERWRITTEN. Therefore,  
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            ADC_IT_OVR is enabled. */
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Enable ADC DMA mode */
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start the DMA channel */
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Enable conversion of regular group.                                  */
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If software start has been selected, conversion starts immediately.  */
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If external trigger has been selected, conversion will start at next */
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* trigger event.                                                       */
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start ADC group regular conversion */
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
ARM GAS  /tmp/ccWogU0R.s 			page 49


1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Process unlocked */
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable 
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC peripheral.
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversion on ADC group injected. If ADC group injected is under use, it
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available): 
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADC_Stop_DMA() function is dedicated to single-ADC mode only. 
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For multimode, the dedicated HAL_ADCEx_MultiModeStop_DMA() API must be used.
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continous requests is kept) */
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
ARM GAS  /tmp/ccWogU0R.s 			page 50


1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if DMA channel effectively disabled */
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status != HAL_OK)
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Update ADC state machine to error */
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed, to keep  */
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* in memory a potential failing status.                                  */
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_Disable(hadc);
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS 
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            to flag EOC.
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         To clear this flag, either use function:
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
ARM GAS  /tmp/ccWogU0R.s 			page 51


1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval ADC group regular conversion data
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 953              		.loc 1 1794 0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957              		@ link register save eliminated.
 958              	.LVL58:
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return ADC converted value */ 
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return hadc->Instance->DR;
 959              		.loc 1 1802 0
 960 0000 0368     		ldr	r3, [r0]
 961 0002 186C     		ldr	r0, [r3, #64]
 962              	.LVL59:
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 963              		.loc 1 1803 0
 964 0004 7047     		bx	lr
 965              		.cfi_endproc
 966              	.LFE321:
 968              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 969              		.align	1
 970              		.weak	HAL_ADC_ConvCpltCallback
 971              		.syntax unified
 972              		.thumb
 973              		.thumb_func
 974              		.fpu fpv4-sp-d16
 976              	HAL_ADC_ConvCpltCallback:
 977              	.LFB323:
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t overrun_error = 0; /* flag set if overrun occurrence has to be considered as an error */
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_cfgr = 0x0;
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_TypeDef *tmpADC_Master;  
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if(((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
ARM GAS  /tmp/ccWogU0R.s 			page 52


1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* End Of Sampling callback */
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       HAL_ADCEx_EndOfSamplingCallback(hadc);
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear regular group conversion flag */
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP );
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS))  )
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* to disable interruption.                                               */
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc))
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Get relevant register CFGR in ADC instance of ADC master or slave    */
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* in function of multimode state (for devices with multimode           */
1857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* available).                                                          */
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (ADC_INDEPENDENT_OR_NONMULTIMODEREGULAR_SLAVE(hadc))
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* check CONT bit directly in handle ADC CFGR register */
1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_cfgr = READ_REG(hadc->Instance->CFGR); 
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* else need to check Master ADC CONT bit */
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADC_Master = ADC_MASTER_REGISTER(hadc);
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR); 
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Carry on if continuous mode is disabled */
1871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) != ADC_CFGR_CONT)
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
1875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit         */
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* ADSTART==0 (no conversion on going)                              */
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
1880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt */
1881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Note: Overrun interrupt was enabled with EOC interrupt in      */
ARM GAS  /tmp/ccWogU0R.s 			page 53


1882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* HAL_Start_IT(), but is not disabled here because can be used   */
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* by overrun IRQ process below.                                  */
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Set ADC state */
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY); 
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             { 
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }           
1893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           else
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Change ADC state to error state */
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             
1899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Set ADC error code to ADC IP internal error */
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Conversion complete callback */
1907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       possibility to use:                                              */
1910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*        " if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "                */
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear regular group conversion flag */
1914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
1916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
1917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS) );
1919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ====== Check ADC group injected end of unitary conversion sequence conversions ===== */
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if( (((tmp_isr & ADC_FLAG_JEOC) == ADC_FLAG_JEOC) && ((tmp_ier & ADC_IT_JEOC) == ADC_IT_JEOC)) ||
1923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS))  )
1924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
1930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave  */
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* in function of multimode state (for devices with multimode         */
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* available).                                                        */
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (ADC_INDEPENDENT_OR_NONMULTIMODEINJECTED_SLAVE(hadc))
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR); 
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
ARM GAS  /tmp/ccWogU0R.s 			page 54


1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpADC_Master = ADC_MASTER_REGISTER(hadc);
1942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable interruption if no further conversion upcoming by injected     */
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* external trigger or by automatic injected conversion with regular      */
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* group having no further conversion upcoming (same conditions as        */
1948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* regular group interruption disabling above),                           */
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* and if injected scan sequence is completed.                            */
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                   ||
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)          &&
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )   )   )
1954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
1957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Particular case if injected contexts queue is enabled:             */
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* when the last context has been fully processed, JSQR is reset      */
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* by the hardware. Even if no injected conversion is planned to come */
1961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* (queue empty, triggers are ignored), it can start again            */
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* immediately after setting a new context (JADSTART is still set).   */
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Therefore, state of HAL ADC injected group is kept to busy.        */
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if(READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == RESET)
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_JEOC/ADC_IT_JEOS only if bit       */
1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* JADSTART==0 (no conversion on going)                             */
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt  */
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Set ADC state */
1974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             { 
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
1980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
1981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           else
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
1983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Update ADC state machine to error */
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Set ADC error code to ADC IP internal error */
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
1993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Injected Conversion complete callback */
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note:  HAL_ADCEx_InjectedConvCpltCallback can resort to 
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOS)) or
ARM GAS  /tmp/ccWogU0R.s 			page 55


1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOC)) to determine whether
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               interruption has been triggered by end of conversion or end of 
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               sequence.    */    
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear injected group conversion flag */
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
2003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))    
2007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Level out of window 1 callback */
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */ 
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))    
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Level out of window 2 callback */
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */ 
2026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))    
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Level out of window 3 callback */
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
2037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */ 
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR)) 
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* overrun ")                                                             */
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* error.                                                                 */
2050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
ARM GAS  /tmp/ccWogU0R.s 			page 56


2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       overrun_error = 1;
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check DMA configuration */
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (ADC_IS_DUAL_CONVERSION_ENABLE(hadc) == RESET)
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Multimode not set or feature not available or ADC independent */
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (HAL_IS_BIT_SET(hadc->Instance->CFGR, ADC_CFGR_DMAEN))
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           overrun_error = 1;
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Multimode (when feature is available) is enabled, 
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            Common Control Register MDMA bits must be checked. */
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (ADC_MULTIMODE_DMA_ENABLED(hadc))
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           overrun_error = 1;
2073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
2077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (overrun_error == 1)
2078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Change ADC state to error state */
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to overrun */
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Error callback */
2086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC overrun flag */
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check Injected context queue overflow flag ========== */
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_JQOVF) == ADC_FLAG_JQOVF) && ((tmp_ier & ADC_IT_JQOVF) == ADC_IT_JQOVF))
2099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Change ADC state to overrun state */
2101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
2102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
2103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC error code to Injected context queue overflow */
2104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
2105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear the Injected context queue overflow flag */
2107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Error callback */
ARM GAS  /tmp/ccWogU0R.s 			page 57


2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_InjectedQueueOverflowCallback(hadc);
2111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
2121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 978              		.loc 1 2121 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 982              		@ link register save eliminated.
 983              	.LVL60:
 984 0000 7047     		bx	lr
 985              		.cfi_endproc
 986              	.LFE323:
 988              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 989              		.align	1
 990              		.weak	HAL_ADC_ConvHalfCpltCallback
 991              		.syntax unified
 992              		.thumb
 993              		.thumb_func
 994              		.fpu fpv4-sp-d16
 996              	HAL_ADC_ConvHalfCpltCallback:
 997              	.LFB324:
2122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    */
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
2136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 998              		.loc 1 2136 0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002              		@ link register save eliminated.
 1003              	.LVL61:
 1004 0000 7047     		bx	lr
 1005              		.cfi_endproc
 1006              	.LFE324:
 1008              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1009              		.align	1
 1010              		.global	ADC_DMAHalfConvCplt
ARM GAS  /tmp/ccWogU0R.s 			page 58


 1011              		.syntax unified
 1012              		.thumb
 1013              		.thumb_func
 1014              		.fpu fpv4-sp-d16
 1016              	ADC_DMAHalfConvCplt:
 1017              	.LFB335:
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer 
2164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (HAL ADC handle paramater "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
2184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  *  @brief    Peripheral Control functions 
ARM GAS  /tmp/ccWogU0R.s 			page 59


2188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  *
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim   
2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
2191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              ##### Peripheral Control functions #####
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================  
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
2194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Configure channels on regular group
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Configure the analog watchdog
2196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
2198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
2199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         These internal paths can be disabled using function 
2206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADC_DeInit().
2207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         without resetting the ADC.
2212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param sConfig Structure of ADC channel assigned to ADC group regular.
2216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
2217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
2219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
2222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
2224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
2228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
2229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
2230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is  
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ignored (considered as reset) */
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(!((sConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENAB
2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification of channel number */
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
2239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      assert_param(IS_ADC_CHANNEL(hadc, sConfig->Channel));
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_DIFF_CHANNEL(hadc, sConfig->Channel));
ARM GAS  /tmp/ccWogU0R.s 			page 60


2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Channel number                                                        */
2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Channel rank                                                          */
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
2256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Regular sequence configuration */
2259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear the old SQx bits then set the new ones for the selected rank */
2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* For Rank 1 to 4 */
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (sConfig->Rank < 5)
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {      
2263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->SQR1, 
2264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_SQR1_RK(ADC_SQR2_SQ5, sConfig->Rank), 
2265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_SQR1_RK(sConfig->Channel, sConfig->Rank));
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* For Rank 5 to 9 */
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else if (sConfig->Rank < 10)
2269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->SQR2, 
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_SQR2_RK(ADC_SQR2_SQ5, sConfig->Rank), 
2272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_SQR2_RK(sConfig->Channel, sConfig->Rank));
2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* For Rank 10 to 14 */
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else if (sConfig->Rank < 15)
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->SQR3, 
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_SQR3_RK(ADC_SQR3_SQ10, sConfig->Rank), 
2279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_SQR3_RK(sConfig->Channel, sConfig->Rank));
2280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* For Rank 15 to 16 */
2282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {   
2284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->SQR4, 
2285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_SQR4_RK(ADC_SQR4_SQ15, sConfig->Rank), 
2286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_SQR4_RK(sConfig->Channel, sConfig->Rank));
2287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Parameters update conditioned to ADC state:                              */
2291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Parameters that can be updated when ADC is disabled or enabled without   */
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* conversion on going on regular group:                                    */
2293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - Channel sampling time                                                 */
2294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - Channel offset                                                        */
2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
2296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Channel sampling time configuration */
2299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear the old sample time then set the new one for the selected channel */
2300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* For channels 10 to 18 */
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (sConfig->Channel >= ADC_CHANNEL_10)
ARM GAS  /tmp/ccWogU0R.s 			page 61


2302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_SMPR2_SETTING(hadc, sConfig->SamplingTime, sConfig->Channel);
2304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         else /* For channels 0 to 9 */
2306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_SMPR1_SETTING(hadc, sConfig->SamplingTime, sConfig->Channel);
2308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        /* Configure the offset: offset enable/disable, channel, offset value */
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        /* Shift the offset with respect to the selected ADC resolution. */
2314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, sConfig->Offset);
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        switch (sConfig->OffsetNumber)
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        {
2319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Configure offset register i when applicable:                         */
2320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* - Enable offset                                                      */
2321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* - Set channel number                                                 */
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* - Set offset value                                                   */
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        case ADC_OFFSET_1:
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->OFR1,
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_OFR_FIELDS,
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_OFR1_OFFSET1_EN | ADC_OFR_CHANNEL(sConfig->Channel) | tmpOffsetShifted);     
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          break;
2328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        case ADC_OFFSET_2:
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          MODIFY_REG(hadc->Instance->OFR2,
2331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_OFR_FIELDS,
2332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_OFR2_OFFSET2_EN | ADC_OFR_CHANNEL(sConfig->Channel) | tmpOffsetShifted);     
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          break;
2334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        case ADC_OFFSET_3:
2336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          MODIFY_REG(hadc->Instance->OFR3,
2337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_OFR_FIELDS,
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_OFR3_OFFSET3_EN | ADC_OFR_CHANNEL(sConfig->Channel) | tmpOffsetShifted);     
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          break;
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        case ADC_OFFSET_4:
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          MODIFY_REG(hadc->Instance->OFR4,
2343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_OFR_FIELDS,
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_OFR4_OFFSET4_EN | ADC_OFR_CHANNEL(sConfig->Channel) | tmpOffsetShifted);     
2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          break;
2346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        /* Case ADC_OFFSET_NONE */
2348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        default :
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        /* Scan OFR1, OFR2, OFR3, OFR4 to check if the selected channel is enabled.
2350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           If this is the case, offset OFRx is disabled since
2351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           sConfig->OffsetNumber = ADC_OFFSET_NONE. */
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          if (((hadc->Instance->OFR1) & ADC_OFR1_OFFSET1_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
2353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          {
2354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN);
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          }
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          if (((hadc->Instance->OFR2) & ADC_OFR2_OFFSET2_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
2357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          {
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN);
ARM GAS  /tmp/ccWogU0R.s 			page 62


2359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          }
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          if (((hadc->Instance->OFR3) & ADC_OFR3_OFFSET3_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
2361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          {
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN);
2363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          }
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          if (((hadc->Instance->OFR4) & ADC_OFR4_OFFSET4_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          {
2366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN);
2367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          }
2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          break;
2369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }  /*  switch (sConfig->OffsetNumber) */
2370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }  /* if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET) */
2372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:                */
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Single or differential mode                                           */
2376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (ADC_IS_ENABLE(hadc) == RESET)
2378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configuration of differential mode */
2380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Disable differential mode (default mode: single-ended) */
2383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_CHANNEL(sConfig->Channel));
2384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Enable differential mode */
2388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_CHANNEL(sConfig->Channel));
2389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
2390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Sampling time configuration of channel ADC_IN+1 (negative input)     */
2391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear the old sample time then set the new one for the selected      */
2392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* channel.                                                             */
2393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Starting from channel 9, SMPR2 register must be configured           */
2394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (sConfig->Channel >= ADC_CHANNEL_9)
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_SMPR2_SETTING(hadc, sConfig->SamplingTime, sConfig->Channel+1);
2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         else /* For channels 0 to 8, SMPR1 must be configured */
2399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_SMPR1_SETTING(hadc, sConfig->SamplingTime, sConfig->Channel+1);
2401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
2407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If internal channel selected, enable dedicated internal buffers and    */
2408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  paths.                                                                */
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Note: these internal measurement paths can be disabled using           */
2410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* HAL_ADC_DeInit().                                                      */
2411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          
2412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configuration of common ADC parameters                                 */
2413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpADC_Common = ADC_COMMON_REGISTER(hadc);
2414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
ARM GAS  /tmp/ccWogU0R.s 			page 63


2416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If the requested internal measurement path has already been enabled,   */
2417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* bypass the configuration processing.                                   */
2418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (( (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) &&
2419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
2420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ( (sConfig->Channel == ADC_CHANNEL_VBAT)       &&
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VBATEN))          ) ||
2422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ( (sConfig->Channel == ADC_CHANNEL_VREFINT)    &&
2423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VREFEN)))
2424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
2425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Configuration of common ADC parameters (continuation)                */
2427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Software is allowed to change common parameters only when all ADCs   */
2429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* of the common group are disabled.                                    */
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((ADC_IS_ENABLE(hadc) == RESET)   &&
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
2432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
2434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc)) 
2436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               SET_BIT(tmpADC_Common->CCR, ADC_CCR_TSEN);
2438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             
2439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               /* Delay for temperature sensor stabilization time */
2440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               /* Wait loop initialization and execution */
2441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               /* Note: Variable divided by 2 to compensate partially          */
2442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               /*       CPU processing cycles.                                 */
2443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / (1000000 * 2)));
2444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               while(wait_loop_index != 0)
2445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               {
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 wait_loop_index--;
2447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               }
2448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
2449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           else if (sConfig->Channel == ADC_CHANNEL_VBAT)
2451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
2453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
2454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               SET_BIT(tmpADC_Common->CCR, ADC_CCR_VBATEN);
2455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
2456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           else if (sConfig->Channel == ADC_CHANNEL_VREFINT)
2458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             if (ADC_VREFINT_INSTANCE(hadc))
2460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
2461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               SET_BIT(tmpADC_Common->CCR, ADC_CCR_VREFEN);
2462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
2463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If the requested internal measurement path has already been          */
2466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* enabled and other ADC of the common group are enabled, internal      */
2467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* measurement paths cannot be enabled.                                 */
2468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         else  
2469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to error */
2471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           
ARM GAS  /tmp/ccWogU0R.s 			page 64


2473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           tmp_hal_status = HAL_ERROR;
2474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
2481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* parameters.                                                              */
2482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
2483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
2485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
2488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
2491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
2494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
2495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Configure the analog watchdog.
2499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive  
2501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters 
2502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting 
2503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         the ADC.
2504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
2505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
2506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
2507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   On this STM32 serie, analog watchdog thresholds cannot be modified
2508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         while ADC conversion is on going.
2509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param AnalogWDGConfig Structure of ADC analog watchdog configuration
2511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
2512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
2518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
2519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpADCFlagAWD2orAWD3;
2521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpADCITAWD2orAWD3;
2522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
2526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
2527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
2528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
ARM GAS  /tmp/ccWogU0R.s 			page 65


2530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
2531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC)  )
2532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, AnalogWDGConfig->Channel));
2534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verify if threshold is within the selected ADC resolution */
2537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
2538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
2539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
2541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
2542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* conversion on going on ADC groups regular and injected:                  */
2546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
2547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Analog watchdog thresholds                                            */
2548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
2549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Analog watchdog configuration */
2551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if(AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
2552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
2554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
2555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*    channels, on groups regular and-or injected.                      */
2556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->CFGR,  ADC_CFGR_WD_FIELDS, 
2557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               AnalogWDGConfig->WatchdogMode | ADC_CFGR_SET_AWD1CH(AnalogWDGConfig->Channel) );     
2558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Shift the offset with respect to the selected ADC resolution:        */
2560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
2561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* are set to 0                                                         */ 
2562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighTh
2563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
2564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set the high and low thresholds */
2566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->TR1,
2567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_TR1_HT1 | ADC_TR1_LT1,
2568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_TRX_HIGHTHRESHOLD(tmpAWDHighThresholdShifted) | tmpAWDLowThresholdShifted );  
2569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear the ADC Analog watchdog flag (in case of left enabled by         */
2571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* previous ADC operations) to be ready to use for HAL_ADC_IRQHandler()   */
2572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* or HAL_ADC_PollForEvent().                                             */
2573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_IT_AWD1);
2574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configure ADC Analog watchdog interrupt */
2576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if(AnalogWDGConfig->ITMode == ENABLE)
2577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Enable the ADC Analog watchdog interrupt */
2579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD1);
2580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Disable the ADC Analog watchdog interrupt */
2584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD1);
2585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
ARM GAS  /tmp/ccWogU0R.s 			page 66


2587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
2588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 and ADC_ANALOGWATCHDOG_3 */
2591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Shift the threshold with respect to the selected ADC resolution      */
2594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* have to be left-aligned on bit 7, the LSB (right bits) are set to 0  */
2595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighT
2596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
2597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
2599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the Analog watchdog channel or group of channels. This also    */
2601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* enables the watchdog.                                              */
2602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Note: Conditional register reset, because several channels can be  */
2603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*       set by successive calls of this function.                    */
2604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (AnalogWDGConfig->WatchdogMode != ADC_ANALOGWATCHDOG_NONE)
2605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->Instance->AWD2CR, ADC_CFGR_SET_AWD23CR(AnalogWDGConfig->Channel));
2607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         else
2609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
2611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
2613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the high and low thresholds */
2614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->TR2,  ADC_TR2_HT2 | ADC_TR2_LT2, 
2615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_TRX_HIGHTHRESHOLD (tmpAWDHighThresholdShifted) | tmpAWDLowThresholdShifted )
2616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
2617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set temporary variable to flag and IT of AWD2 or AWD3 for further  */
2618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* settings.                                                          */
2619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADCFlagAWD2orAWD3 = ADC_FLAG_AWD2;
2620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD2;
2621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
2622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
2623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
2626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the Analog watchdog channel or group of channels. This also    */
2629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* enables the watchdog.                                              */
2630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Note: Conditional register reset, because several channels can be */
2631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*       set by successive calls of this function.                    */
2632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (AnalogWDGConfig->WatchdogMode != ADC_ANALOGWATCHDOG_NONE) 
2633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->Instance->AWD3CR, ADC_CFGR_SET_AWD23CR(AnalogWDGConfig->Channel));
2635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         else
2637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
2639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
2641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the high and low thresholds */
2642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->TR3,  ADC_TR3_HT3 | ADC_TR3_LT3, 
2643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_TRX_HIGHTHRESHOLD (tmpAWDHighThresholdShifted) | tmpAWDLowThresholdShifted )
ARM GAS  /tmp/ccWogU0R.s 			page 67


2644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
2645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set temporary variable to flag and IT of AWD2 or AWD3 for further  */
2646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* settings.                                                          */
2647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADCFlagAWD2orAWD3 = ADC_FLAG_AWD3;
2648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD3;
2649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
2650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
2651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear the ADC Analog watchdog flag (in case left enabled by          */
2655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* previous ADC operations) to be ready to use for HAL_ADC_IRQHandler() */
2656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* or HAL_ADC_PollForEvent().                                           */
2657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, tmpADCFlagAWD2orAWD3);
2658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configure ADC Analog watchdog interrupt */
2660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if(AnalogWDGConfig->ITMode == ENABLE)
2661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, tmpADCITAWD2orAWD3);
2663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, tmpADCITAWD2orAWD3);
2667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If a conversion is on going on ADC group regular or injected, no update  */
2672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* could be done on neither of the AWD configuration structure parameters.  */
2673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
2674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
2676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
2679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
2682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
2685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
2686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
2691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
2694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  *  @brief    ADC Peripheral State functions
2695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  *
2696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim
2697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
2698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ##### Peripheral state and errors functions #####
2699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
2700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
ARM GAS  /tmp/ccWogU0R.s 			page 68


2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the  
2702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     peripheral.
2703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Check the ADC state
2704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Check the ADC error code
2705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
2707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
2708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Return the ADC handle state.
2712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be 
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         compared with states bits.
2714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For example:                                                         
2715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_REG_BUSY)) "
2716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_AWD1)    ) "
2717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
2719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
2721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return ADC handle state */
2726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return hadc->State;
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Return the ADC error code.
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
2733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
2735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return hadc->ErrorCode;
2740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
2744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
2748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
2751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
2752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion.
2756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param ConversionGroup ADC group regular and/or injected.
ARM GAS  /tmp/ccWogU0R.s 			page 69


2758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          This parameter can be one of the following values:
2759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_GROUP           ADC regular conversion type.
2760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_INJECTED_GROUP          ADC injected conversion type.
2761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_INJECTED_GROUP  ADC regular and injected conversion type.
2762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
2763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef* hadc, uint32_t ConversionGroup)
2765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART = 0;
2767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart = 0;
2768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0;
2769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
2773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification if ADC is not already stopped (on regular and injected      */
2775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* groups) to bypass this function if not needed.                           */
2776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc))
2777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Particular case of continuous auto-injection mode combined with        */
2779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* auto-delay mode.                                                       */
2780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
2781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* injected group stop ADC_CR_JADSTP).                                    */
2782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Procedure to be followed: Wait until JEOS=1, clear JEOS, set ADSTP=1   */
2783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* (see reference manual).                                                */
2784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((HAL_IS_BIT_SET(hadc->Instance->CFGR, ADC_CFGR_JAUTO)) 
2785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          && (hadc->Init.ContinuousConvMode==ENABLE) 
2786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          && (hadc->Init.LowPowerAutoWait==ENABLE))
2787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Use stop of regular group */
2789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ConversionGroup = ADC_REGULAR_GROUP;
2790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Wait until JEOS=1 (maximum Timeout: 4 injected conversions) */
2792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == RESET)
2793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES *4))
2795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to error */
2797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           
2799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Set ADC error code to ADC IP internal error */
2800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           
2802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           return HAL_ERROR;
2803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         Conversion_Timeout_CPU_cycles ++;
2805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear JEOS */
2808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
2809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Stop potential conversion on going on regular group */
2812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (ConversionGroup != ADC_INJECTED_GROUP)
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
ARM GAS  /tmp/ccWogU0R.s 			page 70


2815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADSTART) && 
2816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)     )
2817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Stop conversions on regular group */
2819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_ADSTP);
2820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Stop potential conversion on going on injected group */
2824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (ConversionGroup != ADC_REGULAR_GROUP)
2825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Software is allowed to set JADSTP only when JADSTART=1 and ADDIS=0 */
2827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_JADSTART) && 
2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)      )
2829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Stop conversions on injected group */
2831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_JADSTP);
2832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }   
2833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Selection of start and stop bits with respect to the regular or injected group */
2836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch(ConversionGroup)
2837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_REGULAR_INJECTED_GROUP:
2839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = (ADC_CR_ADSTART | ADC_CR_JADSTART);
2840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
2841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_INJECTED_GROUP:
2842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
2843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
2844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Case ADC_REGULAR_GROUP only*/
2845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     default:
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
2847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
2848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Wait for conversion effectively stopped */
2851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tickstart = HAL_GetTick();
2854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != RESET)
2856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if((HAL_GetTick()-tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
2858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to error */
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
2862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
2863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
2865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
2866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return HAL status */
ARM GAS  /tmp/ccWogU0R.s 			page 71


2872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
2873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable the selected ADC.
2879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
2880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
2881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
2883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
2885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart = 0;
2887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
2889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
2890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
2891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
2893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
2895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (ADC_ENABLING_CONDITIONS(hadc) == RESET)
2896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Update ADC state machine to error */
2898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to ADC IP internal error */
2901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
2904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable the ADC peripheral */
2907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_ENABLE(hadc);
2908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
2911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tickstart = HAL_GetTick();  
2912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
2914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit 
2916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           has been cleared (after a calibration), ADEN bit is reset by the 
2917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           calibration logic.
2918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           The workaround is to continue setting ADEN until ADRDY is becomes 1.
2919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
2920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           4 ADC clock cycle duration */
2921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_ENABLE(hadc);
2922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if((HAL_GetTick()-tickstart) > ADC_ENABLE_TIMEOUT)
2924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to error */
2926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
2928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
ARM GAS  /tmp/ccWogU0R.s 			page 72


2929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
2931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
2932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    
2936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return HAL status */
2937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
2938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Disable the selected ADC.
2942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
2943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         stopped.
2944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
2946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef* hadc)
2948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart = 0;
2950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
2953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       disabled.                                                          */
2954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (ADC_IS_ENABLE(hadc) != RESET)
2955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
2957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (ADC_DISABLING_CONDITIONS(hadc) != RESET)
2958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Disable the ADC peripheral */
2960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_DISABLE(hadc);
2961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Update ADC state machine to error */
2965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to ADC IP internal error */
2968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
2970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
2971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      
2973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
2974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Get tick count */
2975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tickstart = HAL_GetTick();
2976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADEN))
2978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
2980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to error */
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
2984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
2985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
ARM GAS  /tmp/ccWogU0R.s 			page 73


2986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
2987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
2988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
2992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return HAL status */
2993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
2994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DMA transfer complete callback. 
2998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
2999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
3000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
3002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
3003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
3005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
3006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
3007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->State, (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)))
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
3010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
3011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
3012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
3013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
3014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* to disable interruption.                                               */
3015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Is it the end of the regular sequence ? */
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if(HAL_IS_BIT_SET(hadc->Instance->ISR, ADC_FLAG_EOS))
3017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Are conversions software-triggered ? */
3019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if(ADC_IS_SOFTWARE_START_REGULAR(hadc))
3020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Is CONT bit set ? */
3022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if(READ_BIT(hadc->Instance->CFGR, ADC_CFGR_CONT) == RESET)
3023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* CONT bit is not set, no more conversions expected */
3025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if(HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
3027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           { 
3028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
3030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
3034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* DMA End of Transfer interrupt was triggered but conversions sequence
3036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          is not over. If DMACFG is set to 0, conversions are stopped. */
3037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if(READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMACFG) == RESET)
3038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* DMACFG bit is not set, conversions are stopped. */
3040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if(HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
3042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         { 
ARM GAS  /tmp/ccWogU0R.s 			page 74


3043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
3048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Conversion complete callback */
3049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
3050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
3052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
3054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
3056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
3057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
3059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Call ADC DMA error callback */
3061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
3062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
3065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DMA half transfer complete callback. 
3068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
3070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
3072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 1018              		.loc 1 3072 0
 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 0
 1021              		@ frame_needed = 0, uses_anonymous_args = 0
 1022              	.LVL62:
 1023              		.loc 1 3072 0
 1024 0000 08B5     		push	{r3, lr}
 1025              	.LCFI6:
 1026              		.cfi_def_cfa_offset 8
 1027              		.cfi_offset 3, -8
 1028              		.cfi_offset 14, -4
 1029              	.LVL63:
3073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
3075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
3076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Half conversion callback */
3077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc); 
 1030              		.loc 1 3077 0
 1031 0002 806A     		ldr	r0, [r0, #40]
 1032              	.LVL64:
 1033 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1034              	.LVL65:
 1035 0008 08BD     		pop	{r3, pc}
 1036              		.cfi_endproc
 1037              	.LFE335:
 1039              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1040              		.align	1
ARM GAS  /tmp/ccWogU0R.s 			page 75


 1041              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1042              		.syntax unified
 1043              		.thumb
 1044              		.thumb_func
 1045              		.fpu fpv4-sp-d16
 1047              	HAL_ADC_LevelOutOfWindowCallback:
 1048              	.LFB325:
2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1049              		.loc 1 2151 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 1053              		@ link register save eliminated.
 1054              	.LVL66:
 1055 0000 7047     		bx	lr
 1056              		.cfi_endproc
 1057              	.LFE325:
 1059              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1060              		.align	1
 1061              		.weak	HAL_ADC_ErrorCallback
 1062              		.syntax unified
 1063              		.thumb
 1064              		.thumb_func
 1065              		.fpu fpv4-sp-d16
 1067              	HAL_ADC_ErrorCallback:
 1068              	.LFB326:
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1069              		.loc 1 2173 0
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 0
 1072              		@ frame_needed = 0, uses_anonymous_args = 0
 1073              		@ link register save eliminated.
 1074              	.LVL67:
 1075 0000 7047     		bx	lr
 1076              		.cfi_endproc
 1077              	.LFE326:
 1079              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1080              		.align	1
 1081              		.global	HAL_ADC_IRQHandler
 1082              		.syntax unified
 1083              		.thumb
 1084              		.thumb_func
 1085              		.fpu fpv4-sp-d16
 1087              	HAL_ADC_IRQHandler:
 1088              	.LFB322:
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t overrun_error = 0; /* flag set if overrun occurrence has to be considered as an error */
 1089              		.loc 1 1811 0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 0
 1092              		@ frame_needed = 0, uses_anonymous_args = 0
 1093              	.LVL68:
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t overrun_error = 0; /* flag set if overrun occurrence has to be considered as an error */
 1094              		.loc 1 1811 0
 1095 0000 70B5     		push	{r4, r5, r6, lr}
 1096              	.LCFI7:
 1097              		.cfi_def_cfa_offset 16
 1098              		.cfi_offset 4, -16
ARM GAS  /tmp/ccWogU0R.s 			page 76


 1099              		.cfi_offset 5, -12
 1100              		.cfi_offset 6, -8
 1101              		.cfi_offset 14, -4
 1102 0002 0446     		mov	r4, r0
 1103              	.LVL69:
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1104              		.loc 1 1813 0
 1105 0004 0368     		ldr	r3, [r0]
 1106 0006 1D68     		ldr	r5, [r3]
 1107              	.LVL70:
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_cfgr = 0x0;
 1108              		.loc 1 1814 0
 1109 0008 5E68     		ldr	r6, [r3, #4]
 1110              	.LVL71:
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1111              		.loc 1 1823 0
 1112 000a 15F0020F 		tst	r5, #2
 1113 000e 10D0     		beq	.L114
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1114              		.loc 1 1823 0 is_stmt 0 discriminator 1
 1115 0010 16F0020F 		tst	r6, #2
 1116 0014 0DD0     		beq	.L114
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1117              		.loc 1 1826 0 is_stmt 1
 1118 0016 836D     		ldr	r3, [r0, #88]
 1119 0018 13F0100F 		tst	r3, #16
 1120 001c 03D1     		bne	.L115
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1121              		.loc 1 1829 0
 1122 001e 836D     		ldr	r3, [r0, #88]
 1123 0020 43F40063 		orr	r3, r3, #2048
 1124 0024 8365     		str	r3, [r0, #88]
 1125              	.L115:
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 1126              		.loc 1 1833 0
 1127 0026 2046     		mov	r0, r4
 1128              	.LVL72:
 1129 0028 FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
 1130              	.LVL73:
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1131              		.loc 1 1836 0
 1132 002c 2368     		ldr	r3, [r4]
 1133 002e 0222     		movs	r2, #2
 1134 0030 1A60     		str	r2, [r3]
 1135              	.L114:
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS))  )
 1136              		.loc 1 1840 0
 1137 0032 15F0040F 		tst	r5, #4
 1138 0036 02D0     		beq	.L116
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS))  )
 1139              		.loc 1 1840 0 is_stmt 0 discriminator 1
 1140 0038 16F0040F 		tst	r6, #4
 1141 003c 05D1     		bne	.L117
 1142              	.L116:
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS))  )
 1143              		.loc 1 1840 0 discriminator 3
 1144 003e 15F0080F 		tst	r5, #8
ARM GAS  /tmp/ccWogU0R.s 			page 77


 1145 0042 56D0     		beq	.L118
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1146              		.loc 1 1841 0 is_stmt 1
 1147 0044 16F0080F 		tst	r6, #8
 1148 0048 53D0     		beq	.L118
 1149              	.L117:
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1150              		.loc 1 1844 0
 1151 004a A36D     		ldr	r3, [r4, #88]
 1152 004c 13F0100F 		tst	r3, #16
 1153 0050 03D1     		bne	.L119
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1154              		.loc 1 1847 0
 1155 0052 A36D     		ldr	r3, [r4, #88]
 1156 0054 43F40073 		orr	r3, r3, #512
 1157 0058 A365     		str	r3, [r4, #88]
 1158              	.L119:
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1159              		.loc 1 1853 0
 1160 005a 2368     		ldr	r3, [r4]
 1161 005c DA68     		ldr	r2, [r3, #12]
 1162 005e 12F4406F 		tst	r2, #3072
 1163 0062 40D1     		bne	.L120
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1164              		.loc 1 1858 0
 1165 0064 A34A     		ldr	r2, .L157
 1166 0066 9342     		cmp	r3, r2
 1167 0068 18D0     		beq	.L121
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1168              		.loc 1 1858 0 is_stmt 0 discriminator 1
 1169 006a 02F50072 		add	r2, r2, #512
 1170 006e 9342     		cmp	r3, r2
 1171 0070 14D0     		beq	.L121
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1172              		.loc 1 1858 0 discriminator 2
 1173 0072 02F58072 		add	r2, r2, #256
 1174 0076 9268     		ldr	r2, [r2, #8]
 1175 0078 12F01F0F 		tst	r2, #31
 1176 007c 0ED0     		beq	.L121
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1177              		.loc 1 1858 0 discriminator 3
 1178 007e 9E4A     		ldr	r2, .L157+4
 1179 0080 9268     		ldr	r2, [r2, #8]
 1180 0082 02F01F02 		and	r2, r2, #31
 1181 0086 052A     		cmp	r2, #5
 1182 0088 08D0     		beq	.L121
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1183              		.loc 1 1858 0 discriminator 4
 1184 008a 9B4A     		ldr	r2, .L157+4
 1185 008c 9268     		ldr	r2, [r2, #8]
 1186 008e 02F01F02 		and	r2, r2, #31
 1187 0092 092A     		cmp	r2, #9
 1188 0094 02D0     		beq	.L121
 1189              	.LVL74:
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 1190              		.loc 1 1867 0 is_stmt 1 discriminator 6
 1191 0096 974A     		ldr	r2, .L157
ARM GAS  /tmp/ccWogU0R.s 			page 78


 1192 0098 D268     		ldr	r2, [r2, #12]
 1193              	.LVL75:
 1194 009a 00E0     		b	.L123
 1195              	.LVL76:
 1196              	.L121:
1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 1197              		.loc 1 1861 0
 1198 009c DA68     		ldr	r2, [r3, #12]
 1199              	.LVL77:
 1200              	.L123:
1871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1201              		.loc 1 1871 0
 1202 009e 12F4005F 		tst	r2, #8192
 1203 00a2 20D1     		bne	.L120
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1204              		.loc 1 1874 0
 1205 00a4 1A68     		ldr	r2, [r3]
 1206              	.LVL78:
 1207 00a6 12F0080F 		tst	r2, #8
 1208 00aa 1CD0     		beq	.L120
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 1209              		.loc 1 1878 0
 1210 00ac 9A68     		ldr	r2, [r3, #8]
 1211 00ae 12F0040F 		tst	r2, #4
 1212 00b2 10D1     		bne	.L124
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             
 1213              		.loc 1 1884 0
 1214 00b4 5A68     		ldr	r2, [r3, #4]
 1215 00b6 22F00C02 		bic	r2, r2, #12
 1216 00ba 5A60     		str	r2, [r3, #4]
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             
 1217              		.loc 1 1887 0
 1218 00bc A36D     		ldr	r3, [r4, #88]
 1219 00be 23F48073 		bic	r3, r3, #256
 1220 00c2 A365     		str	r3, [r4, #88]
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             { 
 1221              		.loc 1 1889 0
 1222 00c4 A36D     		ldr	r3, [r4, #88]
 1223 00c6 13F4805F 		tst	r3, #4096
 1224 00ca 0CD1     		bne	.L120
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }           
 1225              		.loc 1 1891 0
 1226 00cc A36D     		ldr	r3, [r4, #88]
 1227 00ce 43F00103 		orr	r3, r3, #1
 1228 00d2 A365     		str	r3, [r4, #88]
 1229 00d4 07E0     		b	.L120
 1230              	.L124:
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             
 1231              		.loc 1 1897 0
 1232 00d6 A36D     		ldr	r3, [r4, #88]
 1233 00d8 43F01003 		orr	r3, r3, #16
 1234 00dc A365     		str	r3, [r4, #88]
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 1235              		.loc 1 1900 0
 1236 00de E36D     		ldr	r3, [r4, #92]
 1237 00e0 43F00103 		orr	r3, r3, #1
 1238 00e4 E365     		str	r3, [r4, #92]
ARM GAS  /tmp/ccWogU0R.s 			page 79


 1239              	.L120:
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 1240              		.loc 1 1911 0
 1241 00e6 2046     		mov	r0, r4
 1242 00e8 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1243              	.LVL79:
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1244              		.loc 1 1918 0
 1245 00ec 2368     		ldr	r3, [r4]
 1246 00ee 0C22     		movs	r2, #12
 1247 00f0 1A60     		str	r2, [r3]
 1248              	.L118:
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS))  )
 1249              		.loc 1 1922 0
 1250 00f2 15F0200F 		tst	r5, #32
 1251 00f6 02D0     		beq	.L125
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS))  )
 1252              		.loc 1 1922 0 is_stmt 0 discriminator 1
 1253 00f8 16F0200F 		tst	r6, #32
 1254 00fc 05D1     		bne	.L126
 1255              	.L125:
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS))  )
 1256              		.loc 1 1922 0 discriminator 3
 1257 00fe 15F0400F 		tst	r5, #64
 1258 0102 60D0     		beq	.L127
1923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1259              		.loc 1 1923 0 is_stmt 1
 1260 0104 16F0400F 		tst	r6, #64
 1261 0108 5DD0     		beq	.L127
 1262              	.L126:
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1263              		.loc 1 1926 0
 1264 010a A36D     		ldr	r3, [r4, #88]
 1265 010c 13F0100F 		tst	r3, #16
 1266 0110 03D1     		bne	.L128
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1267              		.loc 1 1929 0
 1268 0112 A36D     		ldr	r3, [r4, #88]
 1269 0114 43F40053 		orr	r3, r3, #8192
 1270 0118 A365     		str	r3, [r4, #88]
 1271              	.L128:
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1272              		.loc 1 1935 0
 1273 011a 2368     		ldr	r3, [r4]
 1274 011c 754A     		ldr	r2, .L157
 1275 011e 9342     		cmp	r3, r2
 1276 0120 18D0     		beq	.L129
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1277              		.loc 1 1935 0 is_stmt 0 discriminator 1
 1278 0122 02F50072 		add	r2, r2, #512
 1279 0126 9342     		cmp	r3, r2
 1280 0128 14D0     		beq	.L129
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1281              		.loc 1 1935 0 discriminator 2
 1282 012a 02F58072 		add	r2, r2, #256
 1283 012e 9268     		ldr	r2, [r2, #8]
 1284 0130 12F01F0F 		tst	r2, #31
ARM GAS  /tmp/ccWogU0R.s 			page 80


 1285 0134 0ED0     		beq	.L129
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1286              		.loc 1 1935 0 discriminator 3
 1287 0136 704A     		ldr	r2, .L157+4
 1288 0138 9268     		ldr	r2, [r2, #8]
 1289 013a 02F01F02 		and	r2, r2, #31
 1290 013e 062A     		cmp	r2, #6
 1291 0140 08D0     		beq	.L129
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1292              		.loc 1 1935 0 discriminator 4
 1293 0142 6D4A     		ldr	r2, .L157+4
 1294 0144 9268     		ldr	r2, [r2, #8]
 1295 0146 02F01F02 		and	r2, r2, #31
 1296 014a 072A     		cmp	r2, #7
 1297 014c 02D0     		beq	.L129
 1298              	.LVL80:
1942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1299              		.loc 1 1942 0 is_stmt 1 discriminator 6
 1300 014e 694A     		ldr	r2, .L157
 1301 0150 D168     		ldr	r1, [r2, #12]
 1302              	.LVL81:
 1303 0152 00E0     		b	.L131
 1304              	.LVL82:
 1305              	.L129:
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1306              		.loc 1 1937 0
 1307 0154 D968     		ldr	r1, [r3, #12]
 1308              	.LVL83:
 1309              	.L131:
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
 1310              		.loc 1 1950 0
 1311 0156 DA6C     		ldr	r2, [r3, #76]
 1312 0158 12F0C00F 		tst	r2, #192
 1313 015c 09D0     		beq	.L132
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
 1314              		.loc 1 1950 0 is_stmt 0 discriminator 1
 1315 015e 11F0007F 		tst	r1, #33554432
 1316 0162 2AD1     		bne	.L133
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )   )   )
 1317              		.loc 1 1952 0 is_stmt 1
 1318 0164 DA68     		ldr	r2, [r3, #12]
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)          &&
 1319              		.loc 1 1951 0
 1320 0166 12F4406F 		tst	r2, #3072
 1321 016a 26D1     		bne	.L133
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )   )   )
 1322              		.loc 1 1952 0
 1323 016c 11F4005F 		tst	r1, #8192
 1324 0170 23D1     		bne	.L133
 1325              	.L132:
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1326              		.loc 1 1956 0
 1327 0172 1A68     		ldr	r2, [r3]
 1328 0174 12F0400F 		tst	r2, #64
 1329 0178 1FD0     		beq	.L133
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1330              		.loc 1 1964 0
ARM GAS  /tmp/ccWogU0R.s 			page 81


 1331 017a 11F4001F 		tst	r1, #2097152
 1332 017e 1CD1     		bne	.L133
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 1333              		.loc 1 1968 0
 1334 0180 9A68     		ldr	r2, [r3, #8]
 1335 0182 12F0080F 		tst	r2, #8
 1336 0186 10D1     		bne	.L134
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             
 1337              		.loc 1 1971 0
 1338 0188 5A68     		ldr	r2, [r3, #4]
 1339 018a 22F06002 		bic	r2, r2, #96
 1340 018e 5A60     		str	r2, [r3, #4]
1974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1341              		.loc 1 1974 0
 1342 0190 A36D     		ldr	r3, [r4, #88]
 1343 0192 23F48053 		bic	r3, r3, #4096
 1344 0196 A365     		str	r3, [r4, #88]
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             { 
 1345              		.loc 1 1976 0
 1346 0198 A36D     		ldr	r3, [r4, #88]
 1347 019a 13F4807F 		tst	r3, #256
 1348 019e 0CD1     		bne	.L133
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
 1349              		.loc 1 1978 0
 1350 01a0 A36D     		ldr	r3, [r4, #88]
 1351 01a2 43F00103 		orr	r3, r3, #1
 1352 01a6 A365     		str	r3, [r4, #88]
 1353 01a8 07E0     		b	.L133
 1354              	.L134:
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           
 1355              		.loc 1 1984 0
 1356 01aa A36D     		ldr	r3, [r4, #88]
 1357 01ac 43F01003 		orr	r3, r3, #16
 1358 01b0 A365     		str	r3, [r4, #88]
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 1359              		.loc 1 1987 0
 1360 01b2 E36D     		ldr	r3, [r4, #92]
 1361 01b4 43F00103 		orr	r3, r3, #1
 1362 01b8 E365     		str	r3, [r4, #92]
 1363              	.L133:
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 1364              		.loc 1 1999 0
 1365 01ba 2046     		mov	r0, r4
 1366 01bc FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 1367              	.LVL84:
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1368              		.loc 1 2002 0
 1369 01c0 2368     		ldr	r3, [r4]
 1370 01c2 6022     		movs	r2, #96
 1371 01c4 1A60     		str	r2, [r3]
 1372              	.L127:
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1373              		.loc 1 2006 0
 1374 01c6 15F0800F 		tst	r5, #128
 1375 01ca 02D0     		beq	.L135
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1376              		.loc 1 2006 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccWogU0R.s 			page 82


 1377 01cc 16F0800F 		tst	r6, #128
 1378 01d0 25D1     		bne	.L152
 1379              	.L135:
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1380              		.loc 1 2018 0 is_stmt 1
 1381 01d2 15F4807F 		tst	r5, #256
 1382 01d6 02D0     		beq	.L136
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1383              		.loc 1 2018 0 is_stmt 0 discriminator 1
 1384 01d8 16F4807F 		tst	r6, #256
 1385 01dc 2AD1     		bne	.L153
 1386              	.L136:
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1387              		.loc 1 2030 0 is_stmt 1
 1388 01de 15F4007F 		tst	r5, #512
 1389 01e2 02D0     		beq	.L137
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1390              		.loc 1 2030 0 is_stmt 0 discriminator 1
 1391 01e4 16F4007F 		tst	r6, #512
 1392 01e8 30D1     		bne	.L154
 1393              	.L137:
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1394              		.loc 1 2042 0 is_stmt 1
 1395 01ea 15F0100F 		tst	r5, #16
 1396 01ee 57D0     		beq	.L138
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1397              		.loc 1 2042 0 is_stmt 0 discriminator 1
 1398 01f0 16F0100F 		tst	r6, #16
 1399 01f4 54D0     		beq	.L138
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1400              		.loc 1 2051 0 is_stmt 1
 1401 01f6 A36B     		ldr	r3, [r4, #56]
 1402 01f8 002B     		cmp	r3, #0
 1403 01fa 4CD0     		beq	.L145
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1404              		.loc 1 2058 0
 1405 01fc 2368     		ldr	r3, [r4]
 1406 01fe 3D4A     		ldr	r2, .L157
 1407 0200 9342     		cmp	r3, r2
 1408 0202 2FD0     		beq	.L140
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1409              		.loc 1 2058 0 is_stmt 0 discriminator 2
 1410 0204 02F58072 		add	r2, r2, #256
 1411 0208 9342     		cmp	r3, r2
 1412 020a 2BD0     		beq	.L140
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1413              		.loc 1 2058 0
 1414 020c 0022     		movs	r2, #0
 1415              	.L141:
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1416              		.loc 1 2058 0 discriminator 8
 1417 020e 002A     		cmp	r2, #0
 1418 0210 31D1     		bne	.L142
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1419              		.loc 1 2061 0 is_stmt 1
 1420 0212 DB68     		ldr	r3, [r3, #12]
 1421 0214 13F0010F 		tst	r3, #1
ARM GAS  /tmp/ccWogU0R.s 			page 83


 1422 0218 49D1     		bne	.L148
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
 1423              		.loc 1 1812 0
 1424 021a 0023     		movs	r3, #0
 1425 021c 3CE0     		b	.L139
 1426              	.L152:
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 1427              		.loc 1 2009 0
 1428 021e A36D     		ldr	r3, [r4, #88]
 1429 0220 43F48033 		orr	r3, r3, #65536
 1430 0224 A365     		str	r3, [r4, #88]
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */ 
 1431              		.loc 1 2012 0
 1432 0226 2046     		mov	r0, r4
 1433 0228 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1434              	.LVL85:
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1435              		.loc 1 2014 0
 1436 022c 2368     		ldr	r3, [r4]
 1437 022e 8022     		movs	r2, #128
 1438 0230 1A60     		str	r2, [r3]
 1439 0232 CEE7     		b	.L135
 1440              	.L153:
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 1441              		.loc 1 2021 0
 1442 0234 A36D     		ldr	r3, [r4, #88]
 1443 0236 43F40033 		orr	r3, r3, #131072
 1444 023a A365     		str	r3, [r4, #88]
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */ 
 1445              		.loc 1 2024 0
 1446 023c 2046     		mov	r0, r4
 1447 023e FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 1448              	.LVL86:
2026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1449              		.loc 1 2026 0
 1450 0242 2368     		ldr	r3, [r4]
 1451 0244 4FF48072 		mov	r2, #256
 1452 0248 1A60     		str	r2, [r3]
 1453 024a C8E7     		b	.L136
 1454              	.L154:
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 1455              		.loc 1 2033 0
 1456 024c A36D     		ldr	r3, [r4, #88]
 1457 024e 43F48023 		orr	r3, r3, #262144
 1458 0252 A365     		str	r3, [r4, #88]
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */ 
 1459              		.loc 1 2036 0
 1460 0254 2046     		mov	r0, r4
 1461 0256 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 1462              	.LVL87:
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1463              		.loc 1 2038 0
 1464 025a 2368     		ldr	r3, [r4]
 1465 025c 4FF40072 		mov	r2, #512
 1466 0260 1A60     		str	r2, [r3]
 1467 0262 C2E7     		b	.L137
 1468              	.L140:
ARM GAS  /tmp/ccWogU0R.s 			page 84


2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1469              		.loc 1 2058 0 discriminator 3
 1470 0264 244A     		ldr	r2, .L157+4
 1471 0266 9268     		ldr	r2, [r2, #8]
 1472 0268 12F01F0F 		tst	r2, #31
 1473 026c 01D1     		bne	.L147
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1474              		.loc 1 2058 0 is_stmt 0
 1475 026e 0022     		movs	r2, #0
 1476 0270 CDE7     		b	.L141
 1477              	.L147:
 1478 0272 0122     		movs	r2, #1
 1479 0274 CBE7     		b	.L141
 1480              	.L142:
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1481              		.loc 1 2070 0 is_stmt 1
 1482 0276 204B     		ldr	r3, .L157+4
 1483 0278 9B68     		ldr	r3, [r3, #8]
 1484 027a 03F44043 		and	r3, r3, #49152
 1485 027e B3F5004F 		cmp	r3, #32768
 1486 0282 16D0     		beq	.L149
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1487              		.loc 1 2070 0 is_stmt 0 discriminator 1
 1488 0284 1C4B     		ldr	r3, .L157+4
 1489 0286 9B68     		ldr	r3, [r3, #8]
 1490 0288 03F44043 		and	r3, r3, #49152
 1491 028c B3F5404F 		cmp	r3, #49152
 1492 0290 11D0     		beq	.L150
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
 1493              		.loc 1 1812 0 is_stmt 1
 1494 0292 0023     		movs	r3, #0
 1495 0294 00E0     		b	.L139
 1496              	.L145:
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1497              		.loc 1 2053 0
 1498 0296 0123     		movs	r3, #1
 1499              	.L139:
 1500              	.LVL88:
2077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1501              		.loc 1 2077 0
 1502 0298 7BB9     		cbnz	r3, .L155
 1503              	.LVL89:
 1504              	.L143:
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1505              		.loc 1 2094 0
 1506 029a 2368     		ldr	r3, [r4]
 1507 029c 1022     		movs	r2, #16
 1508 029e 1A60     		str	r2, [r3]
 1509              	.L138:
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1510              		.loc 1 2098 0
 1511 02a0 15F4806F 		tst	r5, #1024
 1512 02a4 02D0     		beq	.L113
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1513              		.loc 1 2098 0 is_stmt 0 discriminator 1
 1514 02a6 16F4806F 		tst	r6, #1024
 1515 02aa 12D1     		bne	.L156
ARM GAS  /tmp/ccWogU0R.s 			page 85


 1516              	.L113:
 1517 02ac 70BD     		pop	{r4, r5, r6, pc}
 1518              	.LVL90:
 1519              	.L148:
2063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 1520              		.loc 1 2063 0 is_stmt 1
 1521 02ae 0123     		movs	r3, #1
 1522 02b0 F2E7     		b	.L139
 1523              	.L149:
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 1524              		.loc 1 2072 0
 1525 02b2 0123     		movs	r3, #1
 1526 02b4 F0E7     		b	.L139
 1527              	.L150:
 1528 02b6 0123     		movs	r3, #1
 1529 02b8 EEE7     		b	.L139
 1530              	.LVL91:
 1531              	.L155:
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 1532              		.loc 1 2080 0
 1533 02ba A36D     		ldr	r3, [r4, #88]
 1534              	.LVL92:
 1535 02bc 43F48063 		orr	r3, r3, #1024
 1536 02c0 A365     		str	r3, [r4, #88]
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 1537              		.loc 1 2083 0
 1538 02c2 E36D     		ldr	r3, [r4, #92]
 1539 02c4 43F00203 		orr	r3, r3, #2
 1540 02c8 E365     		str	r3, [r4, #92]
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1541              		.loc 1 2090 0
 1542 02ca 2046     		mov	r0, r4
 1543 02cc FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1544              	.LVL93:
 1545 02d0 E3E7     		b	.L143
 1546              	.L156:
2101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 1547              		.loc 1 2101 0
 1548 02d2 A36D     		ldr	r3, [r4, #88]
 1549 02d4 43F48043 		orr	r3, r3, #16384
 1550 02d8 A365     		str	r3, [r4, #88]
2104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 1551              		.loc 1 2104 0
 1552 02da E36D     		ldr	r3, [r4, #92]
 1553 02dc 43F00803 		orr	r3, r3, #8
 1554 02e0 E365     		str	r3, [r4, #92]
2107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 1555              		.loc 1 2107 0
 1556 02e2 2368     		ldr	r3, [r4]
 1557 02e4 4FF48062 		mov	r2, #1024
 1558 02e8 1A60     		str	r2, [r3]
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1559              		.loc 1 2110 0
 1560 02ea 2046     		mov	r0, r4
 1561 02ec FFF7FEFF 		bl	HAL_ADCEx_InjectedQueueOverflowCallback
 1562              	.LVL94:
2113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccWogU0R.s 			page 86


 1563              		.loc 1 2113 0
 1564 02f0 DCE7     		b	.L113
 1565              	.L158:
 1566 02f2 00BF     		.align	2
 1567              	.L157:
 1568 02f4 00000450 		.word	1342439424
 1569 02f8 00030450 		.word	1342440192
 1570              		.cfi_endproc
 1571              	.LFE322:
 1573              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1574              		.align	1
 1575              		.global	ADC_DMAConvCplt
 1576              		.syntax unified
 1577              		.thumb
 1578              		.thumb_func
 1579              		.fpu fpv4-sp-d16
 1581              	ADC_DMAConvCplt:
 1582              	.LFB334:
3002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1583              		.loc 1 3002 0
 1584              		.cfi_startproc
 1585              		@ args = 0, pretend = 0, frame = 0
 1586              		@ frame_needed = 0, uses_anonymous_args = 0
 1587              	.LVL95:
 1588 0000 08B5     		push	{r3, lr}
 1589              	.LCFI8:
 1590              		.cfi_def_cfa_offset 8
 1591              		.cfi_offset 3, -8
 1592              		.cfi_offset 14, -4
3004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 1593              		.loc 1 3004 0
 1594 0002 836A     		ldr	r3, [r0, #40]
 1595              	.LVL96:
3007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1596              		.loc 1 3007 0
 1597 0004 9A6D     		ldr	r2, [r3, #88]
 1598 0006 12F0500F 		tst	r2, #80
 1599 000a 31D1     		bne	.L160
3010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 1600              		.loc 1 3010 0
 1601 000c 9A6D     		ldr	r2, [r3, #88]
 1602 000e 42F40072 		orr	r2, r2, #512
 1603 0012 9A65     		str	r2, [r3, #88]
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1604              		.loc 1 3016 0
 1605 0014 1A68     		ldr	r2, [r3]
 1606 0016 1168     		ldr	r1, [r2]
 1607 0018 11F0080F 		tst	r1, #8
 1608 001c 14D0     		beq	.L161
3019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1609              		.loc 1 3019 0
 1610 001e D168     		ldr	r1, [r2, #12]
 1611 0020 11F4406F 		tst	r1, #3072
 1612 0024 20D1     		bne	.L162
3022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1613              		.loc 1 3022 0
 1614 0026 D268     		ldr	r2, [r2, #12]
ARM GAS  /tmp/ccWogU0R.s 			page 87


 1615 0028 12F4005F 		tst	r2, #8192
 1616 002c 1CD1     		bne	.L162
3025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if(HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1617              		.loc 1 3025 0
 1618 002e 9A6D     		ldr	r2, [r3, #88]
 1619 0030 22F48072 		bic	r2, r2, #256
 1620 0034 9A65     		str	r2, [r3, #88]
3026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           { 
 1621              		.loc 1 3026 0
 1622 0036 9A6D     		ldr	r2, [r3, #88]
 1623 0038 12F4805F 		tst	r2, #4096
 1624 003c 14D1     		bne	.L162
3028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 1625              		.loc 1 3028 0
 1626 003e 9A6D     		ldr	r2, [r3, #88]
 1627 0040 42F00102 		orr	r2, r2, #1
 1628 0044 9A65     		str	r2, [r3, #88]
 1629 0046 0FE0     		b	.L162
 1630              	.L161:
3037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1631              		.loc 1 3037 0
 1632 0048 D268     		ldr	r2, [r2, #12]
 1633 004a 12F0020F 		tst	r2, #2
 1634 004e 0BD1     		bne	.L162
3040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if(HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1635              		.loc 1 3040 0
 1636 0050 9A6D     		ldr	r2, [r3, #88]
 1637 0052 22F48072 		bic	r2, r2, #256
 1638 0056 9A65     		str	r2, [r3, #88]
3041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         { 
 1639              		.loc 1 3041 0
 1640 0058 9A6D     		ldr	r2, [r3, #88]
 1641 005a 12F4805F 		tst	r2, #4096
 1642 005e 03D1     		bne	.L162
3043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 1643              		.loc 1 3043 0
 1644 0060 9A6D     		ldr	r2, [r3, #88]
 1645 0062 42F00102 		orr	r2, r2, #1
 1646 0066 9A65     		str	r2, [r3, #88]
 1647              	.L162:
3049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1648              		.loc 1 3049 0
 1649 0068 1846     		mov	r0, r3
 1650              	.LVL97:
 1651 006a FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1652              	.LVL98:
 1653 006e 08BD     		pop	{r3, pc}
 1654              	.LVL99:
 1655              	.L160:
3053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1656              		.loc 1 3053 0
 1657 0070 9A6D     		ldr	r2, [r3, #88]
 1658 0072 12F0100F 		tst	r2, #16
 1659 0076 03D1     		bne	.L166
3061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1660              		.loc 1 3061 0
 1661 0078 1B6D     		ldr	r3, [r3, #80]
ARM GAS  /tmp/ccWogU0R.s 			page 88


 1662              	.LVL100:
 1663 007a 5B6B     		ldr	r3, [r3, #52]
 1664 007c 9847     		blx	r3
 1665              	.LVL101:
 1666 007e 08BD     		pop	{r3, pc}
 1667              	.LVL102:
 1668              	.L166:
3056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1669              		.loc 1 3056 0
 1670 0080 1846     		mov	r0, r3
 1671              	.LVL103:
 1672 0082 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1673              	.LVL104:
 1674 0086 08BD     		pop	{r3, pc}
 1675              		.cfi_endproc
 1676              	.LFE334:
 1678              		.section	.text.ADC_DMAError,"ax",%progbits
 1679              		.align	1
 1680              		.global	ADC_DMAError
 1681              		.syntax unified
 1682              		.thumb
 1683              		.thumb_func
 1684              		.fpu fpv4-sp-d16
 1686              	ADC_DMAError:
 1687              	.LFB336:
3078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
3079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DMA error callback.
3082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
3084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)
3086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 1688              		.loc 1 3086 0
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 0, uses_anonymous_args = 0
 1692              	.LVL105:
 1693 0000 08B5     		push	{r3, lr}
 1694              	.LCFI9:
 1695              		.cfi_def_cfa_offset 8
 1696              		.cfi_offset 3, -8
 1697              		.cfi_offset 14, -4
3087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1698              		.loc 1 3088 0
 1699 0002 806A     		ldr	r0, [r0, #40]
 1700              	.LVL106:
3089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
3090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC state */
3091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 1701              		.loc 1 3091 0
 1702 0004 836D     		ldr	r3, [r0, #88]
 1703 0006 43F04003 		orr	r3, r3, #64
 1704 000a 8365     		str	r3, [r0, #88]
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
ARM GAS  /tmp/ccWogU0R.s 			page 89


3093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC error code to DMA error */
3094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 1705              		.loc 1 3094 0
 1706 000c C36D     		ldr	r3, [r0, #92]
 1707 000e 43F00403 		orr	r3, r3, #4
 1708 0012 C365     		str	r3, [r0, #92]
3095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
3096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Error callback */
3097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc); 
 1709              		.loc 1 3097 0
 1710 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1711              	.LVL107:
 1712 0018 08BD     		pop	{r3, pc}
 1713              		.cfi_endproc
 1714              	.LFE336:
 1716              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 1717              		.align	1
 1718              		.global	HAL_ADC_ConfigChannel
 1719              		.syntax unified
 1720              		.thumb
 1721              		.thumb_func
 1722              		.fpu fpv4-sp-d16
 1724              	HAL_ADC_ConfigChannel:
 1725              	.LFB327:
2219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1726              		.loc 1 2219 0
 1727              		.cfi_startproc
 1728              		@ args = 0, pretend = 0, frame = 8
 1729              		@ frame_needed = 0, uses_anonymous_args = 0
 1730              		@ link register save eliminated.
 1731              	.LVL108:
 1732 0000 70B4     		push	{r4, r5, r6}
 1733              	.LCFI10:
 1734              		.cfi_def_cfa_offset 12
 1735              		.cfi_offset 4, -12
 1736              		.cfi_offset 5, -8
 1737              		.cfi_offset 6, -4
 1738 0002 83B0     		sub	sp, sp, #12
 1739              	.LCFI11:
 1740              		.cfi_def_cfa_offset 24
 1741              	.LVL109:
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 1742              		.loc 1 2223 0
 1743 0004 0022     		movs	r2, #0
 1744 0006 0192     		str	r2, [sp, #4]
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 1745              		.loc 1 2248 0
 1746 0008 90F85420 		ldrb	r2, [r0, #84]	@ zero_extendqisi2
 1747 000c 012A     		cmp	r2, #1
 1748 000e 00F03082 		beq	.L214
 1749 0012 0346     		mov	r3, r0
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 1750              		.loc 1 2248 0 is_stmt 0 discriminator 2
 1751 0014 0122     		movs	r2, #1
 1752 0016 80F85420 		strb	r2, [r0, #84]
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1753              		.loc 1 2255 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccWogU0R.s 			page 90


 1754 001a 0068     		ldr	r0, [r0]
 1755              	.LVL110:
 1756 001c 8268     		ldr	r2, [r0, #8]
 1757 001e 12F0040F 		tst	r2, #4
 1758 0022 40F01382 		bne	.L171
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {      
 1759              		.loc 1 2261 0
 1760 0026 4A68     		ldr	r2, [r1, #4]
 1761 0028 042A     		cmp	r2, #4
 1762 002a 31D8     		bhi	.L172
2263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_SQR1_RK(ADC_SQR2_SQ5, sConfig->Rank), 
 1763              		.loc 1 2263 0
 1764 002c 046B     		ldr	r4, [r0, #48]
 1765 002e 02EB4202 		add	r2, r2, r2, lsl #1
 1766 0032 5500     		lsls	r5, r2, #1
 1767 0034 1F22     		movs	r2, #31
 1768 0036 AA40     		lsls	r2, r2, r5
 1769 0038 24EA0202 		bic	r2, r4, r2
 1770 003c 0C68     		ldr	r4, [r1]
 1771 003e AC40     		lsls	r4, r4, r5
 1772 0040 2243     		orrs	r2, r2, r4
 1773 0042 0263     		str	r2, [r0, #48]
 1774              	.L173:
2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1775              		.loc 1 2295 0
 1776 0044 1868     		ldr	r0, [r3]
 1777 0046 8268     		ldr	r2, [r0, #8]
 1778 0048 12F00C0F 		tst	r2, #12
 1779 004c 68D1     		bne	.L176
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1780              		.loc 1 2301 0
 1781 004e 0A68     		ldr	r2, [r1]
 1782 0050 092A     		cmp	r2, #9
 1783 0052 4ED9     		bls	.L177
2303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 1784              		.loc 1 2303 0
 1785 0054 8469     		ldr	r4, [r0, #24]
 1786 0056 02EB4202 		add	r2, r2, r2, lsl #1
 1787 005a 1E3A     		subs	r2, r2, #30
 1788 005c 0725     		movs	r5, #7
 1789 005e 9540     		lsls	r5, r5, r2
 1790 0060 24EA0504 		bic	r4, r4, r5
 1791 0064 8D68     		ldr	r5, [r1, #8]
 1792 0066 05FA02F2 		lsl	r2, r5, r2
 1793 006a 2243     		orrs	r2, r2, r4
 1794 006c 8261     		str	r2, [r0, #24]
 1795              	.L178:
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 1796              		.loc 1 2315 0
 1797 006e 4869     		ldr	r0, [r1, #20]
 1798 0070 1C68     		ldr	r4, [r3]
 1799 0072 E268     		ldr	r2, [r4, #12]
 1800 0074 C2F3C102 		ubfx	r2, r2, #3, #2
 1801 0078 5200     		lsls	r2, r2, #1
 1802 007a 00FA02F2 		lsl	r2, r0, r2
 1803              	.LVL111:
2317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        {
ARM GAS  /tmp/ccWogU0R.s 			page 91


 1804              		.loc 1 2317 0
 1805 007e 0869     		ldr	r0, [r1, #16]
 1806 0080 0138     		subs	r0, r0, #1
 1807 0082 0328     		cmp	r0, #3
 1808 0084 00F2C380 		bhi	.L179
 1809 0088 DFE800F0 		tbb	[pc, r0]
 1810              	.L181:
 1811 008c 40       		.byte	(.L180-.L181)/2
 1812 008d A0       		.byte	(.L182-.L181)/2
 1813 008e AB       		.byte	(.L183-.L181)/2
 1814 008f B6       		.byte	(.L184-.L181)/2
 1815              	.LVL112:
 1816              		.p2align 1
 1817              	.L172:
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1818              		.loc 1 2268 0
 1819 0090 092A     		cmp	r2, #9
 1820 0092 0ED8     		bhi	.L174
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_SQR2_RK(ADC_SQR2_SQ5, sConfig->Rank), 
 1821              		.loc 1 2270 0
 1822 0094 446B     		ldr	r4, [r0, #52]
 1823 0096 02EB4202 		add	r2, r2, r2, lsl #1
 1824 009a 5500     		lsls	r5, r2, #1
 1825 009c 1E3D     		subs	r5, r5, #30
 1826 009e 1F22     		movs	r2, #31
 1827 00a0 AA40     		lsls	r2, r2, r5
 1828 00a2 24EA0202 		bic	r2, r4, r2
 1829 00a6 0C68     		ldr	r4, [r1]
 1830 00a8 04FA05F5 		lsl	r5, r4, r5
 1831 00ac 2A43     		orrs	r2, r2, r5
 1832 00ae 4263     		str	r2, [r0, #52]
 1833 00b0 C8E7     		b	.L173
 1834              	.L174:
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1835              		.loc 1 2275 0
 1836 00b2 0E2A     		cmp	r2, #14
 1837 00b4 0ED8     		bhi	.L175
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_SQR3_RK(ADC_SQR3_SQ10, sConfig->Rank), 
 1838              		.loc 1 2277 0
 1839 00b6 846B     		ldr	r4, [r0, #56]
 1840 00b8 02EB4202 		add	r2, r2, r2, lsl #1
 1841 00bc 5500     		lsls	r5, r2, #1
 1842 00be 3C3D     		subs	r5, r5, #60
 1843 00c0 1F22     		movs	r2, #31
 1844 00c2 AA40     		lsls	r2, r2, r5
 1845 00c4 24EA0202 		bic	r2, r4, r2
 1846 00c8 0C68     		ldr	r4, [r1]
 1847 00ca 04FA05F5 		lsl	r5, r4, r5
 1848 00ce 2A43     		orrs	r2, r2, r5
 1849 00d0 8263     		str	r2, [r0, #56]
 1850 00d2 B7E7     		b	.L173
 1851              	.L175:
2284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_SQR4_RK(ADC_SQR4_SQ15, sConfig->Rank), 
 1852              		.loc 1 2284 0
 1853 00d4 C46B     		ldr	r4, [r0, #60]
 1854 00d6 02EB4202 		add	r2, r2, r2, lsl #1
 1855 00da 5500     		lsls	r5, r2, #1
ARM GAS  /tmp/ccWogU0R.s 			page 92


 1856 00dc 5A3D     		subs	r5, r5, #90
 1857 00de 1F22     		movs	r2, #31
 1858 00e0 AA40     		lsls	r2, r2, r5
 1859 00e2 24EA0202 		bic	r2, r4, r2
 1860 00e6 0C68     		ldr	r4, [r1]
 1861 00e8 04FA05F5 		lsl	r5, r4, r5
 1862 00ec 2A43     		orrs	r2, r2, r5
 1863 00ee C263     		str	r2, [r0, #60]
 1864 00f0 A8E7     		b	.L173
 1865              	.L177:
2307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 1866              		.loc 1 2307 0
 1867 00f2 4469     		ldr	r4, [r0, #20]
 1868 00f4 02EB4202 		add	r2, r2, r2, lsl #1
 1869 00f8 0725     		movs	r5, #7
 1870 00fa 9540     		lsls	r5, r5, r2
 1871 00fc 24EA0504 		bic	r4, r4, r5
 1872 0100 8D68     		ldr	r5, [r1, #8]
 1873 0102 05FA02F2 		lsl	r2, r5, r2
 1874 0106 2243     		orrs	r2, r2, r4
 1875 0108 4261     		str	r2, [r0, #20]
 1876 010a B0E7     		b	.L178
 1877              	.LVL113:
 1878              	.L180:
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_OFR_FIELDS,
 1879              		.loc 1 2324 0
 1880 010c 206E     		ldr	r0, [r4, #96]
 1881 010e B04D     		ldr	r5, .L253
 1882 0110 0540     		ands	r5, r5, r0
 1883 0112 0868     		ldr	r0, [r1]
 1884 0114 42EA8062 		orr	r2, r2, r0, lsl #26
 1885              	.LVL114:
 1886 0118 1543     		orrs	r5, r5, r2
 1887 011a 45F00045 		orr	r5, r5, #-2147483648
 1888 011e 2566     		str	r5, [r4, #96]
 1889              	.L176:
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1890              		.loc 1 2377 0
 1891 0120 1868     		ldr	r0, [r3]
 1892 0122 8268     		ldr	r2, [r0, #8]
 1893 0124 02F00302 		and	r2, r2, #3
 1894 0128 012A     		cmp	r2, #1
 1895 012a 00F0A480 		beq	.L236
 1896 012e 0022     		movs	r2, #0
 1897              	.L188:
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1898              		.loc 1 2377 0 is_stmt 0 discriminator 6
 1899 0130 002A     		cmp	r2, #0
 1900 0132 40F09681 		bne	.L217
2380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1901              		.loc 1 2380 0 is_stmt 1
 1902 0136 CC68     		ldr	r4, [r1, #12]
 1903 0138 B4F1804F 		cmp	r4, #1073741824
 1904 013c 00F0A380 		beq	.L190
2383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 1905              		.loc 1 2383 0
 1906 0140 D0F8B040 		ldr	r4, [r0, #176]
ARM GAS  /tmp/ccWogU0R.s 			page 93


 1907 0144 0E68     		ldr	r6, [r1]
 1908 0146 0125     		movs	r5, #1
 1909 0148 B540     		lsls	r5, r5, r6
 1910 014a 24EA0504 		bic	r4, r4, r5
 1911 014e C0F8B040 		str	r4, [r0, #176]
 1912              	.L191:
 1913              	.LVL115:
2418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 1914              		.loc 1 2418 0
 1915 0152 0968     		ldr	r1, [r1]
 1916              	.LVL116:
 1917 0154 1129     		cmp	r1, #17
 1918 0156 00F0BF80 		beq	.L237
 1919              	.L193:
2419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ( (sConfig->Channel == ADC_CHANNEL_VBAT)       &&
 1920              		.loc 1 2419 0
 1921 015a 1229     		cmp	r1, #18
 1922 015c 00F0C380 		beq	.L238
 1923              	.L195:
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ( (sConfig->Channel == ADC_CHANNEL_VREFINT)    &&
 1924              		.loc 1 2421 0
 1925 0160 0029     		cmp	r1, #0
 1926 0162 40F08081 		bne	.L218
2423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
 1927              		.loc 1 2423 0
 1928 0166 9B48     		ldr	r0, .L253+4
 1929 0168 8068     		ldr	r0, [r0, #8]
2422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VREFEN)))
 1930              		.loc 1 2422 0
 1931 016a 10F4800F 		tst	r0, #4194304
 1932 016e 40F07C81 		bne	.L219
 1933              	.L194:
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 1934              		.loc 1 2430 0
 1935 0172 1C68     		ldr	r4, [r3]
 1936 0174 A068     		ldr	r0, [r4, #8]
 1937 0176 00F00300 		and	r0, r0, #3
 1938 017a 0128     		cmp	r0, #1
 1939 017c 00F0BA80 		beq	.L239
 1940              	.L196:
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 1941              		.loc 1 2430 0 is_stmt 0 discriminator 6
 1942 0180 002A     		cmp	r2, #0
 1943 0182 40F0CD80 		bne	.L197
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 1944              		.loc 1 2430 0 discriminator 7
 1945 0186 9448     		ldr	r0, .L253+8
 1946 0188 8442     		cmp	r4, r0
 1947 018a 00F0BA80 		beq	.L240
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1948              		.loc 1 2431 0 is_stmt 1
 1949 018e 9348     		ldr	r0, .L253+12
 1950 0190 8442     		cmp	r4, r0
 1951 0192 00F0D980 		beq	.L241
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1952              		.loc 1 2431 0 is_stmt 0 discriminator 10
 1953 0196 9048     		ldr	r0, .L253+8
ARM GAS  /tmp/ccWogU0R.s 			page 94


 1954 0198 8068     		ldr	r0, [r0, #8]
 1955 019a 00F00300 		and	r0, r0, #3
 1956 019e 0128     		cmp	r0, #1
 1957 01a0 00F0F680 		beq	.L242
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1958              		.loc 1 2431 0
 1959 01a4 1046     		mov	r0, r2
 1960              	.L207:
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1961              		.loc 1 2431 0 discriminator 27
 1962 01a6 10F0010F 		tst	r0, #1
 1963 01aa 40F0FA80 		bne	.L229
 1964              	.L206:
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1965              		.loc 1 2431 0 discriminator 29
 1966 01ae 8B48     		ldr	r0, .L253+12
 1967 01b0 8068     		ldr	r0, [r0, #8]
 1968 01b2 00F00300 		and	r0, r0, #3
 1969 01b6 0128     		cmp	r0, #1
 1970 01b8 40F0F480 		bne	.L205
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1971              		.loc 1 2431 0 discriminator 30
 1972 01bc 8748     		ldr	r0, .L253+12
 1973 01be 0068     		ldr	r0, [r0]
 1974 01c0 10F0010F 		tst	r0, #1
 1975 01c4 00F0EE80 		beq	.L205
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1976              		.loc 1 2431 0
 1977 01c8 0122     		movs	r2, #1
 1978 01ca EBE0     		b	.L205
 1979              	.LVL117:
 1980              	.L182:
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_OFR_FIELDS,
 1981              		.loc 1 2330 0 is_stmt 1
 1982 01cc 606E     		ldr	r0, [r4, #100]
 1983 01ce 804D     		ldr	r5, .L253
 1984 01d0 0540     		ands	r5, r5, r0
 1985 01d2 0868     		ldr	r0, [r1]
 1986 01d4 42EA8062 		orr	r2, r2, r0, lsl #26
 1987              	.LVL118:
 1988 01d8 1543     		orrs	r5, r5, r2
 1989 01da 45F00045 		orr	r5, r5, #-2147483648
 1990 01de 6566     		str	r5, [r4, #100]
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           
 1991              		.loc 1 2333 0
 1992 01e0 9EE7     		b	.L176
 1993              	.LVL119:
 1994              	.L183:
2336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_OFR_FIELDS,
 1995              		.loc 1 2336 0
 1996 01e2 A06E     		ldr	r0, [r4, #104]
 1997 01e4 7A4D     		ldr	r5, .L253
 1998 01e6 0540     		ands	r5, r5, r0
 1999 01e8 0868     		ldr	r0, [r1]
 2000 01ea 42EA8062 		orr	r2, r2, r0, lsl #26
 2001              	.LVL120:
 2002 01ee 1543     		orrs	r5, r5, r2
ARM GAS  /tmp/ccWogU0R.s 			page 95


 2003 01f0 45F00045 		orr	r5, r5, #-2147483648
 2004 01f4 A566     		str	r5, [r4, #104]
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 2005              		.loc 1 2339 0
 2006 01f6 93E7     		b	.L176
 2007              	.LVL121:
 2008              	.L184:
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   ADC_OFR_FIELDS,
 2009              		.loc 1 2342 0
 2010 01f8 E56E     		ldr	r5, [r4, #108]
 2011 01fa 7548     		ldr	r0, .L253
 2012 01fc 2840     		ands	r0, r0, r5
 2013 01fe 0D68     		ldr	r5, [r1]
 2014 0200 42EA8562 		orr	r2, r2, r5, lsl #26
 2015              	.LVL122:
 2016 0204 0243     		orrs	r2, r2, r0
 2017 0206 42F00042 		orr	r2, r2, #-2147483648
 2018 020a E266     		str	r2, [r4, #108]
2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        
 2019              		.loc 1 2345 0
 2020 020c 88E7     		b	.L176
 2021              	.LVL123:
 2022              	.L179:
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          {
 2023              		.loc 1 2352 0
 2024 020e 226E     		ldr	r2, [r4, #96]
 2025              	.LVL124:
 2026 0210 02F0F842 		and	r2, r2, #2080374784
 2027 0214 0868     		ldr	r0, [r1]
 2028 0216 B2EB806F 		cmp	r2, r0, lsl #26
 2029 021a 1DD0     		beq	.L243
 2030              	.L185:
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          {
 2031              		.loc 1 2356 0
 2032 021c 1868     		ldr	r0, [r3]
 2033 021e 426E     		ldr	r2, [r0, #100]
 2034 0220 02F0F842 		and	r2, r2, #2080374784
 2035 0224 0C68     		ldr	r4, [r1]
 2036 0226 B2EB846F 		cmp	r2, r4, lsl #26
 2037 022a 1AD0     		beq	.L244
 2038              	.L186:
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          {
 2039              		.loc 1 2360 0
 2040 022c 1868     		ldr	r0, [r3]
 2041 022e 826E     		ldr	r2, [r0, #104]
 2042 0230 02F0F842 		and	r2, r2, #2080374784
 2043 0234 0C68     		ldr	r4, [r1]
 2044 0236 B2EB846F 		cmp	r2, r4, lsl #26
 2045 023a 17D0     		beq	.L245
 2046              	.L187:
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          {
 2047              		.loc 1 2364 0
 2048 023c 1868     		ldr	r0, [r3]
 2049 023e C26E     		ldr	r2, [r0, #108]
 2050 0240 02F0F842 		and	r2, r2, #2080374784
 2051 0244 0C68     		ldr	r4, [r1]
 2052 0246 B2EB846F 		cmp	r2, r4, lsl #26
ARM GAS  /tmp/ccWogU0R.s 			page 96


 2053 024a 7FF469AF 		bne	.L176
2366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          }
 2054              		.loc 1 2366 0
 2055 024e C26E     		ldr	r2, [r0, #108]
 2056 0250 22F00042 		bic	r2, r2, #-2147483648
 2057 0254 C266     		str	r2, [r0, #108]
 2058 0256 63E7     		b	.L176
 2059              	.L243:
2354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          }
 2060              		.loc 1 2354 0
 2061 0258 226E     		ldr	r2, [r4, #96]
 2062 025a 22F00042 		bic	r2, r2, #-2147483648
 2063 025e 2266     		str	r2, [r4, #96]
 2064 0260 DCE7     		b	.L185
 2065              	.L244:
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          }
 2066              		.loc 1 2358 0
 2067 0262 426E     		ldr	r2, [r0, #100]
 2068 0264 22F00042 		bic	r2, r2, #-2147483648
 2069 0268 4266     		str	r2, [r0, #100]
 2070 026a DFE7     		b	.L186
 2071              	.L245:
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          }
 2072              		.loc 1 2362 0
 2073 026c 826E     		ldr	r2, [r0, #104]
 2074 026e 22F00042 		bic	r2, r2, #-2147483648
 2075 0272 8266     		str	r2, [r0, #104]
 2076 0274 E2E7     		b	.L187
 2077              	.L236:
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2078              		.loc 1 2377 0 discriminator 1
 2079 0276 0268     		ldr	r2, [r0]
 2080 0278 12F0010F 		tst	r2, #1
 2081 027c 01D1     		bne	.L216
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2082              		.loc 1 2377 0 is_stmt 0
 2083 027e 0022     		movs	r2, #0
 2084 0280 56E7     		b	.L188
 2085              	.L216:
 2086 0282 0122     		movs	r2, #1
 2087 0284 54E7     		b	.L188
 2088              	.L190:
2388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 2089              		.loc 1 2388 0 is_stmt 1
 2090 0286 D0F8B040 		ldr	r4, [r0, #176]
 2091 028a 0E68     		ldr	r6, [r1]
 2092 028c 0125     		movs	r5, #1
 2093 028e B540     		lsls	r5, r5, r6
 2094 0290 2C43     		orrs	r4, r4, r5
 2095 0292 C0F8B040 		str	r4, [r0, #176]
2394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2096              		.loc 1 2394 0
 2097 0296 0868     		ldr	r0, [r1]
 2098 0298 0828     		cmp	r0, #8
 2099 029a 0ED9     		bls	.L192
2396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 2100              		.loc 1 2396 0
ARM GAS  /tmp/ccWogU0R.s 			page 97


 2101 029c 1E68     		ldr	r6, [r3]
 2102 029e B469     		ldr	r4, [r6, #24]
 2103 02a0 00EB4000 		add	r0, r0, r0, lsl #1
 2104 02a4 1B38     		subs	r0, r0, #27
 2105 02a6 0725     		movs	r5, #7
 2106 02a8 8540     		lsls	r5, r5, r0
 2107 02aa 24EA0504 		bic	r4, r4, r5
 2108 02ae 8D68     		ldr	r5, [r1, #8]
 2109 02b0 05FA00F0 		lsl	r0, r5, r0
 2110 02b4 2043     		orrs	r0, r0, r4
 2111 02b6 B061     		str	r0, [r6, #24]
 2112 02b8 4BE7     		b	.L191
 2113              	.L192:
2400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 2114              		.loc 1 2400 0
 2115 02ba 1E68     		ldr	r6, [r3]
 2116 02bc 7469     		ldr	r4, [r6, #20]
 2117 02be 0130     		adds	r0, r0, #1
 2118 02c0 00EB4000 		add	r0, r0, r0, lsl #1
 2119 02c4 0725     		movs	r5, #7
 2120 02c6 8540     		lsls	r5, r5, r0
 2121 02c8 24EA0504 		bic	r4, r4, r5
 2122 02cc 8D68     		ldr	r5, [r1, #8]
 2123 02ce 05FA00F0 		lsl	r0, r5, r0
 2124 02d2 2043     		orrs	r0, r0, r4
 2125 02d4 7061     		str	r0, [r6, #20]
 2126 02d6 3CE7     		b	.L191
 2127              	.LVL125:
 2128              	.L237:
2419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ( (sConfig->Channel == ADC_CHANNEL_VBAT)       &&
 2129              		.loc 1 2419 0 discriminator 1
 2130 02d8 3E48     		ldr	r0, .L253+4
 2131 02da 8068     		ldr	r0, [r0, #8]
2418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 2132              		.loc 1 2418 0 discriminator 1
 2133 02dc 10F4000F 		tst	r0, #8388608
 2134 02e0 3FF447AF 		beq	.L194
 2135 02e4 39E7     		b	.L193
 2136              	.L238:
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ( (sConfig->Channel == ADC_CHANNEL_VREFINT)    &&
 2137              		.loc 1 2421 0
 2138 02e6 3B48     		ldr	r0, .L253+4
 2139 02e8 8068     		ldr	r0, [r0, #8]
2420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VBATEN))          ) ||
 2140              		.loc 1 2420 0
 2141 02ea 10F0807F 		tst	r0, #16777216
 2142 02ee 3FF440AF 		beq	.L194
 2143 02f2 35E7     		b	.L195
 2144              	.L239:
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 2145              		.loc 1 2430 0 discriminator 1
 2146 02f4 2068     		ldr	r0, [r4]
 2147 02f6 10F0010F 		tst	r0, #1
 2148 02fa 3FF441AF 		beq	.L196
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 2149              		.loc 1 2430 0 is_stmt 0
 2150 02fe 0122     		movs	r2, #1
ARM GAS  /tmp/ccWogU0R.s 			page 98


 2151 0300 3EE7     		b	.L196
 2152              	.L240:
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2153              		.loc 1 2431 0 is_stmt 1
 2154 0302 00F58070 		add	r0, r0, #256
 2155 0306 8068     		ldr	r0, [r0, #8]
 2156 0308 00F00300 		and	r0, r0, #3
 2157 030c 0128     		cmp	r0, #1
 2158 030e 0DD0     		beq	.L246
 2159              	.L199:
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2160              		.loc 1 2431 0 is_stmt 0 discriminator 4
 2161 0310 3348     		ldr	r0, .L253+16
 2162 0312 8068     		ldr	r0, [r0, #8]
 2163 0314 00F00300 		and	r0, r0, #3
 2164 0318 0128     		cmp	r0, #1
 2165 031a 0ED0     		beq	.L247
 2166              	.L200:
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 2167              		.loc 1 2430 0 is_stmt 1
 2168 031c 002A     		cmp	r2, #0
 2169 031e 43D0     		beq	.L201
 2170              	.L197:
2471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           
 2171              		.loc 1 2471 0
 2172 0320 9A6D     		ldr	r2, [r3, #88]
 2173 0322 42F02002 		orr	r2, r2, #32
 2174 0326 9A65     		str	r2, [r3, #88]
 2175              	.LVL126:
2473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 2176              		.loc 1 2473 0
 2177 0328 0120     		movs	r0, #1
 2178 032a 94E0     		b	.L189
 2179              	.LVL127:
 2180              	.L246:
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2181              		.loc 1 2431 0 discriminator 1
 2182 032c 2B48     		ldr	r0, .L253+12
 2183 032e 0068     		ldr	r0, [r0]
 2184 0330 10F0010F 		tst	r0, #1
 2185 0334 ECD0     		beq	.L199
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2186              		.loc 1 2431 0 is_stmt 0
 2187 0336 0122     		movs	r2, #1
 2188 0338 F0E7     		b	.L200
 2189              	.L247:
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2190              		.loc 1 2431 0 discriminator 5
 2191 033a 2948     		ldr	r0, .L253+16
 2192 033c 0068     		ldr	r0, [r0]
 2193 033e 10F0010F 		tst	r0, #1
 2194 0342 EBD0     		beq	.L200
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2195              		.loc 1 2431 0
 2196 0344 0122     		movs	r2, #1
 2197 0346 E9E7     		b	.L200
 2198              	.L241:
ARM GAS  /tmp/ccWogU0R.s 			page 99


2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2199              		.loc 1 2431 0 discriminator 9
 2200 0348 A0F58070 		sub	r0, r0, #256
 2201 034c 8068     		ldr	r0, [r0, #8]
 2202 034e 00F00300 		and	r0, r0, #3
 2203 0352 0128     		cmp	r0, #1
 2204 0354 0CD0     		beq	.L248
 2205              	.L203:
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2206              		.loc 1 2431 0 discriminator 14
 2207 0356 2248     		ldr	r0, .L253+16
 2208 0358 8068     		ldr	r0, [r0, #8]
 2209 035a 00F00300 		and	r0, r0, #3
 2210 035e 0128     		cmp	r0, #1
 2211 0360 0DD0     		beq	.L249
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2212              		.loc 1 2431 0
 2213 0362 1046     		mov	r0, r2
 2214              	.L204:
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2215              		.loc 1 2431 0 discriminator 20
 2216 0364 10F0010F 		tst	r0, #1
 2217 0368 3FF421AF 		beq	.L206
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2218              		.loc 1 2431 0
 2219 036c 0122     		movs	r2, #1
 2220 036e 19E0     		b	.L205
 2221              	.L248:
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2222              		.loc 1 2431 0 discriminator 11
 2223 0370 1948     		ldr	r0, .L253+8
 2224 0372 0068     		ldr	r0, [r0]
 2225 0374 10F0010F 		tst	r0, #1
 2226 0378 EDD0     		beq	.L203
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2227              		.loc 1 2431 0
 2228 037a 0120     		movs	r0, #1
 2229 037c F2E7     		b	.L204
 2230              	.L249:
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2231              		.loc 1 2431 0 discriminator 15
 2232 037e 1848     		ldr	r0, .L253+16
 2233 0380 0068     		ldr	r0, [r0]
 2234 0382 10F0010F 		tst	r0, #1
 2235 0386 01D1     		bne	.L225
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2236              		.loc 1 2431 0
 2237 0388 1046     		mov	r0, r2
 2238 038a EBE7     		b	.L204
 2239              	.L225:
 2240 038c 0120     		movs	r0, #1
 2241 038e E9E7     		b	.L204
 2242              	.L242:
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2243              		.loc 1 2431 0 discriminator 22
 2244 0390 1148     		ldr	r0, .L253+8
 2245 0392 0068     		ldr	r0, [r0]
ARM GAS  /tmp/ccWogU0R.s 			page 100


 2246 0394 10F0010F 		tst	r0, #1
 2247 0398 01D1     		bne	.L228
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2248              		.loc 1 2431 0
 2249 039a 1046     		mov	r0, r2
 2250 039c 03E7     		b	.L207
 2251              	.L228:
 2252 039e 0120     		movs	r0, #1
 2253 03a0 01E7     		b	.L207
 2254              	.L229:
 2255 03a2 0122     		movs	r2, #1
 2256              	.L205:
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2257              		.loc 1 2431 0 discriminator 35
 2258 03a4 002A     		cmp	r2, #0
 2259 03a6 BBD1     		bne	.L197
 2260              	.L201:
2433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 2261              		.loc 1 2433 0 is_stmt 1
 2262 03a8 1129     		cmp	r1, #17
 2263 03aa 08D0     		beq	.L250
2450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 2264              		.loc 1 2450 0
 2265 03ac 1229     		cmp	r1, #18
 2266 03ae 36D0     		beq	.L251
2457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 2267              		.loc 1 2457 0
 2268 03b0 0029     		cmp	r1, #0
 2269 03b2 5CD1     		bne	.L233
2459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
 2270              		.loc 1 2459 0
 2271 03b4 084A     		ldr	r2, .L253+8
 2272 03b6 9442     		cmp	r4, r2
 2273 03b8 41D0     		beq	.L252
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 2274              		.loc 1 2220 0
 2275 03ba 0020     		movs	r0, #0
 2276 03bc 4BE0     		b	.L189
 2277              	.L250:
2435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
 2278              		.loc 1 2435 0
 2279 03be 064A     		ldr	r2, .L253+8
 2280 03c0 9442     		cmp	r4, r2
 2281 03c2 0FD0     		beq	.L209
2435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
 2282              		.loc 1 2435 0 is_stmt 0 discriminator 1
 2283 03c4 02F50072 		add	r2, r2, #512
 2284 03c8 9442     		cmp	r4, r2
 2285 03ca 0BD0     		beq	.L209
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 2286              		.loc 1 2220 0 is_stmt 1
 2287 03cc 0020     		movs	r0, #0
 2288 03ce 42E0     		b	.L189
 2289              	.L254:
 2290              		.align	2
 2291              	.L253:
 2292 03d0 00F0FF03 		.word	67104768
ARM GAS  /tmp/ccWogU0R.s 			page 101


 2293 03d4 00030450 		.word	1342440192
 2294 03d8 00000450 		.word	1342439424
 2295 03dc 00010450 		.word	1342439680
 2296 03e0 00020450 		.word	1342439936
 2297              	.L209:
2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             
 2298              		.loc 1 2437 0
 2299 03e4 2449     		ldr	r1, .L255
 2300 03e6 8A68     		ldr	r2, [r1, #8]
 2301 03e8 42F40002 		orr	r2, r2, #8388608
 2302 03ec 8A60     		str	r2, [r1, #8]
2443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               while(wait_loop_index != 0)
 2303              		.loc 1 2443 0
 2304 03ee 234A     		ldr	r2, .L255+4
 2305 03f0 1268     		ldr	r2, [r2]
 2306 03f2 A1F14E61 		sub	r1, r1, #216006656
 2307 03f6 A1F50221 		sub	r1, r1, #532480
 2308 03fa A1F27D41 		subw	r1, r1, #1149
 2309 03fe A1FB0212 		umull	r1, r2, r1, r2
 2310 0402 D20C     		lsrs	r2, r2, #19
 2311 0404 C2EB0212 		rsb	r2, r2, r2, lsl #4
 2312 0408 D100     		lsls	r1, r2, #3
 2313 040a 0191     		str	r1, [sp, #4]
2444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               {
 2314              		.loc 1 2444 0
 2315 040c 02E0     		b	.L210
 2316              	.L211:
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               }
 2317              		.loc 1 2446 0
 2318 040e 019A     		ldr	r2, [sp, #4]
 2319 0410 013A     		subs	r2, r2, #1
 2320 0412 0192     		str	r2, [sp, #4]
 2321              	.L210:
2444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               {
 2322              		.loc 1 2444 0
 2323 0414 019A     		ldr	r2, [sp, #4]
 2324 0416 002A     		cmp	r2, #0
 2325 0418 F9D1     		bne	.L211
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 2326              		.loc 1 2220 0
 2327 041a 0020     		movs	r0, #0
 2328 041c 1BE0     		b	.L189
 2329              	.L251:
2452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
 2330              		.loc 1 2452 0
 2331 041e 184A     		ldr	r2, .L255+8
 2332 0420 9442     		cmp	r4, r2
 2333 0422 05D0     		beq	.L213
2452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
 2334              		.loc 1 2452 0 is_stmt 0 discriminator 1
 2335 0424 02F50072 		add	r2, r2, #512
 2336 0428 9442     		cmp	r4, r2
 2337 042a 01D0     		beq	.L213
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 2338              		.loc 1 2220 0 is_stmt 1
 2339 042c 0020     		movs	r0, #0
 2340 042e 12E0     		b	.L189
ARM GAS  /tmp/ccWogU0R.s 			page 102


 2341              	.L213:
2454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
 2342              		.loc 1 2454 0
 2343 0430 1149     		ldr	r1, .L255
 2344 0432 8A68     		ldr	r2, [r1, #8]
 2345 0434 42F08072 		orr	r2, r2, #16777216
 2346 0438 8A60     		str	r2, [r1, #8]
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 2347              		.loc 1 2220 0
 2348 043a 0020     		movs	r0, #0
 2349 043c 0BE0     		b	.L189
 2350              	.L252:
2461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
 2351              		.loc 1 2461 0
 2352 043e 0E49     		ldr	r1, .L255
 2353 0440 8A68     		ldr	r2, [r1, #8]
 2354 0442 42F48002 		orr	r2, r2, #4194304
 2355 0446 8A60     		str	r2, [r1, #8]
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 2356              		.loc 1 2220 0
 2357 0448 0020     		movs	r0, #0
 2358 044a 04E0     		b	.L189
 2359              	.LVL128:
 2360              	.L171:
2485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 2361              		.loc 1 2485 0
 2362 044c 9A6D     		ldr	r2, [r3, #88]
 2363 044e 42F02002 		orr	r2, r2, #32
 2364 0452 9A65     		str	r2, [r3, #88]
 2365              	.LVL129:
2487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2366              		.loc 1 2487 0
 2367 0454 0120     		movs	r0, #1
 2368              	.LVL130:
 2369              	.L189:
2491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 2370              		.loc 1 2491 0
 2371 0456 0022     		movs	r2, #0
 2372 0458 83F85420 		strb	r2, [r3, #84]
 2373              	.LVL131:
 2374              	.L170:
2495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2375              		.loc 1 2495 0
 2376 045c 03B0     		add	sp, sp, #12
 2377              	.LCFI12:
 2378              		.cfi_remember_state
 2379              		.cfi_def_cfa_offset 12
 2380              		@ sp needed
 2381 045e 70BC     		pop	{r4, r5, r6}
 2382              	.LCFI13:
 2383              		.cfi_restore 6
 2384              		.cfi_restore 5
 2385              		.cfi_restore 4
 2386              		.cfi_def_cfa_offset 0
 2387 0460 7047     		bx	lr
 2388              	.LVL132:
 2389              	.L217:
ARM GAS  /tmp/ccWogU0R.s 			page 103


 2390              	.LCFI14:
 2391              		.cfi_restore_state
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 2392              		.loc 1 2220 0
 2393 0462 0020     		movs	r0, #0
 2394 0464 F7E7     		b	.L189
 2395              	.LVL133:
 2396              	.L218:
 2397 0466 0020     		movs	r0, #0
 2398 0468 F5E7     		b	.L189
 2399              	.L219:
 2400 046a 0020     		movs	r0, #0
 2401 046c F3E7     		b	.L189
 2402              	.L233:
 2403 046e 0020     		movs	r0, #0
 2404 0470 F1E7     		b	.L189
 2405              	.LVL134:
 2406              	.L214:
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 2407              		.loc 1 2248 0
 2408 0472 0220     		movs	r0, #2
 2409              	.LVL135:
 2410 0474 F2E7     		b	.L170
 2411              	.L256:
 2412 0476 00BF     		.align	2
 2413              	.L255:
 2414 0478 00030450 		.word	1342440192
 2415 047c 00000000 		.word	SystemCoreClock
 2416 0480 00000450 		.word	1342439424
 2417              		.cfi_endproc
 2418              	.LFE327:
 2420              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 2421              		.align	1
 2422              		.global	HAL_ADC_AnalogWDGConfig
 2423              		.syntax unified
 2424              		.thumb
 2425              		.thumb_func
 2426              		.fpu fpv4-sp-d16
 2428              	HAL_ADC_AnalogWDGConfig:
 2429              	.LFB328:
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2430              		.loc 1 2514 0
 2431              		.cfi_startproc
 2432              		@ args = 0, pretend = 0, frame = 0
 2433              		@ frame_needed = 0, uses_anonymous_args = 0
 2434              		@ link register save eliminated.
 2435              	.LVL136:
2541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 2436              		.loc 1 2541 0
 2437 0000 90F85420 		ldrb	r2, [r0, #84]	@ zero_extendqisi2
 2438 0004 012A     		cmp	r2, #1
 2439 0006 00F0C980 		beq	.L275
 2440 000a 0346     		mov	r3, r0
2541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 2441              		.loc 1 2541 0 is_stmt 0 discriminator 2
 2442 000c 0122     		movs	r2, #1
 2443 000e 80F85420 		strb	r2, [r0, #84]
ARM GAS  /tmp/ccWogU0R.s 			page 104


2548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 2444              		.loc 1 2548 0 is_stmt 1 discriminator 2
 2445 0012 0268     		ldr	r2, [r0]
 2446 0014 9068     		ldr	r0, [r2, #8]
 2447              	.LVL137:
 2448 0016 10F00C0F 		tst	r0, #12
 2449 001a 40F0B680 		bne	.L259
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2450              		.loc 1 2514 0
 2451 001e F0B4     		push	{r4, r5, r6, r7}
 2452              	.LCFI15:
 2453              		.cfi_def_cfa_offset 16
 2454              		.cfi_offset 4, -16
 2455              		.cfi_offset 5, -12
 2456              		.cfi_offset 6, -8
 2457              		.cfi_offset 7, -4
2551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2458              		.loc 1 2551 0
 2459 0020 0C68     		ldr	r4, [r1]
 2460 0022 012C     		cmp	r4, #1
 2461 0024 47D0     		beq	.L281
2595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 2462              		.loc 1 2595 0
 2463 0026 D068     		ldr	r0, [r2, #12]
 2464 0028 00F01800 		and	r0, r0, #24
 2465 002c 1828     		cmp	r0, #24
 2466 002e 79D0     		beq	.L264
2595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 2467              		.loc 1 2595 0 is_stmt 0 discriminator 1
 2468 0030 0F69     		ldr	r7, [r1, #16]
 2469 0032 D068     		ldr	r0, [r2, #12]
 2470 0034 C0F3C100 		ubfx	r0, r0, #3, #2
 2471 0038 C0EBC070 		rsb	r0, r0, r0, lsl #31
 2472 003c 4500     		lsls	r5, r0, #1
 2473 003e 0435     		adds	r5, r5, #4
 2474 0040 EF40     		lsrs	r7, r7, r5
 2475              	.L265:
 2476              	.LVL138:
2596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 2477              		.loc 1 2596 0 is_stmt 1 discriminator 4
 2478 0042 D068     		ldr	r0, [r2, #12]
 2479 0044 00F01800 		and	r0, r0, #24
 2480 0048 1828     		cmp	r0, #24
 2481 004a 6ED0     		beq	.L266
2596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 2482              		.loc 1 2596 0 is_stmt 0 discriminator 1
 2483 004c 4D69     		ldr	r5, [r1, #20]
 2484 004e D068     		ldr	r0, [r2, #12]
 2485 0050 C0F3C100 		ubfx	r0, r0, #3, #2
 2486 0054 C0EBC070 		rsb	r0, r0, r0, lsl #31
 2487 0058 4600     		lsls	r6, r0, #1
 2488 005a 0436     		adds	r6, r6, #4
 2489 005c F540     		lsrs	r5, r5, r6
 2490              	.L267:
 2491              	.LVL139:
2598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2492              		.loc 1 2598 0 is_stmt 1 discriminator 4
ARM GAS  /tmp/ccWogU0R.s 			page 105


 2493 005e 022C     		cmp	r4, #2
 2494 0060 66D0     		beq	.L282
2632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2495              		.loc 1 2632 0
 2496 0062 4868     		ldr	r0, [r1, #4]
 2497 0064 0028     		cmp	r0, #0
 2498 0066 00F08380 		beq	.L272
2634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 2499              		.loc 1 2634 0
 2500 006a D2F8A400 		ldr	r0, [r2, #164]
 2501 006e 8E68     		ldr	r6, [r1, #8]
 2502 0070 0124     		movs	r4, #1
 2503 0072 B440     		lsls	r4, r4, r6
 2504 0074 2043     		orrs	r0, r0, r4
 2505 0076 C2F8A400 		str	r0, [r2, #164]
 2506              	.L273:
2642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_TRX_HIGHTHRESHOLD (tmpAWDHighThresholdShifted) | tmpAWDLowThresholdShifted )
 2507              		.loc 1 2642 0
 2508 007a 1868     		ldr	r0, [r3]
 2509 007c 826A     		ldr	r2, [r0, #40]
 2510 007e 02F0FF22 		and	r2, r2, #-16711936
 2511 0082 45EA0745 		orr	r5, r5, r7, lsl #16
 2512              	.LVL140:
 2513 0086 2A43     		orrs	r2, r2, r5
 2514 0088 8262     		str	r2, [r0, #40]
 2515              	.LVL141:
2651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 2516              		.loc 1 2651 0
 2517 008a 9A6D     		ldr	r2, [r3, #88]
 2518 008c 22F48022 		bic	r2, r2, #262144
 2519 0090 9A65     		str	r2, [r3, #88]
2647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD3;
 2520              		.loc 1 2647 0
 2521 0092 4FF40072 		mov	r2, #512
 2522              	.LVL142:
 2523              	.L271:
2657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2524              		.loc 1 2657 0
 2525 0096 1868     		ldr	r0, [r3]
 2526 0098 0260     		str	r2, [r0]
2660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2527              		.loc 1 2660 0
 2528 009a C968     		ldr	r1, [r1, #12]
 2529              	.LVL143:
 2530 009c 0129     		cmp	r1, #1
 2531 009e 6ED0     		beq	.L283
2666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 2532              		.loc 1 2666 0
 2533 00a0 1868     		ldr	r0, [r3]
 2534 00a2 4168     		ldr	r1, [r0, #4]
 2535 00a4 21EA0202 		bic	r2, r1, r2
 2536              	.LVL144:
 2537 00a8 4260     		str	r2, [r0, #4]
2515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 2538              		.loc 1 2515 0
 2539 00aa 0020     		movs	r0, #0
 2540              	.LVL145:
ARM GAS  /tmp/ccWogU0R.s 			page 106


 2541              	.L263:
2682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 2542              		.loc 1 2682 0
 2543 00ac 0022     		movs	r2, #0
 2544 00ae 83F85420 		strb	r2, [r3, #84]
2686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2545              		.loc 1 2686 0
 2546 00b2 F0BC     		pop	{r4, r5, r6, r7}
 2547              	.LCFI16:
 2548              		.cfi_remember_state
 2549              		.cfi_restore 7
 2550              		.cfi_restore 6
 2551              		.cfi_restore 5
 2552              		.cfi_restore 4
 2553              		.cfi_def_cfa_offset 0
 2554 00b4 7047     		bx	lr
 2555              	.LVL146:
 2556              	.L281:
 2557              	.LCFI17:
 2558              		.cfi_restore_state
2556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               AnalogWDGConfig->WatchdogMode | ADC_CFGR_SET_AWD1CH(AnalogWDGConfig->Channel) );     
 2559              		.loc 1 2556 0
 2560 00b6 D068     		ldr	r0, [r2, #12]
 2561 00b8 20F0FB40 		bic	r0, r0, #2105540608
 2562 00bc 20F48000 		bic	r0, r0, #4194304
 2563 00c0 4C68     		ldr	r4, [r1, #4]
 2564 00c2 8D68     		ldr	r5, [r1, #8]
 2565 00c4 44EA8564 		orr	r4, r4, r5, lsl #26
 2566 00c8 2043     		orrs	r0, r0, r4
 2567 00ca D060     		str	r0, [r2, #12]
2562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 2568              		.loc 1 2562 0
 2569 00cc 0869     		ldr	r0, [r1, #16]
 2570 00ce 1C68     		ldr	r4, [r3]
 2571 00d0 E268     		ldr	r2, [r4, #12]
 2572 00d2 C2F3C102 		ubfx	r2, r2, #3, #2
 2573 00d6 5200     		lsls	r2, r2, #1
 2574 00d8 00FA02F5 		lsl	r5, r0, r2
 2575              	.LVL147:
2563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 2576              		.loc 1 2563 0
 2577 00dc 4A69     		ldr	r2, [r1, #20]
 2578 00de E068     		ldr	r0, [r4, #12]
 2579 00e0 C0F3C100 		ubfx	r0, r0, #3, #2
 2580 00e4 4000     		lsls	r0, r0, #1
 2581 00e6 02FA00F0 		lsl	r0, r2, r0
 2582              	.LVL148:
2566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_TR1_HT1 | ADC_TR1_LT1,
 2583              		.loc 1 2566 0
 2584 00ea 226A     		ldr	r2, [r4, #32]
 2585 00ec 02F0F022 		and	r2, r2, #-268374016
 2586 00f0 40EA0540 		orr	r0, r0, r5, lsl #16
 2587              	.LVL149:
 2588 00f4 0243     		orrs	r2, r2, r0
 2589 00f6 2262     		str	r2, [r4, #32]
2573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 2590              		.loc 1 2573 0
ARM GAS  /tmp/ccWogU0R.s 			page 107


 2591 00f8 1A68     		ldr	r2, [r3]
 2592 00fa 8020     		movs	r0, #128
 2593 00fc 1060     		str	r0, [r2]
2576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2594              		.loc 1 2576 0
 2595 00fe CA68     		ldr	r2, [r1, #12]
 2596 0100 012A     		cmp	r2, #1
 2597 0102 0AD0     		beq	.L284
2584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 2598              		.loc 1 2584 0
 2599 0104 1968     		ldr	r1, [r3]
 2600              	.LVL150:
 2601 0106 4A68     		ldr	r2, [r1, #4]
 2602 0108 22F08002 		bic	r2, r2, #128
 2603 010c 4A60     		str	r2, [r1, #4]
 2604              	.L262:
2588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 2605              		.loc 1 2588 0
 2606 010e 9A6D     		ldr	r2, [r3, #88]
 2607 0110 22F48032 		bic	r2, r2, #65536
 2608 0114 9A65     		str	r2, [r3, #88]
2515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 2609              		.loc 1 2515 0
 2610 0116 0020     		movs	r0, #0
 2611 0118 C8E7     		b	.L263
 2612              	.LVL151:
 2613              	.L284:
2579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 2614              		.loc 1 2579 0
 2615 011a 1968     		ldr	r1, [r3]
 2616              	.LVL152:
 2617 011c 4A68     		ldr	r2, [r1, #4]
 2618 011e 0243     		orrs	r2, r2, r0
 2619 0120 4A60     		str	r2, [r1, #4]
 2620 0122 F4E7     		b	.L262
 2621              	.LVL153:
 2622              	.L264:
2595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 2623              		.loc 1 2595 0 discriminator 2
 2624 0124 0F69     		ldr	r7, [r1, #16]
 2625 0126 BF00     		lsls	r7, r7, #2
 2626 0128 8BE7     		b	.L265
 2627              	.LVL154:
 2628              	.L266:
2596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 2629              		.loc 1 2596 0 discriminator 2
 2630 012a 4D69     		ldr	r5, [r1, #20]
 2631 012c AD00     		lsls	r5, r5, #2
 2632 012e 96E7     		b	.L267
 2633              	.LVL155:
 2634              	.L282:
2604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2635              		.loc 1 2604 0
 2636 0130 4868     		ldr	r0, [r1, #4]
 2637 0132 B0B1     		cbz	r0, .L269
2606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 2638              		.loc 1 2606 0
ARM GAS  /tmp/ccWogU0R.s 			page 108


 2639 0134 D2F8A000 		ldr	r0, [r2, #160]
 2640 0138 8E68     		ldr	r6, [r1, #8]
 2641 013a 0124     		movs	r4, #1
 2642 013c B440     		lsls	r4, r4, r6
 2643 013e 2043     		orrs	r0, r0, r4
 2644 0140 C2F8A000 		str	r0, [r2, #160]
 2645              	.L270:
2614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_TRX_HIGHTHRESHOLD (tmpAWDHighThresholdShifted) | tmpAWDLowThresholdShifted )
 2646              		.loc 1 2614 0
 2647 0144 1C68     		ldr	r4, [r3]
 2648 0146 606A     		ldr	r0, [r4, #36]
 2649 0148 00F0FF20 		and	r0, r0, #-16711936
 2650 014c 45EA0745 		orr	r5, r5, r7, lsl #16
 2651              	.LVL156:
 2652 0150 0543     		orrs	r5, r5, r0
 2653 0152 6562     		str	r5, [r4, #36]
 2654              	.LVL157:
2623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 2655              		.loc 1 2623 0
 2656 0154 9A6D     		ldr	r2, [r3, #88]
 2657 0156 22F40032 		bic	r2, r2, #131072
 2658 015a 9A65     		str	r2, [r3, #88]
2619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD2;
 2659              		.loc 1 2619 0
 2660 015c 4FF48072 		mov	r2, #256
 2661 0160 99E7     		b	.L271
 2662              	.LVL158:
 2663              	.L269:
2610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 2664              		.loc 1 2610 0
 2665 0162 D2F8A000 		ldr	r0, [r2, #160]
 2666 0166 C00C     		lsrs	r0, r0, #19
 2667 0168 C004     		lsls	r0, r0, #19
 2668 016a C2F8A000 		str	r0, [r2, #160]
 2669 016e E9E7     		b	.L270
 2670              	.L272:
2638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 2671              		.loc 1 2638 0
 2672 0170 D2F8A400 		ldr	r0, [r2, #164]
 2673 0174 C00C     		lsrs	r0, r0, #19
 2674 0176 C004     		lsls	r0, r0, #19
 2675 0178 C2F8A400 		str	r0, [r2, #164]
 2676 017c 7DE7     		b	.L273
 2677              	.LVL159:
 2678              	.L283:
2662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 2679              		.loc 1 2662 0
 2680 017e 1968     		ldr	r1, [r3]
 2681 0180 4868     		ldr	r0, [r1, #4]
 2682 0182 0243     		orrs	r2, r2, r0
 2683              	.LVL160:
 2684 0184 4A60     		str	r2, [r1, #4]
2515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 2685              		.loc 1 2515 0
 2686 0186 0020     		movs	r0, #0
 2687 0188 90E7     		b	.L263
 2688              	.LVL161:
ARM GAS  /tmp/ccWogU0R.s 			page 109


 2689              	.L259:
 2690              	.LCFI18:
 2691              		.cfi_def_cfa_offset 0
 2692              		.cfi_restore 4
 2693              		.cfi_restore 5
 2694              		.cfi_restore 6
 2695              		.cfi_restore 7
2676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 2696              		.loc 1 2676 0
 2697 018a 9A6D     		ldr	r2, [r3, #88]
 2698 018c 42F02002 		orr	r2, r2, #32
 2699 0190 9A65     		str	r2, [r3, #88]
 2700              	.LVL162:
2678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2701              		.loc 1 2678 0
 2702 0192 0120     		movs	r0, #1
 2703              	.LVL163:
2682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 2704              		.loc 1 2682 0
 2705 0194 0022     		movs	r2, #0
 2706 0196 83F85420 		strb	r2, [r3, #84]
2686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2707              		.loc 1 2686 0
 2708 019a 7047     		bx	lr
 2709              	.LVL164:
 2710              	.L275:
2541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 2711              		.loc 1 2541 0
 2712 019c 0220     		movs	r0, #2
 2713              	.LVL165:
 2714 019e 7047     		bx	lr
 2715              		.cfi_endproc
 2716              	.LFE328:
 2718              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 2719              		.align	1
 2720              		.global	HAL_ADC_GetState
 2721              		.syntax unified
 2722              		.thumb
 2723              		.thumb_func
 2724              		.fpu fpv4-sp-d16
 2726              	HAL_ADC_GetState:
 2727              	.LFB329:
2721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 2728              		.loc 1 2721 0
 2729              		.cfi_startproc
 2730              		@ args = 0, pretend = 0, frame = 0
 2731              		@ frame_needed = 0, uses_anonymous_args = 0
 2732              		@ link register save eliminated.
 2733              	.LVL166:
2726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 2734              		.loc 1 2726 0
 2735 0000 806D     		ldr	r0, [r0, #88]
 2736              	.LVL167:
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2737              		.loc 1 2727 0
 2738 0002 7047     		bx	lr
 2739              		.cfi_endproc
ARM GAS  /tmp/ccWogU0R.s 			page 110


 2740              	.LFE329:
 2742              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 2743              		.align	1
 2744              		.global	HAL_ADC_GetError
 2745              		.syntax unified
 2746              		.thumb
 2747              		.thumb_func
 2748              		.fpu fpv4-sp-d16
 2750              	HAL_ADC_GetError:
 2751              	.LFB330:
2735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 2752              		.loc 1 2735 0
 2753              		.cfi_startproc
 2754              		@ args = 0, pretend = 0, frame = 0
 2755              		@ frame_needed = 0, uses_anonymous_args = 0
 2756              		@ link register save eliminated.
 2757              	.LVL168:
2739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 2758              		.loc 1 2739 0
 2759 0000 C06D     		ldr	r0, [r0, #92]
 2760              	.LVL169:
2740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2761              		.loc 1 2740 0
 2762 0002 7047     		bx	lr
 2763              		.cfi_endproc
 2764              	.LFE330:
 2766              		.section	.text.ADC_ConversionStop,"ax",%progbits
 2767              		.align	1
 2768              		.global	ADC_ConversionStop
 2769              		.syntax unified
 2770              		.thumb
 2771              		.thumb_func
 2772              		.fpu fpv4-sp-d16
 2774              	ADC_ConversionStop:
 2775              	.LFB331:
2765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART = 0;
 2776              		.loc 1 2765 0
 2777              		.cfi_startproc
 2778              		@ args = 0, pretend = 0, frame = 0
 2779              		@ frame_needed = 0, uses_anonymous_args = 0
 2780              	.LVL170:
2776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 2781              		.loc 1 2776 0
 2782 0000 0368     		ldr	r3, [r0]
 2783 0002 9A68     		ldr	r2, [r3, #8]
 2784 0004 12F00C0F 		tst	r2, #12
 2785 0008 62D0     		beq	.L300
2765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART = 0;
 2786              		.loc 1 2765 0
 2787 000a 70B5     		push	{r4, r5, r6, lr}
 2788              	.LCFI19:
 2789              		.cfi_def_cfa_offset 16
 2790              		.cfi_offset 4, -16
 2791              		.cfi_offset 5, -12
 2792              		.cfi_offset 6, -8
 2793              		.cfi_offset 14, -4
 2794 000c 0446     		mov	r4, r0
ARM GAS  /tmp/ccWogU0R.s 			page 111


2784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          && (hadc->Init.ContinuousConvMode==ENABLE) 
 2795              		.loc 1 2784 0
 2796 000e DA68     		ldr	r2, [r3, #12]
 2797 0010 12F0007F 		tst	r2, #33554432
 2798 0014 02D0     		beq	.L289
2785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          && (hadc->Init.LowPowerAutoWait==ENABLE))
 2799              		.loc 1 2785 0
 2800 0016 C269     		ldr	r2, [r0, #28]
 2801 0018 012A     		cmp	r2, #1
 2802 001a 38D0     		beq	.L308
 2803              	.LVL171:
 2804              	.L289:
2812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2805              		.loc 1 2812 0
 2806 001c 6029     		cmp	r1, #96
 2807 001e 0CD0     		beq	.L293
2815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)     )
 2808              		.loc 1 2815 0
 2809 0020 2368     		ldr	r3, [r4]
 2810 0022 9A68     		ldr	r2, [r3, #8]
 2811 0024 12F0040F 		tst	r2, #4
 2812 0028 07D0     		beq	.L293
2816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2813              		.loc 1 2816 0 discriminator 1
 2814 002a 9A68     		ldr	r2, [r3, #8]
2815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)     )
 2815              		.loc 1 2815 0 discriminator 1
 2816 002c 12F0020F 		tst	r2, #2
 2817 0030 03D1     		bne	.L293
2819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 2818              		.loc 1 2819 0
 2819 0032 9A68     		ldr	r2, [r3, #8]
 2820 0034 42F01002 		orr	r2, r2, #16
 2821 0038 9A60     		str	r2, [r3, #8]
 2822              	.L293:
2824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2823              		.loc 1 2824 0
 2824 003a 0C29     		cmp	r1, #12
 2825 003c 0CD0     		beq	.L294
2827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)      )
 2826              		.loc 1 2827 0
 2827 003e 2368     		ldr	r3, [r4]
 2828 0040 9A68     		ldr	r2, [r3, #8]
 2829 0042 12F0080F 		tst	r2, #8
 2830 0046 07D0     		beq	.L294
2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2831              		.loc 1 2828 0 discriminator 1
 2832 0048 9A68     		ldr	r2, [r3, #8]
2827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)      )
 2833              		.loc 1 2827 0 discriminator 1
 2834 004a 12F0020F 		tst	r2, #2
 2835 004e 03D1     		bne	.L294
2831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }   
 2836              		.loc 1 2831 0
 2837 0050 9A68     		ldr	r2, [r3, #8]
 2838 0052 42F02002 		orr	r2, r2, #32
 2839 0056 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccWogU0R.s 			page 112


 2840              	.L294:
2836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2841              		.loc 1 2836 0
 2842 0058 6029     		cmp	r1, #96
 2843 005a 35D0     		beq	.L302
 2844 005c 6C29     		cmp	r1, #108
 2845 005e 31D1     		bne	.L303
2839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 2846              		.loc 1 2839 0
 2847 0060 0C25     		movs	r5, #12
 2848              	.LVL172:
 2849              	.L296:
2853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 2850              		.loc 1 2853 0
 2851 0062 FFF7FEFF 		bl	HAL_GetTick
 2852              	.LVL173:
 2853 0066 0646     		mov	r6, r0
 2854              	.LVL174:
 2855              	.L298:
2855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2856              		.loc 1 2855 0
 2857 0068 2368     		ldr	r3, [r4]
 2858 006a 9B68     		ldr	r3, [r3, #8]
 2859 006c 1D42     		tst	r5, r3
 2860 006e 2DD0     		beq	.L309
2857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2861              		.loc 1 2857 0
 2862 0070 FFF7FEFF 		bl	HAL_GetTick
 2863              	.LVL175:
 2864 0074 801B     		subs	r0, r0, r6
 2865 0076 0528     		cmp	r0, #5
 2866 0078 F6D9     		bls	.L298
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 2867              		.loc 1 2860 0
 2868 007a A36D     		ldr	r3, [r4, #88]
 2869 007c 43F01003 		orr	r3, r3, #16
 2870 0080 A365     		str	r3, [r4, #88]
2863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 2871              		.loc 1 2863 0
 2872 0082 E36D     		ldr	r3, [r4, #92]
 2873 0084 43F00103 		orr	r3, r3, #1
 2874 0088 E365     		str	r3, [r4, #92]
2865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 2875              		.loc 1 2865 0
 2876 008a 0120     		movs	r0, #1
 2877 008c 70BD     		pop	{r4, r5, r6, pc}
 2878              	.LVL176:
 2879              	.L308:
2786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2880              		.loc 1 2786 0
 2881 008e 8269     		ldr	r2, [r0, #24]
 2882 0090 012A     		cmp	r2, #1
 2883 0092 C3D1     		bne	.L289
 2884 0094 0022     		movs	r2, #0
 2885              	.LVL177:
 2886              	.L290:
2792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
ARM GAS  /tmp/ccWogU0R.s 			page 113


 2887              		.loc 1 2792 0
 2888 0096 1968     		ldr	r1, [r3]
 2889 0098 11F0400F 		tst	r1, #64
 2890 009c 0ED1     		bne	.L310
2794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2891              		.loc 1 2794 0
 2892 009e 0D49     		ldr	r1, .L312
 2893 00a0 8A42     		cmp	r2, r1
 2894 00a2 01D8     		bhi	.L311
2804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 2895              		.loc 1 2804 0
 2896 00a4 0132     		adds	r2, r2, #1
 2897              	.LVL178:
 2898 00a6 F6E7     		b	.L290
 2899              	.L311:
2797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           
 2900              		.loc 1 2797 0
 2901 00a8 A36D     		ldr	r3, [r4, #88]
 2902 00aa 43F01003 		orr	r3, r3, #16
 2903 00ae A365     		str	r3, [r4, #88]
2800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           
 2904              		.loc 1 2800 0
 2905 00b0 E36D     		ldr	r3, [r4, #92]
 2906 00b2 43F00103 		orr	r3, r3, #1
 2907 00b6 E365     		str	r3, [r4, #92]
2802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 2908              		.loc 1 2802 0
 2909 00b8 0120     		movs	r0, #1
 2910              	.LVL179:
 2911 00ba 70BD     		pop	{r4, r5, r6, pc}
 2912              	.LVL180:
 2913              	.L310:
2808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 2914              		.loc 1 2808 0
 2915 00bc 4022     		movs	r2, #64
 2916              	.LVL181:
 2917 00be 1A60     		str	r2, [r3]
2789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 2918              		.loc 1 2789 0
 2919 00c0 0C21     		movs	r1, #12
 2920 00c2 ABE7     		b	.L289
 2921              	.LVL182:
 2922              	.L303:
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 2923              		.loc 1 2846 0
 2924 00c4 0425     		movs	r5, #4
2847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 2925              		.loc 1 2847 0
 2926 00c6 CCE7     		b	.L296
 2927              	.LVL183:
 2928              	.L302:
2842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 2929              		.loc 1 2842 0
 2930 00c8 0825     		movs	r5, #8
 2931 00ca CAE7     		b	.L296
 2932              	.LVL184:
 2933              	.L309:
ARM GAS  /tmp/ccWogU0R.s 			page 114


2872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 2934              		.loc 1 2872 0
 2935 00cc 0020     		movs	r0, #0
 2936 00ce 70BD     		pop	{r4, r5, r6, pc}
 2937              	.LVL185:
 2938              	.L300:
 2939              	.LCFI20:
 2940              		.cfi_def_cfa_offset 0
 2941              		.cfi_restore 4
 2942              		.cfi_restore 5
 2943              		.cfi_restore 6
 2944              		.cfi_restore 14
 2945 00d0 0020     		movs	r0, #0
 2946              	.LVL186:
 2947 00d2 7047     		bx	lr
 2948              	.L313:
 2949              		.align	2
 2950              	.L312:
 2951 00d4 FFFF330A 		.word	171180031
 2952              		.cfi_endproc
 2953              	.LFE331:
 2955              		.section	.text.ADC_Enable,"ax",%progbits
 2956              		.align	1
 2957              		.global	ADC_Enable
 2958              		.syntax unified
 2959              		.thumb
 2960              		.thumb_func
 2961              		.fpu fpv4-sp-d16
 2963              	ADC_Enable:
 2964              	.LFB332:
2885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart = 0;
 2965              		.loc 1 2885 0
 2966              		.cfi_startproc
 2967              		@ args = 0, pretend = 0, frame = 0
 2968              		@ frame_needed = 0, uses_anonymous_args = 0
 2969              	.LVL187:
 2970 0000 38B5     		push	{r3, r4, r5, lr}
 2971              	.LCFI21:
 2972              		.cfi_def_cfa_offset 16
 2973              		.cfi_offset 3, -16
 2974              		.cfi_offset 4, -12
 2975              		.cfi_offset 5, -8
 2976              		.cfi_offset 14, -4
 2977              	.LVL188:
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 2978              		.loc 1 2892 0
 2979 0002 0268     		ldr	r2, [r0]
 2980 0004 9368     		ldr	r3, [r2, #8]
 2981 0006 03F00303 		and	r3, r3, #3
 2982 000a 012B     		cmp	r3, #1
 2983 000c 10D0     		beq	.L324
 2984 000e 0023     		movs	r3, #0
 2985              	.L315:
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 2986              		.loc 1 2892 0 is_stmt 0 discriminator 6
 2987 0010 002B     		cmp	r3, #0
 2988 0012 37D1     		bne	.L322
ARM GAS  /tmp/ccWogU0R.s 			page 115


2895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2989              		.loc 1 2895 0 is_stmt 1
 2990 0014 9168     		ldr	r1, [r2, #8]
 2991 0016 1C4B     		ldr	r3, .L326
 2992 0018 1942     		tst	r1, r3
 2993 001a 11D0     		beq	.L317
2898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 2994              		.loc 1 2898 0
 2995 001c 836D     		ldr	r3, [r0, #88]
 2996 001e 43F01003 		orr	r3, r3, #16
 2997 0022 8365     		str	r3, [r0, #88]
2901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 2998              		.loc 1 2901 0
 2999 0024 C36D     		ldr	r3, [r0, #92]
 3000 0026 43F00103 		orr	r3, r3, #1
 3001 002a C365     		str	r3, [r0, #92]
2903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 3002              		.loc 1 2903 0
 3003 002c 0120     		movs	r0, #1
 3004              	.LVL189:
 3005 002e 38BD     		pop	{r3, r4, r5, pc}
 3006              	.LVL190:
 3007              	.L324:
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3008              		.loc 1 2892 0 discriminator 1
 3009 0030 1368     		ldr	r3, [r2]
 3010 0032 13F0010F 		tst	r3, #1
 3011 0036 01D1     		bne	.L321
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3012              		.loc 1 2892 0 is_stmt 0
 3013 0038 0023     		movs	r3, #0
 3014 003a E9E7     		b	.L315
 3015              	.L321:
 3016 003c 0123     		movs	r3, #1
 3017 003e E7E7     		b	.L315
 3018              	.L317:
 3019 0040 0446     		mov	r4, r0
2907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 3020              		.loc 1 2907 0 is_stmt 1
 3021 0042 9368     		ldr	r3, [r2, #8]
 3022 0044 43F00103 		orr	r3, r3, #1
 3023 0048 9360     		str	r3, [r2, #8]
2911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 3024              		.loc 1 2911 0
 3025 004a FFF7FEFF 		bl	HAL_GetTick
 3026              	.LVL191:
 3027 004e 0546     		mov	r5, r0
 3028              	.LVL192:
 3029              	.L318:
2913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 3030              		.loc 1 2913 0
 3031 0050 2368     		ldr	r3, [r4]
 3032 0052 1A68     		ldr	r2, [r3]
 3033 0054 12F0010F 		tst	r2, #1
 3034 0058 12D1     		bne	.L325
2921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3035              		.loc 1 2921 0
ARM GAS  /tmp/ccWogU0R.s 			page 116


 3036 005a 9A68     		ldr	r2, [r3, #8]
 3037 005c 42F00102 		orr	r2, r2, #1
 3038 0060 9A60     		str	r2, [r3, #8]
2923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3039              		.loc 1 2923 0
 3040 0062 FFF7FEFF 		bl	HAL_GetTick
 3041              	.LVL193:
 3042 0066 401B     		subs	r0, r0, r5
 3043 0068 0228     		cmp	r0, #2
 3044 006a F1D9     		bls	.L318
2926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 3045              		.loc 1 2926 0
 3046 006c A36D     		ldr	r3, [r4, #88]
 3047 006e 43F01003 		orr	r3, r3, #16
 3048 0072 A365     		str	r3, [r4, #88]
2929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 3049              		.loc 1 2929 0
 3050 0074 E36D     		ldr	r3, [r4, #92]
 3051 0076 43F00103 		orr	r3, r3, #1
 3052 007a E365     		str	r3, [r4, #92]
2931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 3053              		.loc 1 2931 0
 3054 007c 0120     		movs	r0, #1
 3055 007e 38BD     		pop	{r3, r4, r5, pc}
 3056              	.LVL194:
 3057              	.L325:
2937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 3058              		.loc 1 2937 0
 3059 0080 0020     		movs	r0, #0
 3060 0082 38BD     		pop	{r3, r4, r5, pc}
 3061              	.LVL195:
 3062              	.L322:
 3063 0084 0020     		movs	r0, #0
 3064              	.LVL196:
2938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3065              		.loc 1 2938 0
 3066 0086 38BD     		pop	{r3, r4, r5, pc}
 3067              	.L327:
 3068              		.align	2
 3069              	.L326:
 3070 0088 3F000080 		.word	-2147483585
 3071              		.cfi_endproc
 3072              	.LFE332:
 3074              		.section	.text.HAL_ADC_Start,"ax",%progbits
 3075              		.align	1
 3076              		.global	HAL_ADC_Start
 3077              		.syntax unified
 3078              		.thumb
 3079              		.thumb_func
 3080              		.fpu fpv4-sp-d16
 3082              	HAL_ADC_Start:
 3083              	.LFB313:
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3084              		.loc 1 899 0
 3085              		.cfi_startproc
 3086              		@ args = 0, pretend = 0, frame = 0
 3087              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccWogU0R.s 			page 117


 3088              	.LVL197:
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3089              		.loc 1 907 0
 3090 0000 0368     		ldr	r3, [r0]
 3091 0002 9B68     		ldr	r3, [r3, #8]
 3092 0004 13F0040F 		tst	r3, #4
 3093 0008 02D0     		beq	.L344
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3094              		.loc 1 997 0
 3095 000a 0223     		movs	r3, #2
 3096              	.L341:
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3097              		.loc 1 1002 0
 3098 000c 1846     		mov	r0, r3
 3099              	.LVL198:
 3100 000e 7047     		bx	lr
 3101              	.LVL199:
 3102              	.L344:
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 3103              		.loc 1 910 0
 3104 0010 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 3105 0014 012B     		cmp	r3, #1
 3106 0016 01D1     		bne	.L345
 3107 0018 0223     		movs	r3, #2
 3108 001a F7E7     		b	.L341
 3109              	.L345:
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3110              		.loc 1 899 0 discriminator 2
 3111 001c 10B5     		push	{r4, lr}
 3112              	.LCFI22:
 3113              		.cfi_def_cfa_offset 8
 3114              		.cfi_offset 4, -8
 3115              		.cfi_offset 14, -4
 3116 001e 0446     		mov	r4, r0
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 3117              		.loc 1 910 0 discriminator 2
 3118 0020 0123     		movs	r3, #1
 3119 0022 80F85430 		strb	r3, [r0, #84]
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 3120              		.loc 1 913 0 discriminator 2
 3121 0026 FFF7FEFF 		bl	ADC_Enable
 3122              	.LVL200:
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 3123              		.loc 1 916 0 discriminator 2
 3124 002a 0346     		mov	r3, r0
 3125 002c 0028     		cmp	r0, #0
 3126 002e 62D1     		bne	.L330
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3127              		.loc 1 921 0
 3128 0030 A26D     		ldr	r2, [r4, #88]
 3129 0032 22F47062 		bic	r2, r2, #3840
 3130 0036 22F00102 		bic	r2, r2, #1
 3131 003a 42F48072 		orr	r2, r2, #256
 3132 003e A265     		str	r2, [r4, #88]
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3133              		.loc 1 928 0
 3134 0040 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccWogU0R.s 			page 118


 3135 0042 2F49     		ldr	r1, .L346
 3136 0044 8A42     		cmp	r2, r1
 3137 0046 09D0     		beq	.L331
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3138              		.loc 1 928 0 is_stmt 0 discriminator 1
 3139 0048 01F50071 		add	r1, r1, #512
 3140 004c 8A42     		cmp	r2, r1
 3141 004e 05D0     		beq	.L331
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3142              		.loc 1 928 0 discriminator 2
 3143 0050 01F58071 		add	r1, r1, #256
 3144 0054 8968     		ldr	r1, [r1, #8]
 3145 0056 11F01F0F 		tst	r1, #31
 3146 005a 03D1     		bne	.L332
 3147              	.L331:
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 3148              		.loc 1 930 0 is_stmt 1
 3149 005c A16D     		ldr	r1, [r4, #88]
 3150 005e 21F48011 		bic	r1, r1, #1048576
 3151 0062 A165     		str	r1, [r4, #88]
 3152              	.L332:
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3153              		.loc 1 935 0
 3154 0064 A16D     		ldr	r1, [r4, #88]
 3155 0066 11F4805F 		tst	r1, #4096
 3156 006a 32D0     		beq	.L333
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 3157              		.loc 1 938 0
 3158 006c E16D     		ldr	r1, [r4, #92]
 3159 006e 21F00601 		bic	r1, r1, #6
 3160 0072 E165     		str	r1, [r4, #92]
 3161              	.L334:
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 3162              		.loc 1 948 0
 3163 0074 1C21     		movs	r1, #28
 3164 0076 1160     		str	r1, [r2]
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 3165              		.loc 1 953 0
 3166 0078 0022     		movs	r2, #0
 3167 007a 84F85420 		strb	r2, [r4, #84]
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3168              		.loc 1 963 0
 3169 007e 2268     		ldr	r2, [r4]
 3170 0080 1F49     		ldr	r1, .L346
 3171 0082 8A42     		cmp	r2, r1
 3172 0084 28D0     		beq	.L335
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3173              		.loc 1 963 0 is_stmt 0 discriminator 1
 3174 0086 01F50071 		add	r1, r1, #512
 3175 008a 8A42     		cmp	r2, r1
 3176 008c 24D0     		beq	.L335
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3177              		.loc 1 963 0 discriminator 2
 3178 008e 01F58071 		add	r1, r1, #256
 3179 0092 8968     		ldr	r1, [r1, #8]
 3180 0094 11F01F0F 		tst	r1, #31
 3181 0098 1ED0     		beq	.L335
ARM GAS  /tmp/ccWogU0R.s 			page 119


 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3182              		.loc 1 963 0 discriminator 3
 3183 009a 1A49     		ldr	r1, .L346+4
 3184 009c 8968     		ldr	r1, [r1, #8]
 3185 009e 01F01F01 		and	r1, r1, #31
 3186 00a2 0529     		cmp	r1, #5
 3187 00a4 18D0     		beq	.L335
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3188              		.loc 1 963 0 discriminator 4
 3189 00a6 1749     		ldr	r1, .L346+4
 3190 00a8 8968     		ldr	r1, [r1, #8]
 3191 00aa 01F01F01 		and	r1, r1, #31
 3192 00ae 0929     		cmp	r1, #9
 3193 00b0 12D0     		beq	.L335
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting 
 3194              		.loc 1 978 0 is_stmt 1
 3195 00b2 A26D     		ldr	r2, [r4, #88]
 3196 00b4 42F48012 		orr	r2, r2, #1048576
 3197 00b8 A265     		str	r2, [r4, #88]
 3198              	.LVL201:
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3199              		.loc 1 982 0
 3200 00ba 114A     		ldr	r2, .L346
 3201 00bc D268     		ldr	r2, [r2, #12]
 3202 00be 12F0007F 		tst	r2, #33554432
 3203 00c2 1BD0     		beq	.L329
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 3204              		.loc 1 984 0
 3205 00c4 A26D     		ldr	r2, [r4, #88]
 3206 00c6 22F44052 		bic	r2, r2, #12288
 3207 00ca 42F48052 		orr	r2, r2, #4096
 3208 00ce A265     		str	r2, [r4, #88]
 3209 00d0 14E0     		b	.L329
 3210              	.LVL202:
 3211              	.L333:
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 3212              		.loc 1 943 0
 3213 00d2 0021     		movs	r1, #0
 3214 00d4 E165     		str	r1, [r4, #92]
 3215 00d6 CDE7     		b	.L334
 3216              	.L335:
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3217              		.loc 1 968 0
 3218 00d8 D168     		ldr	r1, [r2, #12]
 3219 00da 11F0007F 		tst	r1, #33554432
 3220 00de 05D0     		beq	.L337
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 3221              		.loc 1 970 0
 3222 00e0 A16D     		ldr	r1, [r4, #88]
 3223 00e2 21F44051 		bic	r1, r1, #12288
 3224 00e6 41F48051 		orr	r1, r1, #4096
 3225 00ea A165     		str	r1, [r4, #88]
 3226              	.L337:
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 3227              		.loc 1 974 0
 3228 00ec 9168     		ldr	r1, [r2, #8]
 3229 00ee 41F00401 		orr	r1, r1, #4
ARM GAS  /tmp/ccWogU0R.s 			page 120


 3230 00f2 9160     		str	r1, [r2, #8]
 3231 00f4 02E0     		b	.L329
 3232              	.L330:
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 3233              		.loc 1 992 0
 3234 00f6 0022     		movs	r2, #0
 3235 00f8 84F85420 		strb	r2, [r4, #84]
 3236              	.L329:
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3237              		.loc 1 1002 0
 3238 00fc 1846     		mov	r0, r3
 3239              	.LVL203:
 3240 00fe 10BD     		pop	{r4, pc}
 3241              	.LVL204:
 3242              	.L347:
 3243              		.align	2
 3244              	.L346:
 3245 0100 00000450 		.word	1342439424
 3246 0104 00030450 		.word	1342440192
 3247              		.cfi_endproc
 3248              	.LFE313:
 3250              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 3251              		.align	1
 3252              		.global	HAL_ADC_Start_IT
 3253              		.syntax unified
 3254              		.thumb
 3255              		.thumb_func
 3256              		.fpu fpv4-sp-d16
 3258              	HAL_ADC_Start_IT:
 3259              	.LFB317:
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3260              		.loc 1 1362 0
 3261              		.cfi_startproc
 3262              		@ args = 0, pretend = 0, frame = 0
 3263              		@ frame_needed = 0, uses_anonymous_args = 0
 3264              	.LVL205:
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3265              		.loc 1 1370 0
 3266 0000 0368     		ldr	r3, [r0]
 3267 0002 9B68     		ldr	r3, [r3, #8]
 3268 0004 13F0040F 		tst	r3, #4
 3269 0008 02D0     		beq	.L375
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3270              		.loc 1 1518 0
 3271 000a 0223     		movs	r3, #2
 3272              	.L372:
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3273              		.loc 1 1523 0
 3274 000c 1846     		mov	r0, r3
 3275              	.LVL206:
 3276 000e 7047     		bx	lr
 3277              	.LVL207:
 3278              	.L375:
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 3279              		.loc 1 1373 0
 3280 0010 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 3281 0014 012B     		cmp	r3, #1
ARM GAS  /tmp/ccWogU0R.s 			page 121


 3282 0016 01D1     		bne	.L376
 3283 0018 0223     		movs	r3, #2
 3284 001a F7E7     		b	.L372
 3285              	.L376:
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3286              		.loc 1 1362 0 discriminator 2
 3287 001c 10B5     		push	{r4, lr}
 3288              	.LCFI23:
 3289              		.cfi_def_cfa_offset 8
 3290              		.cfi_offset 4, -8
 3291              		.cfi_offset 14, -4
 3292 001e 0446     		mov	r4, r0
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 3293              		.loc 1 1373 0 discriminator 2
 3294 0020 0123     		movs	r3, #1
 3295 0022 80F85430 		strb	r3, [r0, #84]
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 3296              		.loc 1 1376 0 discriminator 2
 3297 0026 FFF7FEFF 		bl	ADC_Enable
 3298              	.LVL208:
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 3299              		.loc 1 1379 0 discriminator 2
 3300 002a 0346     		mov	r3, r0
 3301 002c 0028     		cmp	r0, #0
 3302 002e 40F0AA80 		bne	.L350
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3303              		.loc 1 1384 0
 3304 0032 A26D     		ldr	r2, [r4, #88]
 3305 0034 22F47062 		bic	r2, r2, #3840
 3306 0038 22F00102 		bic	r2, r2, #1
 3307 003c 42F48072 		orr	r2, r2, #256
 3308 0040 A265     		str	r2, [r4, #88]
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3309              		.loc 1 1391 0
 3310 0042 2268     		ldr	r2, [r4]
 3311 0044 5249     		ldr	r1, .L377
 3312 0046 8A42     		cmp	r2, r1
 3313 0048 09D0     		beq	.L351
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3314              		.loc 1 1391 0 is_stmt 0 discriminator 1
 3315 004a 01F50071 		add	r1, r1, #512
 3316 004e 8A42     		cmp	r2, r1
 3317 0050 05D0     		beq	.L351
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3318              		.loc 1 1391 0 discriminator 2
 3319 0052 01F58071 		add	r1, r1, #256
 3320 0056 8968     		ldr	r1, [r1, #8]
 3321 0058 11F01F0F 		tst	r1, #31
 3322 005c 03D1     		bne	.L352
 3323              	.L351:
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 3324              		.loc 1 1393 0 is_stmt 1
 3325 005e A16D     		ldr	r1, [r4, #88]
 3326 0060 21F48011 		bic	r1, r1, #1048576
 3327 0064 A165     		str	r1, [r4, #88]
 3328              	.L352:
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
ARM GAS  /tmp/ccWogU0R.s 			page 122


 3329              		.loc 1 1398 0
 3330 0066 A16D     		ldr	r1, [r4, #88]
 3331 0068 11F4805F 		tst	r1, #4096
 3332 006c 52D0     		beq	.L353
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 3333              		.loc 1 1401 0
 3334 006e E16D     		ldr	r1, [r4, #92]
 3335 0070 21F00601 		bic	r1, r1, #6
 3336 0074 E165     		str	r1, [r4, #92]
 3337              	.L354:
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 3338              		.loc 1 1411 0
 3339 0076 1C21     		movs	r1, #28
 3340 0078 1160     		str	r1, [r2]
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 3341              		.loc 1 1416 0
 3342 007a 0022     		movs	r2, #0
 3343 007c 84F85420 		strb	r2, [r4, #84]
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 3344              		.loc 1 1419 0
 3345 0080 2168     		ldr	r1, [r4]
 3346 0082 4A68     		ldr	r2, [r1, #4]
 3347 0084 22F01C02 		bic	r2, r2, #28
 3348 0088 4A60     		str	r2, [r1, #4]
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3349              		.loc 1 1422 0
 3350 008a 6269     		ldr	r2, [r4, #20]
 3351 008c 082A     		cmp	r2, #8
 3352 008e 44D1     		bne	.L368
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 3353              		.loc 1 1425 0
 3354 0090 2168     		ldr	r1, [r4]
 3355 0092 4A68     		ldr	r2, [r1, #4]
 3356 0094 42F00802 		orr	r2, r2, #8
 3357 0098 4A60     		str	r2, [r1, #4]
 3358              	.L357:
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3359              		.loc 1 1437 0
 3360 009a A26B     		ldr	r2, [r4, #56]
 3361 009c 22B9     		cbnz	r2, .L358
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 3362              		.loc 1 1439 0
 3363 009e 2168     		ldr	r1, [r4]
 3364 00a0 4A68     		ldr	r2, [r1, #4]
 3365 00a2 42F01002 		orr	r2, r2, #16
 3366 00a6 4A60     		str	r2, [r1, #4]
 3367              	.L358:
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3368              		.loc 1 1450 0
 3369 00a8 2268     		ldr	r2, [r4]
 3370 00aa 3949     		ldr	r1, .L377
 3371 00ac 8A42     		cmp	r2, r1
 3372 00ae 3AD0     		beq	.L359
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3373              		.loc 1 1450 0 is_stmt 0 discriminator 1
 3374 00b0 01F50071 		add	r1, r1, #512
 3375 00b4 8A42     		cmp	r2, r1
ARM GAS  /tmp/ccWogU0R.s 			page 123


 3376 00b6 36D0     		beq	.L359
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3377              		.loc 1 1450 0 discriminator 2
 3378 00b8 01F58071 		add	r1, r1, #256
 3379 00bc 8968     		ldr	r1, [r1, #8]
 3380 00be 11F01F0F 		tst	r1, #31
 3381 00c2 30D0     		beq	.L359
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3382              		.loc 1 1450 0 discriminator 3
 3383 00c4 3349     		ldr	r1, .L377+4
 3384 00c6 8968     		ldr	r1, [r1, #8]
 3385 00c8 01F01F01 		and	r1, r1, #31
 3386 00cc 0529     		cmp	r1, #5
 3387 00ce 2AD0     		beq	.L359
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3388              		.loc 1 1450 0 discriminator 4
 3389 00d0 3049     		ldr	r1, .L377+4
 3390 00d2 8968     		ldr	r1, [r1, #8]
 3391 00d4 01F01F01 		and	r1, r1, #31
 3392 00d8 0929     		cmp	r1, #9
 3393 00da 24D0     		beq	.L359
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
 3394              		.loc 1 1484 0 is_stmt 1
 3395 00dc A16D     		ldr	r1, [r4, #88]
 3396 00de 41F48011 		orr	r1, r1, #1048576
 3397 00e2 A165     		str	r1, [r4, #88]
 3398              	.LVL209:
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3399              		.loc 1 1488 0
 3400 00e4 2A49     		ldr	r1, .L377
 3401 00e6 C968     		ldr	r1, [r1, #12]
 3402 00e8 11F0007F 		tst	r1, #33554432
 3403 00ec 4ED0     		beq	.L349
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
 3404              		.loc 1 1492 0
 3405 00ee A16D     		ldr	r1, [r4, #88]
 3406 00f0 21F44051 		bic	r1, r1, #12288
 3407 00f4 41F48051 		orr	r1, r1, #4096
 3408 00f8 A165     		str	r1, [r4, #88]
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 3409              		.loc 1 1494 0
 3410 00fa 6169     		ldr	r1, [r4, #20]
 3411 00fc 0829     		cmp	r1, #8
 3412 00fe 38D1     		bne	.L370
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 3413              		.loc 1 1497 0
 3414 0100 5168     		ldr	r1, [r2, #4]
 3415 0102 21F02001 		bic	r1, r1, #32
 3416 0106 5160     		str	r1, [r2, #4]
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
 3417              		.loc 1 1498 0
 3418 0108 2168     		ldr	r1, [r4]
 3419 010a 4A68     		ldr	r2, [r1, #4]
 3420 010c 42F04002 		orr	r2, r2, #64
 3421 0110 4A60     		str	r2, [r1, #4]
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
 3422              		.loc 1 1499 0
ARM GAS  /tmp/ccWogU0R.s 			page 124


 3423 0112 3BE0     		b	.L349
 3424              	.LVL210:
 3425              	.L353:
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 3426              		.loc 1 1406 0
 3427 0114 0021     		movs	r1, #0
 3428 0116 E165     		str	r1, [r4, #92]
 3429 0118 ADE7     		b	.L354
 3430              	.L368:
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 3431              		.loc 1 1429 0
 3432 011a 2168     		ldr	r1, [r4]
 3433 011c 4A68     		ldr	r2, [r1, #4]
 3434 011e 42F00402 		orr	r2, r2, #4
 3435 0122 4A60     		str	r2, [r1, #4]
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 3436              		.loc 1 1430 0
 3437 0124 B9E7     		b	.L357
 3438              	.L359:
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3439              		.loc 1 1455 0
 3440 0126 D168     		ldr	r1, [r2, #12]
 3441 0128 11F0007F 		tst	r1, #33554432
 3442 012c 11D0     		beq	.L361
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           
 3443              		.loc 1 1457 0
 3444 012e A16D     		ldr	r1, [r4, #88]
 3445 0130 21F44051 		bic	r1, r1, #12288
 3446 0134 41F48051 		orr	r1, r1, #4096
 3447 0138 A165     		str	r1, [r4, #88]
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 3448              		.loc 1 1463 0
 3449 013a 6169     		ldr	r1, [r4, #20]
 3450 013c 0829     		cmp	r1, #8
 3451 013e 0ED1     		bne	.L369
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 3452              		.loc 1 1466 0
 3453 0140 5168     		ldr	r1, [r2, #4]
 3454 0142 21F02001 		bic	r1, r1, #32
 3455 0146 5160     		str	r1, [r2, #4]
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
 3456              		.loc 1 1467 0
 3457 0148 2168     		ldr	r1, [r4]
 3458 014a 4A68     		ldr	r2, [r1, #4]
 3459 014c 42F04002 		orr	r2, r2, #64
 3460 0150 4A60     		str	r2, [r1, #4]
 3461              	.L361:
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 3462              		.loc 1 1478 0
 3463 0152 2168     		ldr	r1, [r4]
 3464 0154 8A68     		ldr	r2, [r1, #8]
 3465 0156 42F00402 		orr	r2, r2, #4
 3466 015a 8A60     		str	r2, [r1, #8]
 3467 015c 16E0     		b	.L349
 3468              	.L369:
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 3469              		.loc 1 1471 0
ARM GAS  /tmp/ccWogU0R.s 			page 125


 3470 015e 5168     		ldr	r1, [r2, #4]
 3471 0160 21F04001 		bic	r1, r1, #64
 3472 0164 5160     		str	r1, [r2, #4]
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
 3473              		.loc 1 1472 0
 3474 0166 2168     		ldr	r1, [r4]
 3475 0168 4A68     		ldr	r2, [r1, #4]
 3476 016a 42F02002 		orr	r2, r2, #32
 3477 016e 4A60     		str	r2, [r1, #4]
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 3478              		.loc 1 1473 0
 3479 0170 EFE7     		b	.L361
 3480              	.LVL211:
 3481              	.L370:
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 3482              		.loc 1 1502 0
 3483 0172 5168     		ldr	r1, [r2, #4]
 3484 0174 21F04001 		bic	r1, r1, #64
 3485 0178 5160     		str	r1, [r2, #4]
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
 3486              		.loc 1 1503 0
 3487 017a 2168     		ldr	r1, [r4]
 3488 017c 4A68     		ldr	r2, [r1, #4]
 3489 017e 42F02002 		orr	r2, r2, #32
 3490 0182 4A60     		str	r2, [r1, #4]
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 3491              		.loc 1 1504 0
 3492 0184 02E0     		b	.L349
 3493              	.LVL212:
 3494              	.L350:
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 3495              		.loc 1 1512 0
 3496 0186 0022     		movs	r2, #0
 3497 0188 84F85420 		strb	r2, [r4, #84]
 3498              	.L349:
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3499              		.loc 1 1523 0
 3500 018c 1846     		mov	r0, r3
 3501              	.LVL213:
 3502 018e 10BD     		pop	{r4, pc}
 3503              	.LVL214:
 3504              	.L378:
 3505              		.align	2
 3506              	.L377:
 3507 0190 00000450 		.word	1342439424
 3508 0194 00030450 		.word	1342440192
 3509              		.cfi_endproc
 3510              	.LFE317:
 3512              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 3513              		.align	1
 3514              		.global	HAL_ADC_Start_DMA
 3515              		.syntax unified
 3516              		.thumb
 3517              		.thumb_func
 3518              		.fpu fpv4-sp-d16
 3520              	HAL_ADC_Start_DMA:
 3521              	.LFB319:
ARM GAS  /tmp/ccWogU0R.s 			page 126


1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3522              		.loc 1 1586 0
 3523              		.cfi_startproc
 3524              		@ args = 0, pretend = 0, frame = 0
 3525              		@ frame_needed = 0, uses_anonymous_args = 0
 3526              	.LVL215:
 3527 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3528              	.LCFI24:
 3529              		.cfi_def_cfa_offset 24
 3530              		.cfi_offset 3, -24
 3531              		.cfi_offset 4, -20
 3532              		.cfi_offset 5, -16
 3533              		.cfi_offset 6, -12
 3534              		.cfi_offset 7, -8
 3535              		.cfi_offset 14, -4
 3536              	.LVL216:
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3537              		.loc 1 1593 0
 3538 0002 0468     		ldr	r4, [r0]
 3539 0004 A568     		ldr	r5, [r4, #8]
 3540 0006 15F0040F 		tst	r5, #4
 3541 000a 02D0     		beq	.L396
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3542              		.loc 1 1691 0
 3543 000c 0224     		movs	r4, #2
 3544              	.LVL217:
 3545              	.L380:
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3546              		.loc 1 1696 0
 3547 000e 2046     		mov	r0, r4
 3548 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3549              	.LVL218:
 3550              	.L396:
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 3551              		.loc 1 1596 0
 3552 0012 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 3553 0016 012B     		cmp	r3, #1
 3554 0018 7FD0     		beq	.L390
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 3555              		.loc 1 1596 0 is_stmt 0 discriminator 2
 3556 001a 0123     		movs	r3, #1
 3557 001c 80F85430 		strb	r3, [r0, #84]
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 3558              		.loc 1 1600 0 is_stmt 1 discriminator 2
 3559 0020 3F4B     		ldr	r3, .L399
 3560 0022 9C42     		cmp	r4, r3
 3561 0024 0AD0     		beq	.L381
 3562 0026 03F58073 		add	r3, r3, #256
 3563 002a 9C42     		cmp	r4, r3
 3564 002c 06D0     		beq	.L381
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 3565              		.loc 1 1600 0 is_stmt 0
 3566 002e 0023     		movs	r3, #0
 3567              	.L382:
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 3568              		.loc 1 1600 0 discriminator 12
 3569 0030 EBB1     		cbz	r3, .L397
ARM GAS  /tmp/ccWogU0R.s 			page 127


 3570              	.LVL219:
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 3571              		.loc 1 1686 0 is_stmt 1
 3572 0032 0023     		movs	r3, #0
 3573 0034 80F85430 		strb	r3, [r0, #84]
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
 3574              		.loc 1 1684 0
 3575 0038 0124     		movs	r4, #1
 3576 003a E8E7     		b	.L380
 3577              	.LVL220:
 3578              	.L381:
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 3579              		.loc 1 1600 0 discriminator 3
 3580 003c 394B     		ldr	r3, .L399+4
 3581 003e 9B68     		ldr	r3, [r3, #8]
 3582 0040 13F01F0F 		tst	r3, #31
 3583 0044 0FD0     		beq	.L392
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 3584              		.loc 1 1600 0 is_stmt 0 discriminator 5
 3585 0046 374B     		ldr	r3, .L399+4
 3586 0048 9B68     		ldr	r3, [r3, #8]
 3587 004a 03F01F03 		and	r3, r3, #31
 3588 004e 052B     		cmp	r3, #5
 3589 0050 0BD0     		beq	.L393
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 3590              		.loc 1 1600 0 discriminator 7
 3591 0052 344B     		ldr	r3, .L399+4
 3592 0054 9B68     		ldr	r3, [r3, #8]
 3593 0056 03F01F03 		and	r3, r3, #31
 3594 005a 092B     		cmp	r3, #9
 3595 005c 01D0     		beq	.L398
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 3596              		.loc 1 1600 0
 3597 005e 0123     		movs	r3, #1
 3598 0060 E6E7     		b	.L382
 3599              	.L398:
 3600 0062 0023     		movs	r3, #0
 3601 0064 E4E7     		b	.L382
 3602              	.L392:
 3603 0066 0023     		movs	r3, #0
 3604 0068 E2E7     		b	.L382
 3605              	.L393:
 3606 006a 0023     		movs	r3, #0
 3607 006c E0E7     		b	.L382
 3608              	.L397:
 3609 006e 1646     		mov	r6, r2
 3610 0070 0D46     		mov	r5, r1
 3611 0072 0746     		mov	r7, r0
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 3612              		.loc 1 1603 0 is_stmt 1
 3613 0074 FFF7FEFF 		bl	ADC_Enable
 3614              	.LVL221:
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3615              		.loc 1 1606 0
 3616 0078 0446     		mov	r4, r0
 3617 007a 0028     		cmp	r0, #0
 3618 007c 49D1     		bne	.L384
ARM GAS  /tmp/ccWogU0R.s 			page 128


1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
 3619              		.loc 1 1611 0
 3620 007e BB6D     		ldr	r3, [r7, #88]
 3621 0080 23F47063 		bic	r3, r3, #3840
 3622 0084 23F00103 		bic	r3, r3, #1
 3623 0088 43F48073 		orr	r3, r3, #256
 3624 008c BB65     		str	r3, [r7, #88]
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3625              		.loc 1 1618 0
 3626 008e 3B68     		ldr	r3, [r7]
 3627 0090 234A     		ldr	r2, .L399
 3628 0092 9342     		cmp	r3, r2
 3629 0094 08D0     		beq	.L385
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3630              		.loc 1 1618 0 is_stmt 0 discriminator 1
 3631 0096 02F50072 		add	r2, r2, #512
 3632 009a 9342     		cmp	r3, r2
 3633 009c 04D0     		beq	.L385
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3634              		.loc 1 1618 0 discriminator 2
 3635 009e 214B     		ldr	r3, .L399+4
 3636 00a0 9B68     		ldr	r3, [r3, #8]
 3637 00a2 13F01F0F 		tst	r3, #31
 3638 00a6 03D1     		bne	.L386
 3639              	.L385:
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 3640              		.loc 1 1620 0 is_stmt 1
 3641 00a8 BB6D     		ldr	r3, [r7, #88]
 3642 00aa 23F48013 		bic	r3, r3, #1048576
 3643 00ae BB65     		str	r3, [r7, #88]
 3644              	.L386:
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3645              		.loc 1 1624 0
 3646 00b0 BB6D     		ldr	r3, [r7, #88]
 3647 00b2 13F4805F 		tst	r3, #4096
 3648 00b6 29D0     		beq	.L387
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 3649              		.loc 1 1627 0
 3650 00b8 FB6D     		ldr	r3, [r7, #92]
 3651 00ba 23F00603 		bic	r3, r3, #6
 3652 00be FB65     		str	r3, [r7, #92]
 3653              	.L388:
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 3654              		.loc 1 1636 0
 3655 00c0 3B6D     		ldr	r3, [r7, #80]
 3656 00c2 194A     		ldr	r2, .L399+8
 3657 00c4 DA62     		str	r2, [r3, #44]
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 3658              		.loc 1 1639 0
 3659 00c6 3B6D     		ldr	r3, [r7, #80]
 3660 00c8 184A     		ldr	r2, .L399+12
 3661 00ca 1A63     		str	r2, [r3, #48]
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 3662              		.loc 1 1642 0
 3663 00cc 3B6D     		ldr	r3, [r7, #80]
 3664 00ce 184A     		ldr	r2, .L399+16
 3665 00d0 5A63     		str	r2, [r3, #52]
ARM GAS  /tmp/ccWogU0R.s 			page 129


1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 3666              		.loc 1 1651 0
 3667 00d2 3B68     		ldr	r3, [r7]
 3668 00d4 1C22     		movs	r2, #28
 3669 00d6 1A60     		str	r2, [r3]
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 3670              		.loc 1 1656 0
 3671 00d8 0023     		movs	r3, #0
 3672 00da 87F85430 		strb	r3, [r7, #84]
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 3673              		.loc 1 1661 0
 3674 00de 3A68     		ldr	r2, [r7]
 3675 00e0 5368     		ldr	r3, [r2, #4]
 3676 00e2 43F01003 		orr	r3, r3, #16
 3677 00e6 5360     		str	r3, [r2, #4]
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 3678              		.loc 1 1664 0
 3679 00e8 3A68     		ldr	r2, [r7]
 3680 00ea D368     		ldr	r3, [r2, #12]
 3681 00ec 43F00103 		orr	r3, r3, #1
 3682 00f0 D360     		str	r3, [r2, #12]
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 3683              		.loc 1 1667 0
 3684 00f2 3968     		ldr	r1, [r7]
 3685 00f4 3346     		mov	r3, r6
 3686 00f6 2A46     		mov	r2, r5
 3687 00f8 4031     		adds	r1, r1, #64
 3688 00fa 386D     		ldr	r0, [r7, #80]
 3689              	.LVL222:
 3690 00fc FFF7FEFF 		bl	HAL_DMA_Start_IT
 3691              	.LVL223:
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 3692              		.loc 1 1674 0
 3693 0100 3A68     		ldr	r2, [r7]
 3694 0102 9368     		ldr	r3, [r2, #8]
 3695 0104 43F00403 		orr	r3, r3, #4
 3696 0108 9360     		str	r3, [r2, #8]
 3697 010a 80E7     		b	.L380
 3698              	.LVL224:
 3699              	.L387:
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 3700              		.loc 1 1632 0
 3701 010c 0023     		movs	r3, #0
 3702 010e FB65     		str	r3, [r7, #92]
 3703 0110 D6E7     		b	.L388
 3704              	.L384:
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 3705              		.loc 1 1679 0
 3706 0112 0023     		movs	r3, #0
 3707 0114 87F85430 		strb	r3, [r7, #84]
 3708 0118 79E7     		b	.L380
 3709              	.LVL225:
 3710              	.L390:
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 3711              		.loc 1 1596 0
 3712 011a 0224     		movs	r4, #2
 3713 011c 77E7     		b	.L380
ARM GAS  /tmp/ccWogU0R.s 			page 130


 3714              	.L400:
 3715 011e 00BF     		.align	2
 3716              	.L399:
 3717 0120 00000450 		.word	1342439424
 3718 0124 00030450 		.word	1342440192
 3719 0128 00000000 		.word	ADC_DMAConvCplt
 3720 012c 00000000 		.word	ADC_DMAHalfConvCplt
 3721 0130 00000000 		.word	ADC_DMAError
 3722              		.cfi_endproc
 3723              	.LFE319:
 3725              		.section	.text.ADC_Disable,"ax",%progbits
 3726              		.align	1
 3727              		.global	ADC_Disable
 3728              		.syntax unified
 3729              		.thumb
 3730              		.thumb_func
 3731              		.fpu fpv4-sp-d16
 3733              	ADC_Disable:
 3734              	.LFB333:
2948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart = 0;
 3735              		.loc 1 2948 0
 3736              		.cfi_startproc
 3737              		@ args = 0, pretend = 0, frame = 0
 3738              		@ frame_needed = 0, uses_anonymous_args = 0
 3739              	.LVL226:
 3740 0000 38B5     		push	{r3, r4, r5, lr}
 3741              	.LCFI25:
 3742              		.cfi_def_cfa_offset 16
 3743              		.cfi_offset 3, -16
 3744              		.cfi_offset 4, -12
 3745              		.cfi_offset 5, -8
 3746              		.cfi_offset 14, -4
 3747              	.LVL227:
2954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3748              		.loc 1 2954 0
 3749 0002 0268     		ldr	r2, [r0]
 3750 0004 9368     		ldr	r3, [r2, #8]
 3751 0006 03F00303 		and	r3, r3, #3
 3752 000a 012B     		cmp	r3, #1
 3753 000c 11D0     		beq	.L411
 3754 000e 0023     		movs	r3, #0
 3755              	.L402:
2954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3756              		.loc 1 2954 0 is_stmt 0 discriminator 6
 3757 0010 002B     		cmp	r3, #0
 3758 0012 37D0     		beq	.L409
2957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 3759              		.loc 1 2957 0 is_stmt 1
 3760 0014 9368     		ldr	r3, [r2, #8]
 3761 0016 03F00D03 		and	r3, r3, #13
 3762 001a 012B     		cmp	r3, #1
 3763 001c 11D0     		beq	.L412
2965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 3764              		.loc 1 2965 0
 3765 001e 836D     		ldr	r3, [r0, #88]
 3766 0020 43F01003 		orr	r3, r3, #16
 3767 0024 8365     		str	r3, [r0, #88]
ARM GAS  /tmp/ccWogU0R.s 			page 131


2968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 3768              		.loc 1 2968 0
 3769 0026 C36D     		ldr	r3, [r0, #92]
 3770 0028 43F00103 		orr	r3, r3, #1
 3771 002c C365     		str	r3, [r0, #92]
2970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 3772              		.loc 1 2970 0
 3773 002e 0120     		movs	r0, #1
 3774              	.LVL228:
 3775 0030 38BD     		pop	{r3, r4, r5, pc}
 3776              	.LVL229:
 3777              	.L411:
2954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3778              		.loc 1 2954 0 discriminator 1
 3779 0032 1368     		ldr	r3, [r2]
 3780 0034 13F0010F 		tst	r3, #1
 3781 0038 01D1     		bne	.L408
2954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3782              		.loc 1 2954 0 is_stmt 0
 3783 003a 0023     		movs	r3, #0
 3784 003c E8E7     		b	.L402
 3785              	.L408:
 3786 003e 0123     		movs	r3, #1
 3787 0040 E6E7     		b	.L402
 3788              	.L412:
 3789 0042 0446     		mov	r4, r0
2960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 3790              		.loc 1 2960 0 is_stmt 1
 3791 0044 9368     		ldr	r3, [r2, #8]
 3792 0046 43F00203 		orr	r3, r3, #2
 3793 004a 9360     		str	r3, [r2, #8]
 3794 004c 0368     		ldr	r3, [r0]
 3795 004e 0322     		movs	r2, #3
 3796 0050 1A60     		str	r2, [r3]
2975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 3797              		.loc 1 2975 0
 3798 0052 FFF7FEFF 		bl	HAL_GetTick
 3799              	.LVL230:
 3800 0056 0546     		mov	r5, r0
 3801              	.LVL231:
 3802              	.L405:
2977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 3803              		.loc 1 2977 0
 3804 0058 2368     		ldr	r3, [r4]
 3805 005a 9B68     		ldr	r3, [r3, #8]
 3806 005c 13F0010F 		tst	r3, #1
 3807 0060 0ED0     		beq	.L413
2979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3808              		.loc 1 2979 0
 3809 0062 FFF7FEFF 		bl	HAL_GetTick
 3810              	.LVL232:
 3811 0066 401B     		subs	r0, r0, r5
 3812 0068 0228     		cmp	r0, #2
 3813 006a F5D9     		bls	.L405
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 3814              		.loc 1 2982 0
 3815 006c A36D     		ldr	r3, [r4, #88]
ARM GAS  /tmp/ccWogU0R.s 			page 132


 3816 006e 43F01003 		orr	r3, r3, #16
 3817 0072 A365     		str	r3, [r4, #88]
2985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         
 3818              		.loc 1 2985 0
 3819 0074 E36D     		ldr	r3, [r4, #92]
 3820 0076 43F00103 		orr	r3, r3, #1
 3821 007a E365     		str	r3, [r4, #92]
2987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 3822              		.loc 1 2987 0
 3823 007c 0120     		movs	r0, #1
 3824 007e 38BD     		pop	{r3, r4, r5, pc}
 3825              	.LVL233:
 3826              	.L413:
2993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 3827              		.loc 1 2993 0
 3828 0080 0020     		movs	r0, #0
 3829 0082 38BD     		pop	{r3, r4, r5, pc}
 3830              	.LVL234:
 3831              	.L409:
 3832 0084 0020     		movs	r0, #0
 3833              	.LVL235:
2994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3834              		.loc 1 2994 0
 3835 0086 38BD     		pop	{r3, r4, r5, pc}
 3836              		.cfi_endproc
 3837              	.LFE333:
 3839              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 3840              		.align	1
 3841              		.global	HAL_ADC_DeInit
 3842              		.syntax unified
 3843              		.thumb
 3844              		.thumb_func
 3845              		.fpu fpv4-sp-d16
 3847              	HAL_ADC_DeInit:
 3848              	.LFB310:
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check ADC handle */
 3849              		.loc 1 658 0
 3850              		.cfi_startproc
 3851              		@ args = 0, pretend = 0, frame = 0
 3852              		@ frame_needed = 0, uses_anonymous_args = 0
 3853              	.LVL236:
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3854              		.loc 1 660 0
 3855 0000 0028     		cmp	r0, #0
 3856 0002 00F02281 		beq	.L428
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check ADC handle */
 3857              		.loc 1 658 0
 3858 0006 10B5     		push	{r4, lr}
 3859              	.LCFI26:
 3860              		.cfi_def_cfa_offset 8
 3861              		.cfi_offset 4, -8
 3862              		.cfi_offset 14, -4
 3863 0008 0446     		mov	r4, r0
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 3864              		.loc 1 669 0
 3865 000a 836D     		ldr	r3, [r0, #88]
 3866 000c 43F00203 		orr	r3, r3, #2
ARM GAS  /tmp/ccWogU0R.s 			page 133


 3867 0010 8365     		str	r3, [r0, #88]
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 3868              		.loc 1 675 0
 3869 0012 6C21     		movs	r1, #108
 3870 0014 FFF7FEFF 		bl	ADC_ConversionStop
 3871              	.LVL237:
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 3872              		.loc 1 683 0
 3873 0018 2268     		ldr	r2, [r4]
 3874 001a D368     		ldr	r3, [r2, #12]
 3875 001c 43F40013 		orr	r3, r3, #2097152
 3876 0020 D360     		str	r3, [r2, #12]
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 3877              		.loc 1 688 0
 3878 0022 2046     		mov	r0, r4
 3879 0024 FFF7FEFF 		bl	ADC_Disable
 3880              	.LVL238:
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 3881              		.loc 1 693 0
 3882 0028 2268     		ldr	r2, [r4]
 3883 002a 5368     		ldr	r3, [r2, #4]
 3884 002c 23F4FF63 		bic	r3, r3, #2040
 3885 0030 23F00703 		bic	r3, r3, #7
 3886 0034 5360     		str	r3, [r2, #4]
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 3887              		.loc 1 700 0
 3888 0036 2368     		ldr	r3, [r4]
 3889 0038 40F2FF72 		movw	r2, #2047
 3890 003c 1A60     		str	r2, [r3]
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);    
 3891              		.loc 1 711 0
 3892 003e 2268     		ldr	r2, [r4]
 3893 0040 9368     		ldr	r3, [r2, #8]
 3894 0042 23F0A043 		bic	r3, r3, #1342177280
 3895 0046 9360     		str	r3, [r2, #8]
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 3896              		.loc 1 712 0
 3897 0048 2268     		ldr	r2, [r4]
 3898 004a 9368     		ldr	r3, [r2, #8]
 3899 004c 43F00053 		orr	r3, r3, #536870912
 3900 0050 9360     		str	r3, [r2, #8]
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);  
 3901              		.loc 1 715 0
 3902 0052 2268     		ldr	r2, [r4]
 3903 0054 D168     		ldr	r1, [r2, #12]
 3904 0056 7E4B     		ldr	r3, .L453
 3905 0058 0B40     		ands	r3, r3, r1
 3906 005a D360     		str	r3, [r2, #12]
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 3907              		.loc 1 716 0
 3908 005c 2268     		ldr	r2, [r4]
 3909 005e D368     		ldr	r3, [r2, #12]
 3910 0060 43F00043 		orr	r3, r3, #-2147483648
 3911 0064 D360     		str	r3, [r2, #12]
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                   ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE    );        
 3912              		.loc 1 719 0
 3913 0066 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccWogU0R.s 			page 134


 3914 0068 1369     		ldr	r3, [r2, #16]
 3915 006a 23F4FF63 		bic	r3, r3, #2040
 3916 006e 23F00703 		bic	r3, r3, #7
 3917 0072 1361     		str	r3, [r2, #16]
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 3918              		.loc 1 723 0
 3919 0074 2268     		ldr	r2, [r4]
 3920 0076 5369     		ldr	r3, [r2, #20]
 3921 0078 03F04043 		and	r3, r3, #-1073741824
 3922 007c 5361     		str	r3, [r2, #20]
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                              ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 | 
 3923              		.loc 1 726 0
 3924 007e 2268     		ldr	r2, [r4]
 3925 0080 9369     		ldr	r3, [r2, #24]
 3926 0082 03F07843 		and	r3, r3, #-134217728
 3927 0086 9361     		str	r3, [r2, #24]
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 3928              		.loc 1 731 0
 3929 0088 2268     		ldr	r2, [r4]
 3930 008a 136A     		ldr	r3, [r2, #32]
 3931 008c 03F0F023 		and	r3, r3, #-268374016
 3932 0090 1362     		str	r3, [r2, #32]
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 3933              		.loc 1 734 0
 3934 0092 2268     		ldr	r2, [r4]
 3935 0094 536A     		ldr	r3, [r2, #36]
 3936 0096 03F0FF23 		and	r3, r3, #-16711936
 3937 009a 5362     		str	r3, [r2, #36]
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 3938              		.loc 1 737 0
 3939 009c 2268     		ldr	r2, [r4]
 3940 009e 936A     		ldr	r3, [r2, #40]
 3941 00a0 03F0FF23 		and	r3, r3, #-16711936
 3942 00a4 9362     		str	r3, [r2, #40]
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                             ADC_SQR1_SQ1 | ADC_SQR1_L);                              
 3943              		.loc 1 740 0
 3944 00a6 2268     		ldr	r2, [r4]
 3945 00a8 116B     		ldr	r1, [r2, #48]
 3946 00aa 6A4B     		ldr	r3, .L453+4
 3947 00ac 0B40     		ands	r3, r3, r1
 3948 00ae 1363     		str	r3, [r2, #48]
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);                                
 3949              		.loc 1 744 0
 3950 00b0 2368     		ldr	r3, [r4]
 3951 00b2 5A6B     		ldr	r2, [r3, #52]
 3952 00b4 6849     		ldr	r1, .L453+8
 3953 00b6 0A40     		ands	r2, r2, r1
 3954 00b8 5A63     		str	r2, [r3, #52]
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);                                 
 3955              		.loc 1 748 0
 3956 00ba 2268     		ldr	r2, [r4]
 3957 00bc 936B     		ldr	r3, [r2, #56]
 3958 00be 0B40     		ands	r3, r3, r1
 3959 00c0 9363     		str	r3, [r2, #56]
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 3960              		.loc 1 752 0
 3961 00c2 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccWogU0R.s 			page 135


 3962 00c4 D36B     		ldr	r3, [r2, #60]
 3963 00c6 23F4FB63 		bic	r3, r3, #2008
 3964 00ca 23F00703 		bic	r3, r3, #7
 3965 00ce D363     		str	r3, [r2, #60]
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR2 */
 3966              		.loc 1 760 0
 3967 00d0 2168     		ldr	r1, [r4]
 3968 00d2 0A6E     		ldr	r2, [r1, #96]
 3969 00d4 614B     		ldr	r3, .L453+12
 3970 00d6 1A40     		ands	r2, r2, r3
 3971 00d8 0A66     		str	r2, [r1, #96]
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR3 */
 3972              		.loc 1 762 0
 3973 00da 2168     		ldr	r1, [r4]
 3974 00dc 4A6E     		ldr	r2, [r1, #100]
 3975 00de 1A40     		ands	r2, r2, r3
 3976 00e0 4A66     		str	r2, [r1, #100]
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR4 */
 3977              		.loc 1 764 0
 3978 00e2 2168     		ldr	r1, [r4]
 3979 00e4 8A6E     		ldr	r2, [r1, #104]
 3980 00e6 1A40     		ands	r2, r2, r3
 3981 00e8 8A66     		str	r2, [r1, #104]
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 3982              		.loc 1 766 0
 3983 00ea 2168     		ldr	r1, [r4]
 3984 00ec CA6E     		ldr	r2, [r1, #108]
 3985 00ee 1340     		ands	r3, r3, r2
 3986 00f0 CB66     		str	r3, [r1, #108]
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 3987              		.loc 1 772 0
 3988 00f2 2268     		ldr	r2, [r4]
 3989 00f4 D2F8A030 		ldr	r3, [r2, #160]
 3990 00f8 DB0C     		lsrs	r3, r3, #19
 3991 00fa DB04     		lsls	r3, r3, #19
 3992 00fc C2F8A030 		str	r3, [r2, #160]
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 3993              		.loc 1 775 0
 3994 0100 2268     		ldr	r2, [r4]
 3995 0102 D2F8A430 		ldr	r3, [r2, #164]
 3996 0106 DB0C     		lsrs	r3, r3, #19
 3997 0108 DB04     		lsls	r3, r3, #19
 3998 010a C2F8A430 		str	r3, [r2, #164]
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 3999              		.loc 1 778 0
 4000 010e 2268     		ldr	r2, [r4]
 4001 0110 D2F8B030 		ldr	r3, [r2, #176]
 4002 0114 DB0C     		lsrs	r3, r3, #19
 4003 0116 DB04     		lsls	r3, r3, #19
 4004 0118 C2F8B030 		str	r3, [r2, #176]
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 4005              		.loc 1 781 0
 4006 011c 2268     		ldr	r2, [r4]
 4007 011e D2F8B430 		ldr	r3, [r2, #180]
 4008 0122 23F07F13 		bic	r3, r3, #8323199
 4009 0126 C2F8B430 		str	r3, [r2, #180]
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
ARM GAS  /tmp/ccWogU0R.s 			page 136


 4010              		.loc 1 788 0
 4011 012a 2268     		ldr	r2, [r4]
 4012 012c 9368     		ldr	r3, [r2, #8]
 4013 012e 03F00303 		and	r3, r3, #3
 4014 0132 012B     		cmp	r3, #1
 4015 0134 1FD0     		beq	.L445
 4016 0136 0023     		movs	r3, #0
 4017              	.L416:
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 4018              		.loc 1 788 0 is_stmt 0 discriminator 6
 4019 0138 002B     		cmp	r3, #0
 4020 013a 7BD1     		bne	.L417
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4021              		.loc 1 789 0 is_stmt 1
 4022 013c 4849     		ldr	r1, .L453+16
 4023 013e 8A42     		cmp	r2, r1
 4024 0140 21D0     		beq	.L446
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4025              		.loc 1 789 0 is_stmt 0 discriminator 2
 4026 0142 4849     		ldr	r1, .L453+20
 4027 0144 8A42     		cmp	r2, r1
 4028 0146 3BD0     		beq	.L447
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4029              		.loc 1 789 0 discriminator 14
 4030 0148 454A     		ldr	r2, .L453+16
 4031 014a 9268     		ldr	r2, [r2, #8]
 4032 014c 02F00302 		and	r2, r2, #3
 4033 0150 012A     		cmp	r2, #1
 4034 0152 57D0     		beq	.L448
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4035              		.loc 1 789 0
 4036 0154 1A46     		mov	r2, r3
 4037              	.L427:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4038              		.loc 1 789 0 discriminator 31
 4039 0156 12F0010F 		tst	r2, #1
 4040 015a 5CD1     		bne	.L439
 4041              	.L426:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4042              		.loc 1 789 0 discriminator 33
 4043 015c 414A     		ldr	r2, .L453+20
 4044 015e 9268     		ldr	r2, [r2, #8]
 4045 0160 02F00302 		and	r2, r2, #3
 4046 0164 012A     		cmp	r2, #1
 4047 0166 57D1     		bne	.L425
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4048              		.loc 1 789 0 discriminator 34
 4049 0168 3E4A     		ldr	r2, .L453+20
 4050 016a 1268     		ldr	r2, [r2]
 4051 016c 12F0010F 		tst	r2, #1
 4052 0170 52D0     		beq	.L425
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4053              		.loc 1 789 0
 4054 0172 0123     		movs	r3, #1
 4055 0174 50E0     		b	.L425
 4056              	.L445:
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
ARM GAS  /tmp/ccWogU0R.s 			page 137


 4057              		.loc 1 788 0 is_stmt 1 discriminator 1
 4058 0176 1368     		ldr	r3, [r2]
 4059 0178 13F0010F 		tst	r3, #1
 4060 017c 01D1     		bne	.L430
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 4061              		.loc 1 788 0 is_stmt 0
 4062 017e 0023     		movs	r3, #0
 4063 0180 DAE7     		b	.L416
 4064              	.L430:
 4065 0182 0123     		movs	r3, #1
 4066 0184 D8E7     		b	.L416
 4067              	.L446:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4068              		.loc 1 789 0 is_stmt 1 discriminator 1
 4069 0186 374A     		ldr	r2, .L453+20
 4070 0188 9268     		ldr	r2, [r2, #8]
 4071 018a 02F00302 		and	r2, r2, #3
 4072 018e 012A     		cmp	r2, #1
 4073 0190 08D0     		beq	.L449
 4074              	.L419:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4075              		.loc 1 789 0 is_stmt 0 discriminator 6
 4076 0192 354A     		ldr	r2, .L453+24
 4077 0194 9268     		ldr	r2, [r2, #8]
 4078 0196 02F00302 		and	r2, r2, #3
 4079 019a 012A     		cmp	r2, #1
 4080 019c 09D0     		beq	.L450
 4081              	.L420:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4082              		.loc 1 789 0 discriminator 12
 4083 019e 83F00103 		eor	r3, r3, #1
 4084 01a2 3BE0     		b	.L421
 4085              	.L449:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4086              		.loc 1 789 0 discriminator 3
 4087 01a4 2F4A     		ldr	r2, .L453+20
 4088 01a6 1268     		ldr	r2, [r2]
 4089 01a8 12F0010F 		tst	r2, #1
 4090 01ac F1D0     		beq	.L419
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4091              		.loc 1 789 0
 4092 01ae 0123     		movs	r3, #1
 4093 01b0 F5E7     		b	.L420
 4094              	.L450:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4095              		.loc 1 789 0 discriminator 7
 4096 01b2 2D4A     		ldr	r2, .L453+24
 4097 01b4 1268     		ldr	r2, [r2]
 4098 01b6 12F0010F 		tst	r2, #1
 4099 01ba F0D0     		beq	.L420
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4100              		.loc 1 789 0
 4101 01bc 0123     		movs	r3, #1
 4102 01be EEE7     		b	.L420
 4103              	.L447:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4104              		.loc 1 789 0 discriminator 13
ARM GAS  /tmp/ccWogU0R.s 			page 138


 4105 01c0 274A     		ldr	r2, .L453+16
 4106 01c2 9268     		ldr	r2, [r2, #8]
 4107 01c4 02F00302 		and	r2, r2, #3
 4108 01c8 012A     		cmp	r2, #1
 4109 01ca 0BD0     		beq	.L451
 4110              	.L423:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4111              		.loc 1 789 0 discriminator 18
 4112 01cc 264A     		ldr	r2, .L453+24
 4113 01ce 9268     		ldr	r2, [r2, #8]
 4114 01d0 02F00302 		and	r2, r2, #3
 4115 01d4 012A     		cmp	r2, #1
 4116 01d6 0CD0     		beq	.L452
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4117              		.loc 1 789 0
 4118 01d8 1A46     		mov	r2, r3
 4119              	.L424:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4120              		.loc 1 789 0 discriminator 24
 4121 01da 12F0010F 		tst	r2, #1
 4122 01de BDD0     		beq	.L426
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4123              		.loc 1 789 0
 4124 01e0 0123     		movs	r3, #1
 4125 01e2 19E0     		b	.L425
 4126              	.L451:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4127              		.loc 1 789 0 discriminator 15
 4128 01e4 1E4A     		ldr	r2, .L453+16
 4129 01e6 1268     		ldr	r2, [r2]
 4130 01e8 12F0010F 		tst	r2, #1
 4131 01ec EED0     		beq	.L423
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4132              		.loc 1 789 0
 4133 01ee 0122     		movs	r2, #1
 4134 01f0 F3E7     		b	.L424
 4135              	.L452:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4136              		.loc 1 789 0 discriminator 19
 4137 01f2 1D4A     		ldr	r2, .L453+24
 4138 01f4 1268     		ldr	r2, [r2]
 4139 01f6 12F0010F 		tst	r2, #1
 4140 01fa 01D1     		bne	.L435
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4141              		.loc 1 789 0
 4142 01fc 1A46     		mov	r2, r3
 4143 01fe ECE7     		b	.L424
 4144              	.L435:
 4145 0200 0122     		movs	r2, #1
 4146 0202 EAE7     		b	.L424
 4147              	.L448:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4148              		.loc 1 789 0 discriminator 26
 4149 0204 164A     		ldr	r2, .L453+16
 4150 0206 1268     		ldr	r2, [r2]
 4151 0208 12F0010F 		tst	r2, #1
 4152 020c 01D1     		bne	.L438
ARM GAS  /tmp/ccWogU0R.s 			page 139


 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4153              		.loc 1 789 0
 4154 020e 1A46     		mov	r2, r3
 4155 0210 A1E7     		b	.L427
 4156              	.L438:
 4157 0212 0122     		movs	r2, #1
 4158 0214 9FE7     		b	.L427
 4159              	.L439:
 4160 0216 0123     		movs	r3, #1
 4161              	.L425:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4162              		.loc 1 789 0 discriminator 39
 4163 0218 83F00103 		eor	r3, r3, #1
 4164              	.L421:
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (ADC_ANY_OTHER_ENABLED(hadc) == RESET) )
 4165              		.loc 1 788 0 is_stmt 1
 4166 021c 53B1     		cbz	r3, .L417
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 4167              		.loc 1 798 0
 4168 021e 134A     		ldr	r2, .L453+28
 4169 0220 9368     		ldr	r3, [r2, #8]
 4170 0222 23F0FF73 		bic	r3, r3, #33423360
 4171 0226 23F4F733 		bic	r3, r3, #126464
 4172 022a 23F48F73 		bic	r3, r3, #286
 4173 022e 23F00103 		bic	r3, r3, #1
 4174 0232 9360     		str	r3, [r2, #8]
 4175              	.L417:
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 4176              		.loc 1 812 0
 4177 0234 2046     		mov	r0, r4
 4178 0236 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 4179              	.LVL239:
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 4180              		.loc 1 815 0
 4181 023a 0020     		movs	r0, #0
 4182 023c E065     		str	r0, [r4, #92]
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0; 
 4183              		.loc 1 818 0
 4184 023e 2066     		str	r0, [r4, #96]
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 4185              		.loc 1 819 0
 4186 0240 6066     		str	r0, [r4, #100]
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 4187              		.loc 1 822 0
 4188 0242 A065     		str	r0, [r4, #88]
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 4189              		.loc 1 825 0
 4190 0244 84F85400 		strb	r0, [r4, #84]
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4191              		.loc 1 828 0
 4192 0248 10BD     		pop	{r4, pc}
 4193              	.LVL240:
 4194              	.L428:
 4195              	.LCFI27:
 4196              		.cfi_def_cfa_offset 0
 4197              		.cfi_restore 4
 4198              		.cfi_restore 14
ARM GAS  /tmp/ccWogU0R.s 			page 140


 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 4199              		.loc 1 662 0
 4200 024a 0120     		movs	r0, #1
 4201              	.LVL241:
 4202 024c 7047     		bx	lr
 4203              	.L454:
 4204 024e 00BF     		.align	2
 4205              	.L453:
 4206 0250 04800080 		.word	-2147450876
 4207 0254 300882E0 		.word	-528349136
 4208 0258 200882E0 		.word	-528349152
 4209 025c 00F0FF03 		.word	67104768
 4210 0260 00000450 		.word	1342439424
 4211 0264 00010450 		.word	1342439680
 4212 0268 00020450 		.word	1342439936
 4213 026c 00030450 		.word	1342440192
 4214              		.cfi_endproc
 4215              	.LFE310:
 4217              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 4218              		.align	1
 4219              		.global	HAL_ADC_Stop
 4220              		.syntax unified
 4221              		.thumb
 4222              		.thumb_func
 4223              		.fpu fpv4-sp-d16
 4225              	HAL_ADC_Stop:
 4226              	.LFB314:
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4227              		.loc 1 1014 0
 4228              		.cfi_startproc
 4229              		@ args = 0, pretend = 0, frame = 0
 4230              		@ frame_needed = 0, uses_anonymous_args = 0
 4231              	.LVL242:
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 4232              		.loc 1 1021 0
 4233 0000 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 4234 0004 012B     		cmp	r3, #1
 4235 0006 02D1     		bne	.L463
 4236 0008 0223     		movs	r3, #2
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4237              		.loc 1 1047 0
 4238 000a 1846     		mov	r0, r3
 4239              	.LVL243:
 4240 000c 7047     		bx	lr
 4241              	.LVL244:
 4242              	.L463:
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4243              		.loc 1 1014 0 discriminator 2
 4244 000e 10B5     		push	{r4, lr}
 4245              	.LCFI28:
 4246              		.cfi_def_cfa_offset 8
 4247              		.cfi_offset 4, -8
 4248              		.cfi_offset 14, -4
 4249 0010 0446     		mov	r4, r0
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 4250              		.loc 1 1021 0 discriminator 2
 4251 0012 0123     		movs	r3, #1
ARM GAS  /tmp/ccWogU0R.s 			page 141


 4252 0014 80F85430 		strb	r3, [r0, #84]
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 4253              		.loc 1 1024 0 discriminator 2
 4254 0018 6C21     		movs	r1, #108
 4255 001a FFF7FEFF 		bl	ADC_ConversionStop
 4256              	.LVL245:
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4257              		.loc 1 1027 0 discriminator 2
 4258 001e 0346     		mov	r3, r0
 4259 0020 20B1     		cbz	r0, .L464
 4260              	.L457:
 4261              	.LVL246:
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 4262              		.loc 1 1043 0
 4263 0022 0022     		movs	r2, #0
 4264 0024 84F85420 		strb	r2, [r4, #84]
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4265              		.loc 1 1047 0
 4266 0028 1846     		mov	r0, r3
 4267 002a 10BD     		pop	{r4, pc}
 4268              	.LVL247:
 4269              	.L464:
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 4270              		.loc 1 1030 0
 4271 002c 2046     		mov	r0, r4
 4272              	.LVL248:
 4273 002e FFF7FEFF 		bl	ADC_Disable
 4274              	.LVL249:
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4275              		.loc 1 1033 0
 4276 0032 0346     		mov	r3, r0
 4277 0034 0028     		cmp	r0, #0
 4278 0036 F4D1     		bne	.L457
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 4279              		.loc 1 1036 0
 4280 0038 A26D     		ldr	r2, [r4, #88]
 4281 003a 22F48852 		bic	r2, r2, #4352
 4282 003e 22F00102 		bic	r2, r2, #1
 4283 0042 42F00102 		orr	r2, r2, #1
 4284 0046 A265     		str	r2, [r4, #88]
 4285 0048 EBE7     		b	.L457
 4286              		.cfi_endproc
 4287              	.LFE314:
 4289              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 4290              		.align	1
 4291              		.global	HAL_ADC_Stop_IT
 4292              		.syntax unified
 4293              		.thumb
 4294              		.thumb_func
 4295              		.fpu fpv4-sp-d16
 4297              	HAL_ADC_Stop_IT:
 4298              	.LFB318:
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4299              		.loc 1 1533 0
 4300              		.cfi_startproc
 4301              		@ args = 0, pretend = 0, frame = 0
 4302              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccWogU0R.s 			page 142


 4303              	.LVL250:
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 4304              		.loc 1 1540 0
 4305 0000 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 4306 0004 012B     		cmp	r3, #1
 4307 0006 02D1     		bne	.L473
 4308 0008 0223     		movs	r3, #2
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4309              		.loc 1 1570 0
 4310 000a 1846     		mov	r0, r3
 4311              	.LVL251:
 4312 000c 7047     		bx	lr
 4313              	.LVL252:
 4314              	.L473:
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4315              		.loc 1 1533 0 discriminator 2
 4316 000e 10B5     		push	{r4, lr}
 4317              	.LCFI29:
 4318              		.cfi_def_cfa_offset 8
 4319              		.cfi_offset 4, -8
 4320              		.cfi_offset 14, -4
 4321 0010 0446     		mov	r4, r0
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 4322              		.loc 1 1540 0 discriminator 2
 4323 0012 0123     		movs	r3, #1
 4324 0014 80F85430 		strb	r3, [r0, #84]
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 4325              		.loc 1 1543 0 discriminator 2
 4326 0018 6C21     		movs	r1, #108
 4327 001a FFF7FEFF 		bl	ADC_ConversionStop
 4328              	.LVL253:
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4329              		.loc 1 1546 0 discriminator 2
 4330 001e 0346     		mov	r3, r0
 4331 0020 20B1     		cbz	r0, .L474
 4332              	.L467:
 4333              	.LVL254:
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 4334              		.loc 1 1566 0
 4335 0022 0022     		movs	r2, #0
 4336 0024 84F85420 		strb	r2, [r4, #84]
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4337              		.loc 1 1570 0
 4338 0028 1846     		mov	r0, r3
 4339 002a 10BD     		pop	{r4, pc}
 4340              	.LVL255:
 4341              	.L474:
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 4342              		.loc 1 1550 0
 4343 002c 2268     		ldr	r2, [r4]
 4344 002e 5368     		ldr	r3, [r2, #4]
 4345 0030 23F01C03 		bic	r3, r3, #28
 4346 0034 5360     		str	r3, [r2, #4]
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 4347              		.loc 1 1553 0
 4348 0036 2046     		mov	r0, r4
 4349              	.LVL256:
ARM GAS  /tmp/ccWogU0R.s 			page 143


 4350 0038 FFF7FEFF 		bl	ADC_Disable
 4351              	.LVL257:
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4352              		.loc 1 1556 0
 4353 003c 0346     		mov	r3, r0
 4354 003e 0028     		cmp	r0, #0
 4355 0040 EFD1     		bne	.L467
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 4356              		.loc 1 1559 0
 4357 0042 A26D     		ldr	r2, [r4, #88]
 4358 0044 22F48852 		bic	r2, r2, #4352
 4359 0048 22F00102 		bic	r2, r2, #1
 4360 004c 42F00102 		orr	r2, r2, #1
 4361 0050 A265     		str	r2, [r4, #88]
 4362 0052 E6E7     		b	.L467
 4363              		.cfi_endproc
 4364              	.LFE318:
 4366              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 4367              		.align	1
 4368              		.global	HAL_ADC_Stop_DMA
 4369              		.syntax unified
 4370              		.thumb
 4371              		.thumb_func
 4372              		.fpu fpv4-sp-d16
 4374              	HAL_ADC_Stop_DMA:
 4375              	.LFB320:
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4376              		.loc 1 1712 0
 4377              		.cfi_startproc
 4378              		@ args = 0, pretend = 0, frame = 0
 4379              		@ frame_needed = 0, uses_anonymous_args = 0
 4380              	.LVL258:
 4381 0000 38B5     		push	{r3, r4, r5, lr}
 4382              	.LCFI30:
 4383              		.cfi_def_cfa_offset 16
 4384              		.cfi_offset 3, -16
 4385              		.cfi_offset 4, -12
 4386              		.cfi_offset 5, -8
 4387              		.cfi_offset 14, -4
 4388              	.LVL259:
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 4389              		.loc 1 1719 0
 4390 0002 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 4391 0006 012B     		cmp	r3, #1
 4392 0008 02D1     		bne	.L483
 4393 000a 0224     		movs	r4, #2
 4394              	.LVL260:
 4395              	.L476:
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4396              		.loc 1 1772 0
 4397 000c 2046     		mov	r0, r4
 4398 000e 38BD     		pop	{r3, r4, r5, pc}
 4399              	.LVL261:
 4400              	.L483:
 4401 0010 0546     		mov	r5, r0
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 4402              		.loc 1 1719 0 discriminator 2
ARM GAS  /tmp/ccWogU0R.s 			page 144


 4403 0012 0123     		movs	r3, #1
 4404 0014 80F85430 		strb	r3, [r0, #84]
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 4405              		.loc 1 1722 0 discriminator 2
 4406 0018 6C21     		movs	r1, #108
 4407 001a FFF7FEFF 		bl	ADC_ConversionStop
 4408              	.LVL262:
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4409              		.loc 1 1725 0 discriminator 2
 4410 001e 0446     		mov	r4, r0
 4411 0020 18B1     		cbz	r0, .L484
 4412              	.LVL263:
 4413              	.L477:
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 4414              		.loc 1 1768 0
 4415 0022 0023     		movs	r3, #0
 4416 0024 85F85430 		strb	r3, [r5, #84]
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4417              		.loc 1 1771 0
 4418 0028 F0E7     		b	.L476
 4419              	.LVL264:
 4420              	.L484:
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 4421              		.loc 1 1728 0
 4422 002a 2A68     		ldr	r2, [r5]
 4423 002c D368     		ldr	r3, [r2, #12]
 4424 002e 23F00103 		bic	r3, r3, #1
 4425 0032 D360     		str	r3, [r2, #12]
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 4426              		.loc 1 1732 0
 4427 0034 286D     		ldr	r0, [r5, #80]
 4428              	.LVL265:
 4429 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 4430              	.LVL266:
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4431              		.loc 1 1735 0
 4432 003a 0446     		mov	r4, r0
 4433 003c 18B1     		cbz	r0, .L478
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 4434              		.loc 1 1738 0
 4435 003e AB6D     		ldr	r3, [r5, #88]
 4436 0040 43F04003 		orr	r3, r3, #64
 4437 0044 AB65     		str	r3, [r5, #88]
 4438              	.L478:
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 4439              		.loc 1 1742 0
 4440 0046 2A68     		ldr	r2, [r5]
 4441 0048 5368     		ldr	r3, [r2, #4]
 4442 004a 23F01003 		bic	r3, r3, #16
 4443 004e 5360     		str	r3, [r2, #4]
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4444              		.loc 1 1747 0
 4445 0050 74B9     		cbnz	r4, .L479
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 4446              		.loc 1 1749 0
 4447 0052 2846     		mov	r0, r5
 4448              	.LVL267:
ARM GAS  /tmp/ccWogU0R.s 			page 145


 4449 0054 FFF7FEFF 		bl	ADC_Disable
 4450              	.LVL268:
 4451 0058 0446     		mov	r4, r0
 4452              	.LVL269:
 4453              	.L480:
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4454              		.loc 1 1757 0
 4455 005a 002C     		cmp	r4, #0
 4456 005c E1D1     		bne	.L477
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 4457              		.loc 1 1760 0
 4458 005e AB6D     		ldr	r3, [r5, #88]
 4459 0060 23F48853 		bic	r3, r3, #4352
 4460 0064 23F00103 		bic	r3, r3, #1
 4461 0068 43F00103 		orr	r3, r3, #1
 4462 006c AB65     		str	r3, [r5, #88]
 4463 006e D8E7     		b	.L477
 4464              	.LVL270:
 4465              	.L479:
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 4466              		.loc 1 1753 0
 4467 0070 2846     		mov	r0, r5
 4468              	.LVL271:
 4469 0072 FFF7FEFF 		bl	ADC_Disable
 4470              	.LVL272:
 4471 0076 F0E7     		b	.L480
 4472              		.cfi_endproc
 4473              	.LFE320:
 4475              		.text
 4476              	.Letext0:
 4477              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 4478              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 4479              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 4480              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 4481              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 4482              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 4483              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 4484              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 4485              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 4486              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 4487              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 4488              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 4489              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 4490              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 4491              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
ARM GAS  /tmp/ccWogU0R.s 			page 146


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_adc.c
     /tmp/ccWogU0R.s:18     .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccWogU0R.s:25     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccWogU0R.s:39     .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/ccWogU0R.s:46     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/ccWogU0R.s:485    .text.HAL_ADC_Init:0000000000000280 $d
     /tmp/ccWogU0R.s:496    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccWogU0R.s:503    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccWogU0R.s:516    .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/ccWogU0R.s:523    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/ccWogU0R.s:767    .text.HAL_ADC_PollForConversion:0000000000000154 $d
     /tmp/ccWogU0R.s:773    .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/ccWogU0R.s:780    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/ccWogU0R.s:944    .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/ccWogU0R.s:951    .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/ccWogU0R.s:969    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccWogU0R.s:976    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccWogU0R.s:989    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccWogU0R.s:996    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccWogU0R.s:1009   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/ccWogU0R.s:1016   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/ccWogU0R.s:1040   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/ccWogU0R.s:1047   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/ccWogU0R.s:1060   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/ccWogU0R.s:1067   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/ccWogU0R.s:1080   .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/ccWogU0R.s:1087   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/ccWogU0R.s:1568   .text.HAL_ADC_IRQHandler:00000000000002f4 $d
     /tmp/ccWogU0R.s:1574   .text.ADC_DMAConvCplt:0000000000000000 $t
     /tmp/ccWogU0R.s:1581   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/ccWogU0R.s:1679   .text.ADC_DMAError:0000000000000000 $t
     /tmp/ccWogU0R.s:1686   .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/ccWogU0R.s:1717   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/ccWogU0R.s:1724   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/ccWogU0R.s:1811   .text.HAL_ADC_ConfigChannel:000000000000008c $d
     /tmp/ccWogU0R.s:1816   .text.HAL_ADC_ConfigChannel:0000000000000090 $t
     /tmp/ccWogU0R.s:2292   .text.HAL_ADC_ConfigChannel:00000000000003d0 $d
     /tmp/ccWogU0R.s:2299   .text.HAL_ADC_ConfigChannel:00000000000003e4 $t
     /tmp/ccWogU0R.s:2414   .text.HAL_ADC_ConfigChannel:0000000000000478 $d
     /tmp/ccWogU0R.s:2421   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/ccWogU0R.s:2428   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccWogU0R.s:2719   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/ccWogU0R.s:2726   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/ccWogU0R.s:2743   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/ccWogU0R.s:2750   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
     /tmp/ccWogU0R.s:2767   .text.ADC_ConversionStop:0000000000000000 $t
     /tmp/ccWogU0R.s:2774   .text.ADC_ConversionStop:0000000000000000 ADC_ConversionStop
     /tmp/ccWogU0R.s:2951   .text.ADC_ConversionStop:00000000000000d4 $d
     /tmp/ccWogU0R.s:2956   .text.ADC_Enable:0000000000000000 $t
     /tmp/ccWogU0R.s:2963   .text.ADC_Enable:0000000000000000 ADC_Enable
     /tmp/ccWogU0R.s:3070   .text.ADC_Enable:0000000000000088 $d
     /tmp/ccWogU0R.s:3075   .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/ccWogU0R.s:3082   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/ccWogU0R.s:3245   .text.HAL_ADC_Start:0000000000000100 $d
     /tmp/ccWogU0R.s:3251   .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/ccWogU0R.s:3258   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
ARM GAS  /tmp/ccWogU0R.s 			page 147


     /tmp/ccWogU0R.s:3507   .text.HAL_ADC_Start_IT:0000000000000190 $d
     /tmp/ccWogU0R.s:3513   .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/ccWogU0R.s:3520   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/ccWogU0R.s:3717   .text.HAL_ADC_Start_DMA:0000000000000120 $d
     /tmp/ccWogU0R.s:3726   .text.ADC_Disable:0000000000000000 $t
     /tmp/ccWogU0R.s:3733   .text.ADC_Disable:0000000000000000 ADC_Disable
     /tmp/ccWogU0R.s:3840   .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/ccWogU0R.s:3847   .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/ccWogU0R.s:4206   .text.HAL_ADC_DeInit:0000000000000250 $d
     /tmp/ccWogU0R.s:4218   .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/ccWogU0R.s:4225   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/ccWogU0R.s:4290   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/ccWogU0R.s:4297   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/ccWogU0R.s:4367   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/ccWogU0R.s:4374   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_InjectedConvCpltCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_InjectedQueueOverflowCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
