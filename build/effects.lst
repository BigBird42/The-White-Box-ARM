ARM GAS  /tmp/ccXpPvRH.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"effects.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.effects_init,"ax",%progbits
  18              		.align	1
  19              		.global	effects_init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	effects_init:
  26              	.LFB0:
  27              		.file 1 "Src/effects.c"
   1:Src/effects.c **** /*
   2:Src/effects.c ****  * effects.c
   3:Src/effects.c ****  *
   4:Src/effects.c ****  *  Created on: Oct 21, 2017
   5:Src/effects.c ****  *      Author: David Knight
   6:Src/effects.c ****  */
   7:Src/effects.c **** 
   8:Src/effects.c **** #include "effects.h"
   9:Src/effects.c **** 
  10:Src/effects.c **** static short circ_buffer_sig[circ_buffer_size];
  11:Src/effects.c **** static unsigned int buffer_sig_it = circ_buffer_size - 1;
  12:Src/effects.c **** 
  13:Src/effects.c **** int effects_init(){
  28              		.loc 1 13 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  14:Src/effects.c ****     unsigned int i;
  15:Src/effects.c ****     for(i = 0; i < circ_buffer_size; i++){
  34              		.loc 1 15 0
  35 0000 0023     		movs	r3, #0
  36 0002 04E0     		b	.L2
  37              	.LVL1:
  38              	.L3:
  16:Src/effects.c ****         circ_buffer_sig[i] = 0;
  39              		.loc 1 16 0 discriminator 3
  40 0004 0021     		movs	r1, #0
  41 0006 054A     		ldr	r2, .L4
  42 0008 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
ARM GAS  /tmp/ccXpPvRH.s 			page 2


  15:Src/effects.c ****         circ_buffer_sig[i] = 0;
  43              		.loc 1 15 0 discriminator 3
  44 000c 0133     		adds	r3, r3, #1
  45              	.LVL2:
  46              	.L2:
  15:Src/effects.c ****         circ_buffer_sig[i] = 0;
  47              		.loc 1 15 0 is_stmt 0 discriminator 1
  48 000e 4BF67F32 		movw	r2, #47999
  49 0012 9342     		cmp	r3, r2
  50 0014 F6D9     		bls	.L3
  17:Src/effects.c ****     }
  18:Src/effects.c ****     return 0;
  19:Src/effects.c **** }
  51              		.loc 1 19 0 is_stmt 1
  52 0016 0020     		movs	r0, #0
  53 0018 7047     		bx	lr
  54              	.L5:
  55 001a 00BF     		.align	2
  56              	.L4:
  57 001c 00000000 		.word	.LANCHOR0
  58              		.cfi_endproc
  59              	.LFE0:
  61              		.section	.text.delay_sample,"ax",%progbits
  62              		.align	1
  63              		.global	delay_sample
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu fpv4-sp-d16
  69              	delay_sample:
  70              	.LFB1:
  20:Src/effects.c **** 
  21:Src/effects.c **** void delay_sample(short sample){
  71              		.loc 1 21 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  76              	.LVL3:
  22:Src/effects.c ****     if(buffer_sig_it == 0){
  77              		.loc 1 22 0
  78 0000 084B     		ldr	r3, .L10
  79 0002 1B68     		ldr	r3, [r3]
  80 0004 43B1     		cbz	r3, .L9
  23:Src/effects.c ****         buffer_sig_it = circ_buffer_size - 1;
  24:Src/effects.c ****     }
  25:Src/effects.c ****     else{
  26:Src/effects.c ****         buffer_sig_it--;
  81              		.loc 1 26 0
  82 0006 013B     		subs	r3, r3, #1
  83 0008 064A     		ldr	r2, .L10
  84 000a 1360     		str	r3, [r2]
  85              	.L8:
  27:Src/effects.c ****     }
  28:Src/effects.c ****     circ_buffer_sig[buffer_sig_it] = sample;
  86              		.loc 1 28 0
  87 000c 054B     		ldr	r3, .L10
ARM GAS  /tmp/ccXpPvRH.s 			page 3


  88 000e 1A68     		ldr	r2, [r3]
  89 0010 054B     		ldr	r3, .L10+4
  90 0012 23F81200 		strh	r0, [r3, r2, lsl #1]	@ movhi
  91 0016 7047     		bx	lr
  92              	.L9:
  23:Src/effects.c ****         buffer_sig_it = circ_buffer_size - 1;
  93              		.loc 1 23 0
  94 0018 4BF67F32 		movw	r2, #47999
  95 001c 014B     		ldr	r3, .L10
  96 001e 1A60     		str	r2, [r3]
  97 0020 F4E7     		b	.L8
  98              	.L11:
  99 0022 00BF     		.align	2
 100              	.L10:
 101 0024 00000000 		.word	.LANCHOR1
 102 0028 00000000 		.word	.LANCHOR0
 103              		.cfi_endproc
 104              	.LFE1:
 106              		.section	.text.delay,"ax",%progbits
 107              		.align	1
 108              		.global	delay
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 112              		.fpu fpv4-sp-d16
 114              	delay:
 115              	.LFB2:
  29:Src/effects.c **** }
  30:Src/effects.c **** 
  31:Src/effects.c **** short delay(short sample, unsigned int frames, unsigned short repeats){
 116              		.loc 1 31 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121              	.LVL4:
 122 0000 10B4     		push	{r4}
 123              	.LCFI0:
 124              		.cfi_def_cfa_offset 4
 125              		.cfi_offset 4, -4
  32:Src/effects.c ****     unsigned int delay_ref = buffer_sig_it;
 126              		.loc 1 32 0
 127 0002 0D4B     		ldr	r3, .L18
 128 0004 1C68     		ldr	r4, [r3]
 129              	.LVL5:
  33:Src/effects.c ****     for(; repeats; repeats--){
 130              		.loc 1 33 0
 131 0006 09E0     		b	.L13
 132              	.L14:
  34:Src/effects.c ****         delay_ref += frames;
  35:Src/effects.c ****         if(delay_ref >= circ_buffer_size){
  36:Src/effects.c ****             delay_ref -= circ_buffer_size;
  37:Src/effects.c ****         }
  38:Src/effects.c ****         sample += circ_buffer_sig[delay_ref];
 133              		.loc 1 38 0
 134 0008 0C4B     		ldr	r3, .L18+4
 135 000a 33F81430 		ldrh	r3, [r3, r4, lsl #1]
ARM GAS  /tmp/ccXpPvRH.s 			page 4


 136 000e 1844     		add	r0, r0, r3
 137              	.LVL6:
 138 0010 00B2     		sxth	r0, r0
 139              	.LVL7:
  39:Src/effects.c ****         sample /= 2;
 140              		.loc 1 39 0
 141 0012 00EBD070 		add	r0, r0, r0, lsr #31
 142              	.LVL8:
 143 0016 4010     		asrs	r0, r0, #1
 144              	.LVL9:
  33:Src/effects.c ****     for(; repeats; repeats--){
 145              		.loc 1 33 0
 146 0018 013A     		subs	r2, r2, #1
 147              	.LVL10:
 148 001a 92B2     		uxth	r2, r2
 149              	.LVL11:
 150              	.L13:
  33:Src/effects.c ****     for(; repeats; repeats--){
 151              		.loc 1 33 0 is_stmt 0 discriminator 1
 152 001c 42B1     		cbz	r2, .L17
  34:Src/effects.c ****         delay_ref += frames;
 153              		.loc 1 34 0 is_stmt 1
 154 001e 0C44     		add	r4, r4, r1
 155              	.LVL12:
  35:Src/effects.c ****             delay_ref -= circ_buffer_size;
 156              		.loc 1 35 0
 157 0020 4BF67F33 		movw	r3, #47999
 158 0024 9C42     		cmp	r4, r3
 159 0026 EFD9     		bls	.L14
  36:Src/effects.c ****         }
 160              		.loc 1 36 0
 161 0028 A4F53B44 		sub	r4, r4, #47872
 162              	.LVL13:
 163 002c 803C     		subs	r4, r4, #128
 164              	.LVL14:
 165 002e EBE7     		b	.L14
 166              	.L17:
  40:Src/effects.c ****     }
  41:Src/effects.c ****     return sample;
  42:Src/effects.c **** }
 167              		.loc 1 42 0
 168 0030 5DF8044B 		ldr	r4, [sp], #4
 169              	.LCFI1:
 170              		.cfi_restore 4
 171              		.cfi_def_cfa_offset 0
 172              	.LVL15:
 173 0034 7047     		bx	lr
 174              	.L19:
 175 0036 00BF     		.align	2
 176              	.L18:
 177 0038 00000000 		.word	.LANCHOR1
 178 003c 00000000 		.word	.LANCHOR0
 179              		.cfi_endproc
 180              	.LFE2:
 182              		.section	.text.taylor_cos,"ax",%progbits
 183              		.align	1
 184              		.global	taylor_cos
ARM GAS  /tmp/ccXpPvRH.s 			page 5


 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv4-sp-d16
 190              	taylor_cos:
 191              	.LFB5:
  43:Src/effects.c **** 
  44:Src/effects.c **** /*
  45:Src/effects.c ****  *
  46:Src/effects.c ****  * speed -> frequency of flange effect, 1 = .1hz, 10 = 1hz, 100 = 10hz
  47:Src/effects.c ****  * depth -> How many samples to go back for time_delay
  48:Src/effects.c ****  */
  49:Src/effects.c **** 
  50:Src/effects.c **** short flange(short sample, char speed, char depth){
  51:Src/effects.c ****     static int index = 0;
  52:Src/effects.c ****     static char index_add = 0;
  53:Src/effects.c ****     unsigned int time_delay = 0;
  54:Src/effects.c ****     float speed_float = ((float)speed)/10.0f;
  55:Src/effects.c **** 
  56:Src/effects.c ****     time_delay = depth*(1.0f-taylor_cos(2.0f*PI*speed_float*index/((float)SAMPLES_PER_SECOND)));
  57:Src/effects.c **** 
  58:Src/effects.c ****     if(index > SAMPLES_PER_SECOND/speed){
  59:Src/effects.c ****         index_add = -1;
  60:Src/effects.c ****     }
  61:Src/effects.c ****     else{
  62:Src/effects.c ****         index_add = 1;
  63:Src/effects.c ****     }
  64:Src/effects.c **** 
  65:Src/effects.c ****     index += index_add;
  66:Src/effects.c ****     return delay(sample, time_delay, 1);
  67:Src/effects.c **** 
  68:Src/effects.c **** }
  69:Src/effects.c **** 
  70:Src/effects.c **** short tanh_OD(short sample, char gain, char mix){
  71:Src/effects.c ****     float sample_temp = ((float)sample)/((float)max_sample_size);
  72:Src/effects.c ****     float gain_float = ((float)gain)/100.0f;
  73:Src/effects.c ****     float mix_float = ((float)mix)/100.0f;
  74:Src/effects.c **** 
  75:Src/effects.c ****     // need to approximate tanh with chebyshev, math.tanh uses casts to doubles
  76:Src/effects.c ****     sample_temp = (1.0f-mix_float)*taylor_tanh(sample_temp*gain_float);
  77:Src/effects.c ****     
  78:Src/effects.c ****     sample_temp += sample_temp*(mix_float);
  79:Src/effects.c ****     sample_temp *= ((float)max_sample_size)*.05f;
  80:Src/effects.c ****     
  81:Src/effects.c ****     return (short)(sample_temp);
  82:Src/effects.c **** }
  83:Src/effects.c **** 
  84:Src/effects.c **** //int vibrato(int sample, float speed, unsigned int depth){
  85:Src/effects.c **** //    static unsigned long index = 0;
  86:Src/effects.c **** //    unsigned long time_delay = 0;
  87:Src/effects.c **** //    time_delay += (depth/2)*(1 - cos(2*__PI__*speed*( (float)index/SAMPLES_PER_SECOND) ) );
  88:Src/effects.c **** //    static long index_add = 1;
  89:Src/effects.c **** //    if(index > ((float)SAMPLES_PER_SECOND/2/speed)){
  90:Src/effects.c **** //        index_add = -1;
  91:Src/effects.c **** //    }
  92:Src/effects.c **** //    else if (index == 0){
  93:Src/effects.c **** //        index_add = 1;
ARM GAS  /tmp/ccXpPvRH.s 			page 6


  94:Src/effects.c **** //    }
  95:Src/effects.c **** //    index += index_add;
  96:Src/effects.c **** //    return delay(0, time_delay, 1);
  97:Src/effects.c **** //}
  98:Src/effects.c **** //
  99:Src/effects.c **** //int chorus(int sample){
 100:Src/effects.c **** //    unsigned long time_delay = (rand() % (SAMPLES_PER_SECOND/720)) + (SAMPLES_PER_SECOND/100);
 101:Src/effects.c **** //    float amp = chorus_amp_range[rand() % 10];
 102:Src/effects.c **** //    return delay(sample, time_delay, 2);
 103:Src/effects.c **** //}
 104:Src/effects.c **** //
 105:Src/effects.c **** //int tremolo(int sample, float speed, float depth){
 106:Src/effects.c **** //    static unsigned long index = 0;
 107:Src/effects.c **** //    depth /= 200;
 108:Src/effects.c **** //    float temp = (depth)*(1-depth - depth*cos(2*__PI__*speed*( (float)index/SAMPLES_PER_SECOND) )
 109:Src/effects.c **** //
 110:Src/effects.c **** //    static long index_add = 1;
 111:Src/effects.c **** //    if(index > ((float)SAMPLES_PER_SECOND/2/speed)){
 112:Src/effects.c **** //        index_add = -1;
 113:Src/effects.c **** //    }
 114:Src/effects.c **** //    else if (index == 0){
 115:Src/effects.c **** //        index_add = 1;
 116:Src/effects.c **** //    }
 117:Src/effects.c **** //    index += index_add;
 118:Src/effects.c **** //    float sample_out = sample;
 119:Src/effects.c **** //    return (int)(sample_out*temp);
 120:Src/effects.c **** //}
 121:Src/effects.c **** 
 122:Src/effects.c **** float taylor_cos(float x){
 192              		.loc 1 122 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197              	.LVL16:
 123:Src/effects.c ****     //// Range Reduction
 124:Src/effects.c ****     //if(x < 0){
 125:Src/effects.c ****     //    x = -x;
 126:Src/effects.c ****     //}
 127:Src/effects.c ****     //x = float_mod(x, _2PI);
 128:Src/effects.c ****     //if(x > PI){
 129:Src/effects.c ****     //    x -= _2PI;
 130:Src/effects.c ****     //}
 131:Src/effects.c **** 
 132:Src/effects.c ****     return 1.0f + x*x*(0.0416667f*x*x - 0.5f);
 198              		.loc 1 132 0
 199 0000 60EE007A 		vmul.f32	s15, s0, s0
 200 0004 9FED087A 		vldr.32	s14, .L21
 201 0008 20EE077A 		vmul.f32	s14, s0, s14
 202 000c 20EE070A 		vmul.f32	s0, s0, s14
 203              	.LVL17:
 204 0010 B6EE007A 		vmov.f32	s14, #5.0e-1
 205 0014 30EE470A 		vsub.f32	s0, s0, s14
 206 0018 27EE800A 		vmul.f32	s0, s15, s0
 133:Src/effects.c **** }
 207              		.loc 1 133 0
 208 001c F7EE007A 		vmov.f32	s15, #1.0e+0
ARM GAS  /tmp/ccXpPvRH.s 			page 7


 209 0020 30EE270A 		vadd.f32	s0, s0, s15
 210 0024 7047     		bx	lr
 211              	.L22:
 212 0026 00BF     		.align	2
 213              	.L21:
 214 0028 B4AA2A3D 		.word	1026206388
 215              		.cfi_endproc
 216              	.LFE5:
 218              		.section	.text.flange,"ax",%progbits
 219              		.align	1
 220              		.global	flange
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.fpu fpv4-sp-d16
 226              	flange:
 227              	.LFB3:
  50:Src/effects.c ****     static int index = 0;
 228              		.loc 1 50 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL18:
 233 0000 70B5     		push	{r4, r5, r6, lr}
 234              	.LCFI2:
 235              		.cfi_def_cfa_offset 16
 236              		.cfi_offset 4, -16
 237              		.cfi_offset 5, -12
 238              		.cfi_offset 6, -8
 239              		.cfi_offset 14, -4
 240 0002 2DED028B 		vpush.64	{d8}
 241              	.LCFI3:
 242              		.cfi_def_cfa_offset 24
 243              		.cfi_offset 80, -24
 244              		.cfi_offset 81, -20
 245 0006 0646     		mov	r6, r0
 246 0008 0D46     		mov	r5, r1
 247 000a 08EE102A 		vmov	s16, r2	@ int
 248              	.LVL19:
  54:Src/effects.c **** 
 249              		.loc 1 54 0
 250 000e 07EE901A 		vmov	s15, r1	@ int
 251 0012 B8EE677A 		vcvt.f32.u32	s14, s15
 252 0016 F2EE047A 		vmov.f32	s15, #1.0e+1
 253 001a 87EE270A 		vdiv.f32	s0, s14, s15
 254              	.LVL20:
  56:Src/effects.c **** 
 255              		.loc 1 56 0
 256 001e DFED1B7A 		vldr.32	s15, .L28
 257 0022 20EE270A 		vmul.f32	s0, s0, s15
 258              	.LVL21:
 259 0026 1A4B     		ldr	r3, .L28+4
 260 0028 1C68     		ldr	r4, [r3]
 261 002a 07EE904A 		vmov	s15, r4	@ int
 262 002e F8EEE77A 		vcvt.f32.s32	s15, s15
 263 0032 67EE807A 		vmul.f32	s15, s15, s0
 264 0036 9FED170A 		vldr.32	s0, .L28+8
ARM GAS  /tmp/ccXpPvRH.s 			page 8


 265 003a 87EE800A 		vdiv.f32	s0, s15, s0
 266 003e FFF7FEFF 		bl	taylor_cos
 267              	.LVL22:
 268 0042 F7EE007A 		vmov.f32	s15, #1.0e+0
 269 0046 37EEC00A 		vsub.f32	s0, s15, s0
 270 004a B8EEC88A 		vcvt.f32.s32	s16, s16
 271 004e 28EE000A 		vmul.f32	s0, s16, s0
 272 0052 BCEEC00A 		vcvt.u32.f32	s0, s0
 273              	.LVL23:
  58:Src/effects.c ****         index_add = -1;
 274              		.loc 1 58 0
 275 0056 4BF68031 		movw	r1, #48000
 276 005a 91FBF5F1 		sdiv	r1, r1, r5
 277 005e 8C42     		cmp	r4, r1
 278 0060 10DC     		bgt	.L27
  62:Src/effects.c ****     }
 279              		.loc 1 62 0
 280 0062 0122     		movs	r2, #1
 281 0064 0C4B     		ldr	r3, .L28+12
 282 0066 1A70     		strb	r2, [r3]
 283              	.L25:
  65:Src/effects.c ****     return delay(sample, time_delay, 1);
 284              		.loc 1 65 0
 285 0068 0B4B     		ldr	r3, .L28+12
 286 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 287 006c 2344     		add	r3, r3, r4
 288 006e 084A     		ldr	r2, .L28+4
 289 0070 1360     		str	r3, [r2]
  66:Src/effects.c **** 
 290              		.loc 1 66 0
 291 0072 0122     		movs	r2, #1
 292 0074 10EE101A 		vmov	r1, s0	@ int
 293 0078 3046     		mov	r0, r6
 294 007a FFF7FEFF 		bl	delay
 295              	.LVL24:
  68:Src/effects.c **** 
 296              		.loc 1 68 0
 297 007e BDEC028B 		vldm	sp!, {d8}
 298              	.LCFI4:
 299              		.cfi_remember_state
 300              		.cfi_restore 80
 301              		.cfi_restore 81
 302              		.cfi_def_cfa_offset 16
 303 0082 70BD     		pop	{r4, r5, r6, pc}
 304              	.LVL25:
 305              	.L27:
 306              	.LCFI5:
 307              		.cfi_restore_state
  59:Src/effects.c ****     }
 308              		.loc 1 59 0
 309 0084 FF22     		movs	r2, #255
 310 0086 044B     		ldr	r3, .L28+12
 311 0088 1A70     		strb	r2, [r3]
 312 008a EDE7     		b	.L25
 313              	.L29:
 314              		.align	2
 315              	.L28:
ARM GAS  /tmp/ccXpPvRH.s 			page 9


 316 008c DB0FC940 		.word	1086918619
 317 0090 00000000 		.word	.LANCHOR2
 318 0094 00803B47 		.word	1195081728
 319 0098 00000000 		.word	.LANCHOR3
 320              		.cfi_endproc
 321              	.LFE3:
 323              		.section	.text.taylor_sin,"ax",%progbits
 324              		.align	1
 325              		.global	taylor_sin
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.fpu fpv4-sp-d16
 331              	taylor_sin:
 332              	.LFB6:
 134:Src/effects.c **** 
 135:Src/effects.c **** float taylor_sin(float x){
 333              		.loc 1 135 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 338              	.LVL26:
 136:Src/effects.c ****     //// Range Reduction
 137:Src/effects.c ****     //if(x < 0){
 138:Src/effects.c ****     //    return -taylor_sin(-x);
 139:Src/effects.c ****     //}
 140:Src/effects.c ****     //x = float_mod(x, _2PI) - PI;
 141:Src/effects.c ****     //if(x > PI){
 142:Src/effects.c ****     //    x -= _2PI;
 143:Src/effects.c ****     //}
 144:Src/effects.c **** 
 145:Src/effects.c ****     return x*(0.9996949f + x*x*(0.0083333f*x*x - 0.1666667f));
 339              		.loc 1 145 0
 340 0000 20EE007A 		vmul.f32	s14, s0, s0
 341 0004 DFED097A 		vldr.32	s15, .L31
 342 0008 60EE277A 		vmul.f32	s15, s0, s15
 343 000c 60EE277A 		vmul.f32	s15, s0, s15
 344 0010 DFED076A 		vldr.32	s13, .L31+4
 345 0014 77EEE67A 		vsub.f32	s15, s15, s13
 346 0018 67EE277A 		vmul.f32	s15, s14, s15
 347 001c 9FED057A 		vldr.32	s14, .L31+8
 348 0020 77EE877A 		vadd.f32	s15, s15, s14
 146:Src/effects.c **** }
 349              		.loc 1 146 0
 350 0024 20EE270A 		vmul.f32	s0, s0, s15
 351              	.LVL27:
 352 0028 7047     		bx	lr
 353              	.L32:
 354 002a 00BF     		.align	2
 355              	.L31:
 356 002c 6588083C 		.word	1007192165
 357 0030 ADAA2A3E 		.word	1042983597
 358 0034 01EC7F3F 		.word	1065348097
 359              		.cfi_endproc
 360              	.LFE6:
 362              		.section	.text.taylor_exp,"ax",%progbits
ARM GAS  /tmp/ccXpPvRH.s 			page 10


 363              		.align	1
 364              		.global	taylor_exp
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu fpv4-sp-d16
 370              	taylor_exp:
 371              	.LFB7:
 147:Src/effects.c **** 
 148:Src/effects.c **** float taylor_exp(float x){
 372              		.loc 1 148 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              		@ link register save eliminated.
 377              	.LVL28:
 149:Src/effects.c ****     return 1 + x*(1.5f + .166667f*x);
 378              		.loc 1 149 0
 379 0000 DFED077A 		vldr.32	s15, .L34
 380 0004 60EE277A 		vmul.f32	s15, s0, s15
 381 0008 B7EE087A 		vmov.f32	s14, #1.5e+0
 382 000c 77EE877A 		vadd.f32	s15, s15, s14
 383 0010 20EE270A 		vmul.f32	s0, s0, s15
 384              	.LVL29:
 150:Src/effects.c **** }
 385              		.loc 1 150 0
 386 0014 F7EE007A 		vmov.f32	s15, #1.0e+0
 387 0018 30EE270A 		vadd.f32	s0, s0, s15
 388 001c 7047     		bx	lr
 389              	.L35:
 390 001e 00BF     		.align	2
 391              	.L34:
 392 0020 C1AA2A3E 		.word	1042983617
 393              		.cfi_endproc
 394              	.LFE7:
 396              		.section	.text.taylor_tanh,"ax",%progbits
 397              		.align	1
 398              		.global	taylor_tanh
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 402              		.fpu fpv4-sp-d16
 404              	taylor_tanh:
 405              	.LFB8:
 151:Src/effects.c **** 
 152:Src/effects.c **** float taylor_tanh(float x){
 406              		.loc 1 152 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410              		@ link register save eliminated.
 411              	.LVL30:
 153:Src/effects.c ****     return x*(1.0f + x*x*(0.1333333f*x*x - .3333333f));
 412              		.loc 1 153 0
 413 0000 20EE007A 		vmul.f32	s14, s0, s0
 414 0004 DFED097A 		vldr.32	s15, .L37
 415 0008 60EE277A 		vmul.f32	s15, s0, s15
ARM GAS  /tmp/ccXpPvRH.s 			page 11


 416 000c 60EE277A 		vmul.f32	s15, s0, s15
 417 0010 DFED076A 		vldr.32	s13, .L37+4
 418 0014 77EEE67A 		vsub.f32	s15, s15, s13
 419 0018 67EE277A 		vmul.f32	s15, s14, s15
 420 001c B7EE007A 		vmov.f32	s14, #1.0e+0
 421 0020 77EE877A 		vadd.f32	s15, s15, s14
 154:Src/effects.c **** }
 422              		.loc 1 154 0
 423 0024 20EE270A 		vmul.f32	s0, s0, s15
 424              	.LVL31:
 425 0028 7047     		bx	lr
 426              	.L38:
 427 002a 00BF     		.align	2
 428              	.L37:
 429 002c 8688083E 		.word	1040746630
 430 0030 AAAAAA3E 		.word	1051372202
 431              		.cfi_endproc
 432              	.LFE8:
 434              		.section	.text.tanh_OD,"ax",%progbits
 435              		.align	1
 436              		.global	tanh_OD
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 440              		.fpu fpv4-sp-d16
 442              	tanh_OD:
 443              	.LFB4:
  70:Src/effects.c ****     float sample_temp = ((float)sample)/((float)max_sample_size);
 444              		.loc 1 70 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 8
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              	.LVL32:
 449 0000 00B5     		push	{lr}
 450              	.LCFI6:
 451              		.cfi_def_cfa_offset 4
 452              		.cfi_offset 14, -4
 453 0002 2DED028B 		vpush.64	{d8}
 454              	.LCFI7:
 455              		.cfi_def_cfa_offset 12
 456              		.cfi_offset 80, -12
 457              		.cfi_offset 81, -8
 458 0006 83B0     		sub	sp, sp, #12
 459              	.LCFI8:
 460              		.cfi_def_cfa_offset 24
  71:Src/effects.c ****     float gain_float = ((float)gain)/100.0f;
 461              		.loc 1 71 0
 462 0008 07EE900A 		vmov	s15, r0	@ int
 463 000c B8EEE77A 		vcvt.f32.s32	s14, s15
 464 0010 DFED177A 		vldr.32	s15, .L41
 465 0014 87EE270A 		vdiv.f32	s0, s14, s15
 466              	.LVL33:
  72:Src/effects.c ****     float mix_float = ((float)mix)/100.0f;
 467              		.loc 1 72 0
 468 0018 07EE901A 		vmov	s15, r1	@ int
 469 001c F8EE676A 		vcvt.f32.u32	s13, s15
 470 0020 DFED147A 		vldr.32	s15, .L41+4
ARM GAS  /tmp/ccXpPvRH.s 			page 12


 471 0024 86EEA77A 		vdiv.f32	s14, s13, s15
 472              	.LVL34:
  73:Src/effects.c **** 
 473              		.loc 1 73 0
 474 0028 06EE902A 		vmov	s13, r2	@ int
 475 002c F8EE666A 		vcvt.f32.u32	s13, s13
 476 0030 C6EEA78A 		vdiv.f32	s17, s13, s15
 477              	.LVL35:
  76:Src/effects.c ****     
 478              		.loc 1 76 0
 479 0034 B7EE008A 		vmov.f32	s16, #1.0e+0
 480 0038 38EE688A 		vsub.f32	s16, s16, s17
 481 003c 20EE070A 		vmul.f32	s0, s0, s14
 482              	.LVL36:
 483 0040 FFF7FEFF 		bl	taylor_tanh
 484              	.LVL37:
 485 0044 28EE000A 		vmul.f32	s0, s16, s0
 486              	.LVL38:
  78:Src/effects.c ****     sample_temp *= ((float)max_sample_size)*.05f;
 487              		.loc 1 78 0
 488 0048 68EE808A 		vmul.f32	s17, s17, s0
 489              	.LVL39:
 490 004c 30EE280A 		vadd.f32	s0, s0, s17
 491              	.LVL40:
  79:Src/effects.c ****     
 492              		.loc 1 79 0
 493 0050 DFED097A 		vldr.32	s15, .L41+8
 494 0054 20EE270A 		vmul.f32	s0, s0, s15
 495              	.LVL41:
  81:Src/effects.c **** }
 496              		.loc 1 81 0
 497 0058 FDEEC07A 		vcvt.s32.f32	s15, s0
 498 005c CDED017A 		vstr.32	s15, [sp, #4]	@ int
  82:Src/effects.c **** 
 499              		.loc 1 82 0
 500 0060 BDF90400 		ldrsh	r0, [sp, #4]
 501 0064 03B0     		add	sp, sp, #12
 502              	.LCFI9:
 503              		.cfi_def_cfa_offset 12
 504              		@ sp needed
 505 0066 BDEC028B 		vldm	sp!, {d8}
 506              	.LCFI10:
 507              		.cfi_restore 80
 508              		.cfi_restore 81
 509              		.cfi_def_cfa_offset 4
 510 006a 5DF804FB 		ldr	pc, [sp], #4
 511              	.L42:
 512 006e 00BF     		.align	2
 513              	.L41:
 514 0070 00F07F45 		.word	1166012416
 515 0074 0000C842 		.word	1120403456
 516 0078 00C04C43 		.word	1129103360
 517              		.cfi_endproc
 518              	.LFE4:
 520              		.section	.text.float_mod,"ax",%progbits
 521              		.align	1
 522              		.global	float_mod
ARM GAS  /tmp/ccXpPvRH.s 			page 13


 523              		.syntax unified
 524              		.thumb
 525              		.thumb_func
 526              		.fpu fpv4-sp-d16
 528              	float_mod:
 529              	.LFB9:
 155:Src/effects.c **** 
 156:Src/effects.c **** float float_mod(float a, float b){
 530              		.loc 1 156 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 535              	.LVL42:
 157:Src/effects.c ****     return (a - b*(int)(a/b));
 536              		.loc 1 157 0
 537 0000 C0EE207A 		vdiv.f32	s15, s0, s1
 538 0004 FDEEE77A 		vcvt.s32.f32	s15, s15
 539 0008 F8EEE77A 		vcvt.f32.s32	s15, s15
 540 000c 67EEA00A 		vmul.f32	s1, s15, s1
 541              	.LVL43:
 158:Src/effects.c **** }
 542              		.loc 1 158 0
 543 0010 30EE600A 		vsub.f32	s0, s0, s1
 544              	.LVL44:
 545 0014 7047     		bx	lr
 546              		.cfi_endproc
 547              	.LFE9:
 549              		.section	.bss.circ_buffer_sig,"aw",%nobits
 550              		.align	2
 551              		.set	.LANCHOR0,. + 0
 554              	circ_buffer_sig:
 555 0000 00000000 		.space	96000
 555      00000000 
 555      00000000 
 555      00000000 
 555      00000000 
 556              		.section	.bss.index.6016,"aw",%nobits
 557              		.align	2
 558              		.set	.LANCHOR2,. + 0
 561              	index.6016:
 562 0000 00000000 		.space	4
 563              		.section	.bss.index_add.6017,"aw",%nobits
 564              		.set	.LANCHOR3,. + 0
 567              	index_add.6017:
 568 0000 00       		.space	1
 569              		.section	.data.buffer_sig_it,"aw",%progbits
 570              		.align	2
 571              		.set	.LANCHOR1,. + 0
 574              	buffer_sig_it:
 575 0000 7FBB0000 		.word	47999
 576              		.text
 577              	.Letext0:
 578              		.file 2 "/usr/arm-none-eabi/include/sys/lock.h"
 579              		.file 3 "/usr/arm-none-eabi/include/sys/_types.h"
 580              		.file 4 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 581              		.file 5 "/usr/arm-none-eabi/include/sys/reent.h"
ARM GAS  /tmp/ccXpPvRH.s 			page 14


 582              		.file 6 "/usr/arm-none-eabi/include/math.h"
ARM GAS  /tmp/ccXpPvRH.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 effects.c
     /tmp/ccXpPvRH.s:18     .text.effects_init:0000000000000000 $t
     /tmp/ccXpPvRH.s:25     .text.effects_init:0000000000000000 effects_init
     /tmp/ccXpPvRH.s:57     .text.effects_init:000000000000001c $d
     /tmp/ccXpPvRH.s:62     .text.delay_sample:0000000000000000 $t
     /tmp/ccXpPvRH.s:69     .text.delay_sample:0000000000000000 delay_sample
     /tmp/ccXpPvRH.s:101    .text.delay_sample:0000000000000024 $d
     /tmp/ccXpPvRH.s:107    .text.delay:0000000000000000 $t
     /tmp/ccXpPvRH.s:114    .text.delay:0000000000000000 delay
     /tmp/ccXpPvRH.s:177    .text.delay:0000000000000038 $d
     /tmp/ccXpPvRH.s:183    .text.taylor_cos:0000000000000000 $t
     /tmp/ccXpPvRH.s:190    .text.taylor_cos:0000000000000000 taylor_cos
     /tmp/ccXpPvRH.s:214    .text.taylor_cos:0000000000000028 $d
     /tmp/ccXpPvRH.s:219    .text.flange:0000000000000000 $t
     /tmp/ccXpPvRH.s:226    .text.flange:0000000000000000 flange
     /tmp/ccXpPvRH.s:316    .text.flange:000000000000008c $d
     /tmp/ccXpPvRH.s:324    .text.taylor_sin:0000000000000000 $t
     /tmp/ccXpPvRH.s:331    .text.taylor_sin:0000000000000000 taylor_sin
     /tmp/ccXpPvRH.s:356    .text.taylor_sin:000000000000002c $d
     /tmp/ccXpPvRH.s:363    .text.taylor_exp:0000000000000000 $t
     /tmp/ccXpPvRH.s:370    .text.taylor_exp:0000000000000000 taylor_exp
     /tmp/ccXpPvRH.s:392    .text.taylor_exp:0000000000000020 $d
     /tmp/ccXpPvRH.s:397    .text.taylor_tanh:0000000000000000 $t
     /tmp/ccXpPvRH.s:404    .text.taylor_tanh:0000000000000000 taylor_tanh
     /tmp/ccXpPvRH.s:429    .text.taylor_tanh:000000000000002c $d
     /tmp/ccXpPvRH.s:435    .text.tanh_OD:0000000000000000 $t
     /tmp/ccXpPvRH.s:442    .text.tanh_OD:0000000000000000 tanh_OD
     /tmp/ccXpPvRH.s:514    .text.tanh_OD:0000000000000070 $d
     /tmp/ccXpPvRH.s:521    .text.float_mod:0000000000000000 $t
     /tmp/ccXpPvRH.s:528    .text.float_mod:0000000000000000 float_mod
     /tmp/ccXpPvRH.s:550    .bss.circ_buffer_sig:0000000000000000 $d
     /tmp/ccXpPvRH.s:554    .bss.circ_buffer_sig:0000000000000000 circ_buffer_sig
     /tmp/ccXpPvRH.s:557    .bss.index.6016:0000000000000000 $d
     /tmp/ccXpPvRH.s:561    .bss.index.6016:0000000000000000 index.6016
     /tmp/ccXpPvRH.s:567    .bss.index_add.6017:0000000000000000 index_add.6017
     /tmp/ccXpPvRH.s:568    .bss.index_add.6017:0000000000000000 $d
     /tmp/ccXpPvRH.s:570    .data.buffer_sig_it:0000000000000000 $d
     /tmp/ccXpPvRH.s:574    .data.buffer_sig_it:0000000000000000 buffer_sig_it
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
